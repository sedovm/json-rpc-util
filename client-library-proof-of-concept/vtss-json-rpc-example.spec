{
  "types": [
    {
      "type-name": "char *",
      "class": "TypeSpecification",
      "description": "A variable length string",
      "json-encoding-type": "String"
    },
    {
      "type-name": "int16_t",
      "class": "TypeSpecification",
      "description": "16 bit signed integer",
      "json-encoding-type": "Number"
    },
    {
      "type-name": "int32_t",
      "class": "TypeSpecification",
      "description": "32 bit signed integer",
      "json-encoding-type": "Number"
    },
    {
      "type-name": "int64_t",
      "class": "TypeSpecification",
      "description": "64 bit signed integer",
      "json-encoding-type": "Number"
    },
    {
      "type-name": "std::vector<std::string>",
      "class": "TypeSpecification",
      "description": "List of strings",
      "json-encoding-type": "Array"
    },
    {
      "type-name": "time_t",
      "class": "TypeSpecification",
      "description": "Seconds since 1970/1/1",
      "json-encoding-type": "String"
    },
    {
      "type-name": "uint16_t",
      "class": "TypeSpecification",
      "description": "16 bit unsigned integer",
      "json-encoding-type": "Number"
    },
    {
      "type-name": "uint32_t",
      "class": "TypeSpecification",
      "description": "32 bit unsigned integer",
      "json-encoding-type": "Number"
    },
    {
      "type-name": "uint64_t",
      "class": "TypeSpecification",
      "description": "64 bit unsigned integer",
      "json-encoding-type": "Number"
    },
    {
      "type-name": "uint8_t",
      "class": "TypeSpecification",
      "description": "8 bit unsigned integer",
      "json-encoding-type": "Number"
    },
    {
      "type-name": "unsigned char *",
      "class": "TypeSpecification",
      "description": "A variable length binary string. The string is HEX encoded",
      "json-encoding-type": "String"
    },
    {
      "type-name": "vtss_appl_access_mgmt_statistics_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "HttpReceivedPkts",
          "type": "uint32_t",
          "description": "Received count of frames via HTTP."
        },
        {
          "name": "HttpAllowedPkts",
          "type": "uint32_t",
          "description": "Permit count of frames via HTTP."
        },
        {
          "name": "HttpDiscardedPkts",
          "type": "uint32_t",
          "description": "Drop count of frames via HTTP."
        },
        {
          "name": "HttpsReceivedPkts",
          "type": "uint32_t",
          "description": "Received count of frames via HTTPS."
        },
        {
          "name": "HttpsAllowedPkts",
          "type": "uint32_t",
          "description": "Permit count of frames via HTTPS."
        },
        {
          "name": "HttpsDiscardedPkts",
          "type": "uint32_t",
          "description": "Drop count of frames via HTTPS."
        },
        {
          "name": "SnmpReceivedPkts",
          "type": "uint32_t",
          "description": "Received count of frames via SNMP."
        },
        {
          "name": "SnmpAllowedPkts",
          "type": "uint32_t",
          "description": "Permit count of frames via SNMP."
        },
        {
          "name": "SnmpDiscardedPkts",
          "type": "uint32_t",
          "description": "Drop count of frames via SNMP."
        },
        {
          "name": "TelnetReceivedPkts",
          "type": "uint32_t",
          "description": "Received count of frames via TELNET."
        },
        {
          "name": "TelnetAllowedPkts",
          "type": "uint32_t",
          "description": "Permit count of frames via TELNET."
        },
        {
          "name": "TelnetDiscardedPkts",
          "type": "uint32_t",
          "description": "Drop count of frames via TELNET."
        },
        {
          "name": "SshReceivedPkts",
          "type": "uint32_t",
          "description": "Received count of frames via SSH."
        },
        {
          "name": "SshAllowedPkts",
          "type": "uint32_t",
          "description": "Permit count of frames via SSH."
        },
        {
          "name": "SshDiscardedPkts",
          "type": "uint32_t",
          "description": "Drop count of frames via SSH."
        }
      ]
    },
    {
      "type-name": "vtss_appl_acl_ace_arp_op_t",
      "class": "Enum",
      "description": "ARP opcode.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "any",
          "value": "0"
        },
        {
          "name": "arp",
          "value": "1"
        },
        {
          "name": "rarp",
          "value": "2"
        },
        {
          "name": "other",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_acl_ace_frame_type_t",
      "class": "Enum",
      "description": "The frame type of the ACE.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "any",
          "value": "0"
        },
        {
          "name": "etype",
          "value": "1"
        },
        {
          "name": "arp",
          "value": "4"
        },
        {
          "name": "ipv4",
          "value": "5"
        },
        {
          "name": "ipv6",
          "value": "6"
        }
      ]
    },
    {
      "type-name": "vtss_appl_acl_ace_ingress_mode_t",
      "class": "Enum",
      "description": "The ingress port list mode of the ACE.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "any",
          "value": "0"
        },
        {
          "name": "specific",
          "value": "1"
        },
        {
          "name": "switch",
          "value": "2"
        },
        {
          "name": "switchport",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_acl_ace_vlan_tagged_t",
      "class": "Enum",
      "description": "VLAN tagged/untagged.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "any",
          "value": "0"
        },
        {
          "name": "untagged",
          "value": "1"
        },
        {
          "name": "tagged",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_acl_hit_action_t",
      "class": "Enum",
      "description": "The hit action.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "permit",
          "value": "0"
        },
        {
          "name": "deny",
          "value": "1"
        },
        {
          "name": "redirect",
          "value": "2"
        },
        {
          "name": "egress",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_acl_status_ace_hit_count_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Counter",
          "type": "uint32_t",
          "description": "The hit count of this ACE."
        }
      ]
    },
    {
      "type-name": "vtss_appl_acl_status_interface_hit_count_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Counter",
          "type": "uint32_t",
          "description": "The hit count of this interface."
        }
      ]
    },
    {
      "type-name": "vtss_appl_alarm_sample_t",
      "class": "Enum",
      "description": "This enumeration is to select the rmon sample type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "ABSOLUTE",
          "value": "1"
        },
        {
          "name": "DELTA",
          "value": "2"
        },
        {
          "name": "END",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_alarm_t",
      "class": "Enum",
      "description": "This enumeration is to select the rmon startup type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "NOTHING",
          "value": "0"
        },
        {
          "name": "RISING",
          "value": "1"
        },
        {
          "name": "FALLING",
          "value": "2"
        },
        {
          "name": "BOTH",
          "value": "3"
        },
        {
          "name": "END",
          "value": "4"
        }
      ]
    },
    {
      "type-name": "vtss_appl_alarm_value_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Value",
          "type": "int32_t",
          "description": "RMON alarm trigger count value"
        }
      ]
    },
    {
      "type-name": "vtss_appl_arp_inspection_log_t",
      "class": "Enum",
      "description": "This enumeration indicates the ARP entry log type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "deny",
          "value": "1"
        },
        {
          "name": "permit",
          "value": "2"
        },
        {
          "name": "all",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_arp_inspection_status_t",
      "class": "Enum",
      "description": "This enumeration indicates the ARP entry registration type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "static",
          "value": "0"
        },
        {
          "name": "dynamic",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_arp_inspection_vlan_config_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "LogType",
          "type": "vtss_appl_arp_inspection_log_t",
          "description": "The capability to log the inspected entries per VLAN basis. none(0) will log nothing. deny(1) will log the denied entries. permit(2) will log the permitted entries. all(3) will log all kinds of inspected entries."
        }
      ]
    },
    {
      "type-name": "vtss_appl_auth_acct_method_t",
      "class": "Enum",
      "description": "This enumeration defines the available accounting methods.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "tacacs",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_auth_authen_method_t",
      "class": "Enum",
      "description": "This enumeration defines the available authentication methods.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "local",
          "value": "1"
        },
        {
          "name": "radius",
          "value": "2"
        },
        {
          "name": "tacacs",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_auth_author_method_t",
      "class": "Enum",
      "description": "This enumeration defines the available authorization methods.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "tacacs",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_auth_radius_server_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Address",
          "type": "char *",
          "description": "IPv4/IPv6 address or hostname of this server"
        },
        {
          "name": "AuthPort",
          "type": "uint32_t",
          "description": "Authentication port number (UDP) for use for this server"
        },
        {
          "name": "AcctPort",
          "type": "uint32_t",
          "description": "Accounting port number (UDP) to use for this server"
        },
        {
          "name": "Timeout",
          "type": "uint32_t",
          "description": "Seconds to wait for a response from this server. Use global timeout if zero"
        },
        {
          "name": "Retransmit",
          "type": "uint32_t",
          "description": "Number of times a request is resent to an unresponding server. Use global retransmit if zero"
        },
        {
          "name": "Key",
          "type": "char *",
          "description": "The secret key to use for this server. Use global key if empty"
        }
      ]
    },
    {
      "type-name": "vtss_appl_auth_tacacs_global_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Timeout",
          "type": "uint32_t",
          "description": "Global timeout for for TACACS servers. Can be overridden by individual host entries. (1 to 1000 seconds)"
        },
        {
          "name": "Deadtime",
          "type": "uint32_t",
          "description": "Global deadtime for TACACS servers. (0 to 1440 minutes)"
        },
        {
          "name": "Key",
          "type": "char *",
          "description": "Global secret key for TACACS servers. Can be overridden by individual host entries."
        }
      ]
    },
    {
      "type-name": "vtss_appl_auth_tacacs_server_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Address",
          "type": "char *",
          "description": "IPv4/IPv6 address or hostname of this server"
        },
        {
          "name": "AuthPort",
          "type": "uint32_t",
          "description": "Authentication port number (TCP) to use for this server"
        },
        {
          "name": "Timeout",
          "type": "uint32_t",
          "description": "Seconds to wait for a response from this server. Use global timeout if zero"
        },
        {
          "name": "Key",
          "type": "char *",
          "description": "The secret key to use for this server. Use global key if empty"
        }
      ]
    },
    {
      "type-name": "vtss_appl_clock_summertime_mode_t",
      "class": "Enum",
      "description": "This enumeration defines the available summer time(Daylight Saving) mode.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "disable",
          "value": "0"
        },
        {
          "name": "recurring",
          "value": "1"
        },
        {
          "name": "nonRecurring",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ddmi_event_state_t",
      "class": "Enum",
      "description": "This enumeration defines the session type in mirror function.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "regular",
          "value": "0"
        },
        {
          "name": "highWarn",
          "value": "1"
        },
        {
          "name": "lowWarn",
          "value": "2"
        },
        {
          "name": "highAlarm",
          "value": "3"
        },
        {
          "name": "lowAlarm",
          "value": "4"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ddmi_event_type_t",
      "class": "Enum",
      "description": "This enumeration defines the session type in mirror function.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "temperature",
          "value": "0"
        },
        {
          "name": "voltage",
          "value": "1"
        },
        {
          "name": "bias",
          "value": "2"
        },
        {
          "name": "txPower",
          "value": "3"
        },
        {
          "name": "rxPower",
          "value": "4"
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp6c_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "MaxNumberOfInterfaces",
          "type": "uint32_t",
          "description": "The maximum number of DHCPv6 client interfaces supported by the device."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp6c_intf_cntr_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "TxSolicit",
          "type": "uint32_t",
          "description": "Transmitted DHCPv6 SOLICIT message count."
        },
        {
          "name": "TxRequest",
          "type": "uint32_t",
          "description": "Transmitted DHCPv6 REQUEST message count."
        },
        {
          "name": "TxConfirm",
          "type": "uint32_t",
          "description": "Transmitted DHCPv6 CONFIRM message count."
        },
        {
          "name": "TxRenew",
          "type": "uint32_t",
          "description": "Transmitted DHCPv6 RENEW message count."
        },
        {
          "name": "TxRebind",
          "type": "uint32_t",
          "description": "Transmitted DHCPv6 REBIND message count."
        },
        {
          "name": "TxRelease",
          "type": "uint32_t",
          "description": "Transmitted DHCPv6 RELEASE message count."
        },
        {
          "name": "TxDecline",
          "type": "uint32_t",
          "description": "Transmitted DHCPv6 DECLINE message count."
        },
        {
          "name": "TxInfoRequest",
          "type": "uint32_t",
          "description": "Transmitted DHCPv6 INFORMATION-REQUEST message count."
        },
        {
          "name": "TxError",
          "type": "uint32_t",
          "description": "Transmitted DHCPv6 message error count."
        },
        {
          "name": "TxDrop",
          "type": "uint32_t",
          "description": "Transmitted DHCPv6 message drop count."
        },
        {
          "name": "TxUnknown",
          "type": "uint32_t",
          "description": "Transmitted DHCPv6 unknown message type count."
        },
        {
          "name": "RxAdvertise",
          "type": "uint32_t",
          "description": "Received DHCPv6 ADVERTISE message count."
        },
        {
          "name": "RxReply",
          "type": "uint32_t",
          "description": "Received DHCPv6 REPLY message count."
        },
        {
          "name": "RxReconfigure",
          "type": "uint32_t",
          "description": "Received DHCPv6 RECONFIGURE message count."
        },
        {
          "name": "RxError",
          "type": "uint32_t",
          "description": "Received DHCPv6 message error count."
        },
        {
          "name": "RxDrop",
          "type": "uint32_t",
          "description": "Received DHCPv6 message drop count."
        },
        {
          "name": "RxUnknown",
          "type": "uint32_t",
          "description": "Received DHCPv6 unknown message type count."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_relay_information_policy_t",
      "class": "Enum",
      "description": "This enumeration indicates the DHCP relay information policy type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "replace",
          "value": "0"
        },
        {
          "name": "keep",
          "value": "1"
        },
        {
          "name": "drop",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_relay_statistics_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ServerPacketsRelayed",
          "type": "uint32_t",
          "description": "Packets relayed from server to client."
        },
        {
          "name": "ServerPacketErrors",
          "type": "uint32_t",
          "description": "Errors sending packets to servers."
        },
        {
          "name": "ClientPacketsRelayed",
          "type": "uint32_t",
          "description": "Packets relayed from client to server."
        },
        {
          "name": "ClientPacketErrors",
          "type": "uint32_t",
          "description": "Errors sending packets to clients."
        },
        {
          "name": "AgentOptionErrors",
          "type": "uint32_t",
          "description": "Number of packets forwarded without agent options because there was no room."
        },
        {
          "name": "MissingAgentOption",
          "type": "uint32_t",
          "description": "Number of packets dropped because no RAI option matching our ID was found."
        },
        {
          "name": "BadCircuitId",
          "type": "uint32_t",
          "description": "Circuit ID option in matching RAI option did not match any known circuit ID."
        },
        {
          "name": "MissingCircuitId",
          "type": "uint32_t",
          "description": "Circuit ID option in matching RAI option was missing."
        },
        {
          "name": "BadRemoteId",
          "type": "uint32_t",
          "description": "Remote ID option in matching RAI option did not match any known remote ID."
        },
        {
          "name": "MissingRemoteId",
          "type": "uint32_t",
          "description": "Remote ID option in matching RAI option was missing."
        },
        {
          "name": "ReceiveServerPackets",
          "type": "uint32_t",
          "description": "Receive DHCP message from server."
        },
        {
          "name": "ReceiveClientPackets",
          "type": "uint32_t",
          "description": "Receive DHCP message from client."
        },
        {
          "name": "ReceiveClientAgentOption",
          "type": "uint32_t",
          "description": "Receive relay agent information option from client."
        },
        {
          "name": "ReplaceAgentOption",
          "type": "uint32_t",
          "description": "Replace relay agent information option."
        },
        {
          "name": "KeepAgentOption",
          "type": "uint32_t",
          "description": "Keep relay agent information option."
        },
        {
          "name": "DropAgentOption",
          "type": "uint32_t",
          "description": "Drop relay agent information option."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_server_binding_state_t",
      "class": "Enum",
      "description": "This enumeration defines the state of binding.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "allocated",
          "value": "1"
        },
        {
          "name": "committed",
          "value": "2"
        },
        {
          "name": "expired",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_server_binding_type_t",
      "class": "Enum",
      "description": "This enumeration defines the type of binding.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "automatic",
          "value": "1"
        },
        {
          "name": "manual",
          "value": "2"
        },
        {
          "name": "expired",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_server_client_identifier_type_t",
      "class": "Enum",
      "description": "This enumeration defines the type of client identifier.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "fqdn",
          "value": "1"
        },
        {
          "name": "mac",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_server_netbios_node_type_t",
      "class": "Enum",
      "description": "This enumeration defines the type of NetBIOS node.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "nodeNone",
          "value": "0"
        },
        {
          "name": "nodeB",
          "value": "1"
        },
        {
          "name": "nodeP",
          "value": "2"
        },
        {
          "name": "nodeM",
          "value": "3"
        },
        {
          "name": "nodeH",
          "value": "4"
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_server_pool_type_t",
      "class": "Enum",
      "description": "This enumeration defines the type of DHCP pool.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "network",
          "value": "1"
        },
        {
          "name": "host",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_server_status_statistics_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "DiscoverCnt",
          "type": "uint32_t",
          "description": "Number of DHCP DISCOVER messages received."
        },
        {
          "name": "OfferCnt",
          "type": "uint32_t",
          "description": "Number of DHCP OFFER messages sent."
        },
        {
          "name": "RequestCnt",
          "type": "uint32_t",
          "description": "Number of DHCP REQUEST messages received."
        },
        {
          "name": "AckCnt",
          "type": "uint32_t",
          "description": "Number of DHCP ACK messages sent."
        },
        {
          "name": "NakCnt",
          "type": "uint32_t",
          "description": "Number of DHCP NAK messages sent."
        },
        {
          "name": "DeclineCnt",
          "type": "uint32_t",
          "description": "Number of DHCP DECLINE messages received."
        },
        {
          "name": "ReleaseCnt",
          "type": "uint32_t",
          "description": "Number of DHCP RELEASE messages received."
        },
        {
          "name": "InformCnt",
          "type": "uint32_t",
          "description": "Number of DHCP INFORM messages received."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_snooping_port_statistics_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "RxDiscover",
          "type": "uint32_t",
          "description": "The number of discover (option 53 with value 1) packets received."
        },
        {
          "name": "RxOffer",
          "type": "uint32_t",
          "description": "The number of offer (option 53 with value 2) packets received."
        },
        {
          "name": "RxRequest",
          "type": "uint32_t",
          "description": "The number of request (option 53 with value 3) packets received."
        },
        {
          "name": "RxDecline",
          "type": "uint32_t",
          "description": "The number of decline (option 53 with value 4) packets received."
        },
        {
          "name": "RxAck",
          "type": "uint32_t",
          "description": "The number of ACK (option 53 with value 5) packets received."
        },
        {
          "name": "RxNak",
          "type": "uint32_t",
          "description": "The number of NAK (option 53 with value 6) packets received."
        },
        {
          "name": "RxRelease",
          "type": "uint32_t",
          "description": "The number of release (option 53 with value 7) packets received."
        },
        {
          "name": "RxInform",
          "type": "uint32_t",
          "description": "The number of inform (option 53 with value 8) packets received."
        },
        {
          "name": "RxLeaseQuery",
          "type": "uint32_t",
          "description": "The number of lease query (option 53 with value 10) packets received."
        },
        {
          "name": "RxLeaseUnassigned",
          "type": "uint32_t",
          "description": "The number of lease unassigned (option 53 with value 11) packets received."
        },
        {
          "name": "RxLeaseUnknown",
          "type": "uint32_t",
          "description": "The number of lease unknown (option 53 with value 12) packets received."
        },
        {
          "name": "RxLeaseActive",
          "type": "uint32_t",
          "description": "The number of lease active (option 53 with value 13) packets received."
        },
        {
          "name": "RxDiscardChksumErr",
          "type": "uint32_t",
          "description": "The number of discard packet that IP/UDP checksum is error."
        },
        {
          "name": "RxDiscardUntrust",
          "type": "uint32_t",
          "description": "The number of discard packet that are coming from untrusted port."
        },
        {
          "name": "TxDiscover",
          "type": "uint32_t",
          "description": "The number of discover (option 53 with value 1) packets transmited."
        },
        {
          "name": "TxOffer",
          "type": "uint32_t",
          "description": "The number of offer (option 53 with value 2) packets transmited."
        },
        {
          "name": "TxRequest",
          "type": "uint32_t",
          "description": "The number of request (option 53 with value 3) packets transmited."
        },
        {
          "name": "TxDecline",
          "type": "uint32_t",
          "description": "The number of decline (option 53 with value 4) packets transmited."
        },
        {
          "name": "TxAck",
          "type": "uint32_t",
          "description": "The number of ACK (option 53 with value 5) packets transmited."
        },
        {
          "name": "TxNak",
          "type": "uint32_t",
          "description": "The number of NAK (option 53 with value 6) packets transmited."
        },
        {
          "name": "TxRelease",
          "type": "uint32_t",
          "description": "The number of release (option 53 with value 7) packets transmited."
        },
        {
          "name": "TxInform",
          "type": "uint32_t",
          "description": "The number of inform (option 53 with value 8) packets transmited."
        },
        {
          "name": "TxLeaseQuery",
          "type": "uint32_t",
          "description": "The number of lease query (option 53 with value 10) packets transmited."
        },
        {
          "name": "TxLeaseUnassigned",
          "type": "uint32_t",
          "description": "The number of lease unassigned (option 53 with value 11) packets transmited."
        },
        {
          "name": "TxLeaseUnknown",
          "type": "uint32_t",
          "description": "The number of lease unknown (option 53 with value 12) packets transmited."
        },
        {
          "name": "TxLeaseActive",
          "type": "uint32_t",
          "description": "The number of lease active (option 53 with value 13) packets transmited."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dns_config_type_t",
      "class": "Enum",
      "description": "This enumeration indicates the configured DNS server type or default domain name type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "static",
          "value": "1"
        },
        {
          "name": "dhcpv4",
          "value": "2"
        },
        {
          "name": "dhcpv4Vlan",
          "value": "3"
        },
        {
          "name": "dhcpv6",
          "value": "4"
        },
        {
          "name": "dhcpv6Vlan",
          "value": "5"
        }
      ]
    },
    {
      "type-name": "vtss_appl_dns_domainname_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Suffix",
          "type": "char *",
          "description": "The suffix of the given domain name used in DNS lookup."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ece_dei_mode_t",
      "class": "Enum",
      "description": "The ECE DEI mode.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "classified",
          "value": "0"
        },
        {
          "name": "fixed",
          "value": "1"
        },
        {
          "name": "dp",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ece_pcp_mode_t",
      "class": "Enum",
      "description": "The ECE PCP mode.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "classified",
          "value": "0"
        },
        {
          "name": "fixed",
          "value": "1"
        },
        {
          "name": "mapped",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ece_rule_t",
      "class": "Enum",
      "description": "The ECE rule type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "both",
          "value": "0"
        },
        {
          "name": "rx",
          "value": "1"
        },
        {
          "name": "tx",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ece_tx_lookup_t",
      "class": "Enum",
      "description": "The ECE egress lookup key type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "vid",
          "value": "0"
        },
        {
          "name": "vidPcp",
          "value": "1"
        },
        {
          "name": "isdx",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_eee_optimization_preference_t",
      "class": "Enum",
      "description": "This enumeration defines the types of optimization preferences, either maximum power savings or low traffic latency.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "latency",
          "value": "0"
        },
        {
          "name": "power",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_eee_queue_type_t",
      "class": "Enum",
      "description": "This enumeration defines the types of egress port queues.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "normal",
          "value": "0"
        },
        {
          "name": "urgent",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_eee_status_t",
      "class": "Enum",
      "description": "This enumeration defines the feature status.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "no",
          "value": "0"
        },
        {
          "name": "yes",
          "value": "1"
        },
        {
          "name": "notSupported",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_eps_architecture_t",
      "class": "Enum",
      "description": "The EPS protection architecture.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "onePlusOne",
          "value": "0"
        },
        {
          "name": "oneForOne",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_eps_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "InstanceMax",
          "type": "uint32_t",
          "description": "Maximum number of created EPS instances"
        },
        {
          "name": "WtrMax",
          "type": "uint32_t",
          "description": "Maximum WTR timer value"
        },
        {
          "name": "HoldOffOff",
          "type": "uint32_t",
          "description": "Hold Off timer OFF value"
        },
        {
          "name": "HoldOffMax",
          "type": "uint32_t",
          "description": "Maximum Hold Off timer value"
        },
        {
          "name": "MepMax",
          "type": "uint32_t",
          "description": "Maximum MEP relation instance value"
        },
        {
          "name": "MepInvalid",
          "type": "uint32_t",
          "description": "Invalid MEP indication. This is returned when EPS has no MEP relations"
        }
      ]
    },
    {
      "type-name": "vtss_appl_eps_command_t",
      "class": "Enum",
      "description": "protection group command.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "clear",
          "value": "1"
        },
        {
          "name": "lockOut",
          "value": "2"
        },
        {
          "name": "forcedSwitch",
          "value": "3"
        },
        {
          "name": "manualSwitchProtection",
          "value": "4"
        },
        {
          "name": "manualSwitchWorking",
          "value": "5"
        },
        {
          "name": "exercise",
          "value": "6"
        },
        {
          "name": "localFreeze",
          "value": "7"
        },
        {
          "name": "localLockOut",
          "value": "8"
        }
      ]
    },
    {
      "type-name": "vtss_appl_eps_defect_state_t",
      "class": "Enum",
      "description": "Flow defect state.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "ok",
          "value": "0"
        },
        {
          "name": "sd",
          "value": "1"
        },
        {
          "name": "sf",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_eps_directional_t",
      "class": "Enum",
      "description": "The EPS 1+1 directional.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "uniDirectional",
          "value": "0"
        },
        {
          "name": "biDirectional",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_eps_mep_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "WorkingMep",
          "type": "uint32_t",
          "description": "Working SF MEP reference - max. 100-1 - min. 0. During get 100 indicate no reference"
        },
        {
          "name": "ProtectingMep",
          "type": "uint32_t",
          "description": "Protecting SF MEP reference - max. 100-1 - min. 0. During get 100 indicate no reference"
        },
        {
          "name": "ApsMep",
          "type": "uint32_t",
          "description": "APS MEP reference - max. 100-1 - min. 0. During get 100 indicate no reference"
        }
      ]
    },
    {
      "type-name": "vtss_appl_eps_prot_state_t",
      "class": "Enum",
      "description": "protection group state.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "disabled",
          "value": "0"
        },
        {
          "name": "noRequestWorking",
          "value": "1"
        },
        {
          "name": "noRequestProtecting",
          "value": "2"
        },
        {
          "name": "lockOut",
          "value": "3"
        },
        {
          "name": "forcedSwitch",
          "value": "4"
        },
        {
          "name": "signalFailWorking",
          "value": "5"
        },
        {
          "name": "signalFailProtecting",
          "value": "6"
        },
        {
          "name": "manualSwitchWorking",
          "value": "7"
        },
        {
          "name": "manualSwitchProtecting",
          "value": "8"
        },
        {
          "name": "waitToRestore",
          "value": "9"
        },
        {
          "name": "exerciseWorking",
          "value": "10"
        },
        {
          "name": "exerciseProtecting",
          "value": "11"
        },
        {
          "name": "reverseRequestWorking",
          "value": "12"
        },
        {
          "name": "reverseRequestProtecting",
          "value": "13"
        },
        {
          "name": "doNotRevert",
          "value": "14"
        }
      ]
    },
    {
      "type-name": "vtss_appl_eps_request_t",
      "class": "Enum",
      "description": "APS request/state.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "nr",
          "value": "0"
        },
        {
          "name": "dnr",
          "value": "1"
        },
        {
          "name": "rr",
          "value": "2"
        },
        {
          "name": "exer",
          "value": "3"
        },
        {
          "name": "wtr",
          "value": "4"
        },
        {
          "name": "msW",
          "value": "5"
        },
        {
          "name": "msP",
          "value": "6"
        },
        {
          "name": "sd",
          "value": "7"
        },
        {
          "name": "sfW",
          "value": "8"
        },
        {
          "name": "fs",
          "value": "9"
        },
        {
          "name": "sfP",
          "value": "10"
        },
        {
          "name": "lo",
          "value": "11"
        }
      ]
    },
    {
      "type-name": "vtss_appl_erps_admin_cmd_t",
      "class": "Enum",
      "description": "Specifies the Administrative command.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "manualSwitch",
          "value": "1"
        },
        {
          "name": "forcedSwitch",
          "value": "2"
        },
        {
          "name": "clear",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_erps_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "MaxGroups",
          "type": "uint32_t",
          "description": "Maximum number of configured ERPS groups."
        },
        {
          "name": "MaxVlansPerGroup",
          "type": "uint32_t",
          "description": "Maximum number of protected VLANS per ERPS group."
        }
      ]
    },
    {
      "type-name": "vtss_appl_erps_control_cmd_t",
      "class": "Enum",
      "description": "Specifies a control command.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "admCmdForcedSwitch",
          "value": "1"
        },
        {
          "name": "admCmdManualSwitch",
          "value": "2"
        },
        {
          "name": "admCmdClear",
          "value": "3"
        },
        {
          "name": "statisticsClear",
          "value": "4"
        }
      ]
    },
    {
      "type-name": "vtss_appl_erps_port_state_t",
      "class": "Enum",
      "description": "Specifies the ring port state.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "ok",
          "value": "1"
        },
        {
          "name": "signalFail",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_erps_port_t",
      "class": "Enum",
      "description": "Specifies a particular logical ring port.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "port0",
          "value": "1"
        },
        {
          "name": "port1",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_erps_protection_state_t",
      "class": "Enum",
      "description": "Specifies the ring protection state.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "1"
        },
        {
          "name": "idle",
          "value": "2"
        },
        {
          "name": "protected",
          "value": "3"
        },
        {
          "name": "forcedSwitch",
          "value": "4"
        },
        {
          "name": "manualSwitch",
          "value": "5"
        },
        {
          "name": "pending",
          "value": "6"
        }
      ]
    },
    {
      "type-name": "vtss_appl_erps_request_state_t",
      "class": "Enum",
      "description": "Specifies a request/state.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "1"
        },
        {
          "name": "manualSwitch",
          "value": "2"
        },
        {
          "name": "signalFail",
          "value": "3"
        },
        {
          "name": "forcedSwitch",
          "value": "4"
        },
        {
          "name": "event",
          "value": "5"
        }
      ]
    },
    {
      "type-name": "vtss_appl_erps_ring_type_t",
      "class": "Enum",
      "description": "Specifies the ERPS ring type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "major",
          "value": "1"
        },
        {
          "name": "sub",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_erps_rpl_mode_t",
      "class": "Enum",
      "description": "Specifies the Ring Protection Link mode. Use 'none' if port is neither RPL owner nor neighbour.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "1"
        },
        {
          "name": "owner",
          "value": "2"
        },
        {
          "name": "neighbour",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_erps_statistics_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "RapsTx",
          "type": "uint64_t",
          "description": "Number of transmitted RAPS PDUs."
        },
        {
          "name": "RapsRx",
          "type": "uint64_t",
          "description": "Number of received RAPS PDUs."
        },
        {
          "name": "RapsRxDrop",
          "type": "uint64_t",
          "description": "Number of received RAPS PDUs that were dropped."
        },
        {
          "name": "LocalSF",
          "type": "uint64_t",
          "description": "Number of local SignalFail events."
        },
        {
          "name": "LocalSFCleared",
          "type": "uint64_t",
          "description": "Number of local SignalFail clear events."
        },
        {
          "name": "RemoteSF",
          "type": "uint64_t",
          "description": "Number of remote SignalFail events."
        },
        {
          "name": "NR",
          "type": "uint64_t",
          "description": "Number of NoRequest events."
        },
        {
          "name": "RemoteMS",
          "type": "uint64_t",
          "description": "Number of remote ManualSwitch events."
        },
        {
          "name": "LocalMS",
          "type": "uint64_t",
          "description": "Number of local ManualSwitch events."
        },
        {
          "name": "RemoteFS",
          "type": "uint64_t",
          "description": "Number of remote ForcedSwitch events."
        },
        {
          "name": "localFS",
          "type": "uint64_t",
          "description": "Number of local ForcedSwitch events."
        },
        {
          "name": "AdminClear",
          "type": "uint64_t",
          "description": "Number of AdminClear events."
        }
      ]
    },
    {
      "type-name": "vtss_appl_erps_version_t",
      "class": "Enum",
      "description": "Specifies the ERPS protocol version.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "version1",
          "value": "1"
        },
        {
          "name": "version2",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_eth_link_oam_control_t",
      "class": "Enum",
      "description": "This enumeration defines the types of Ethernet Link OAM Administrative State.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "disabled",
          "value": "0"
        },
        {
          "name": "enabled",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_eth_link_oam_crit_link_event_statistics_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "LinkFaultTx",
          "type": "uint32_t",
          "description": "Indicates the the number of Link Fault OAMPDUs transmitted on this interface."
        },
        {
          "name": "LinkFaultRx",
          "type": "uint32_t",
          "description": "Indicates the the number of Link Fault OAMPDUs received on this interface."
        },
        {
          "name": "CriticalEventTx",
          "type": "uint32_t",
          "description": "Indicates the the number of Critical Event OAMPDUs transmitted on this interface."
        },
        {
          "name": "CriticalEventRx",
          "type": "uint32_t",
          "description": "Indicates the the number of Critical Event OAMPDUs received on this interface."
        },
        {
          "name": "DyingGaspTx",
          "type": "uint32_t",
          "description": "Indicates the the number of Dying Gasp OAMPDUs transmitted on this interface."
        },
        {
          "name": "DyingGaspRx",
          "type": "uint32_t",
          "description": "Indicates the the number of Dying Gasp OAMPDUs received on this interface."
        }
      ]
    },
    {
      "type-name": "vtss_appl_eth_link_oam_discovery_state_t",
      "class": "Enum",
      "description": "This enumeration defines the types of Ethernet Link OAM discovery state.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "linkFault",
          "value": "0"
        },
        {
          "name": "activeSendLocal",
          "value": "1"
        },
        {
          "name": "passiveWait",
          "value": "2"
        },
        {
          "name": "sendLocalAndRemote",
          "value": "3"
        },
        {
          "name": "sendLocalAndRemoteOk",
          "value": "4"
        },
        {
          "name": "operational",
          "value": "5"
        },
        {
          "name": "unknown",
          "value": "6"
        }
      ]
    },
    {
      "type-name": "vtss_appl_eth_link_oam_mode_t",
      "class": "Enum",
      "description": "This enumeration defines the types of Ethernet Link OAM mode.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "passive",
          "value": "0"
        },
        {
          "name": "active",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_eth_link_oam_mux_state_t",
      "class": "Enum",
      "description": "This enumeration defines the types of the Ethernet Link OAM Multiplexer state.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "forwarding",
          "value": "0"
        },
        {
          "name": "discarding",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_eth_link_oam_parser_state_t",
      "class": "Enum",
      "description": "This enumeration defines the types of the Ethernet Link OAM Parser state.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "forwarding",
          "value": "0"
        },
        {
          "name": "loopback",
          "value": "1"
        },
        {
          "name": "discarding",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_eth_link_oam_pdu_control_t",
      "class": "Enum",
      "description": "This enumeration defines the types of the Ethernet Link OAM PDU permission.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "receiveOnly",
          "value": "0"
        },
        {
          "name": "linkFault",
          "value": "1"
        },
        {
          "name": "infoExchange",
          "value": "2"
        },
        {
          "name": "any",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_eth_link_oam_port_event_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ErrFrameWindow",
          "type": "uint16_t",
          "description": "Error frame event window indicates the duration of the monitoring period in terms of seconds."
        },
        {
          "name": "ErrFrameThreshold",
          "type": "uint32_t",
          "description": "Error frame event threshold indicates the number of permissible errors frames in the period defined by error frame window. If the threshold value is zero, then an Event Notification OAMPDU is sent periodically (at the end of every window). This can be used as an asynchronous notification to the peer OAM entity of the statistics related to this threshold crossing alarm"
        },
        {
          "name": "ErrSymPeriodWindow",
          "type": "uint64_t",
          "description": "Symbol period error event threshold indicates the number of permissible symbol errors frames in the period defined by symbol period error window."
        },
        {
          "name": "ErrSymPeriodThreshold",
          "type": "uint64_t",
          "description": "Symbol period error event threshold indicates the number of permissible symbol errors frames in the period defined by symbol period error window.If ErrSymPeriodThreshold symbol errors occur within a window of ErrSymPeriodWindow symbols, an Event Notification OAMPDU should be generated with an Errored Symbol Period Event TLV indicating that the threshold has been crossed in this window. If the threshold value is zero, then an Event Notification OAMPDU is sent periodically (at the end of every window). This can be used as an asynchronous notification to the peer OAM entity of the statistics related to this threshold crossing alarm."
        },
        {
          "name": "ErrFrameSecsSummaryWindow",
          "type": "uint16_t",
          "description": "Error frame second summary window indicates the duration of the monitoring period in terms of seconds."
        },
        {
          "name": "ErrFrameSecsSummaryThreshold",
          "type": "uint16_t",
          "description": "Error frame second summary threshold indicates the number of permissible error frame seconds in the period defined by error frame second summary window. If ErrFrameSecsSummaryThreshold frame errors occur within a window of ErrFrameSecsSummaryWindow , an Event Notification OAMPDU should be generated with an Errored Frame Seconds Summary Event TLV indicating that the threshold has been crossed in this window."
        }
      ]
    },
    {
      "type-name": "vtss_appl_eth_link_oam_port_link_event_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "SequenceNumber",
          "type": "uint16_t",
          "description": "Indicates the the total number of events occurred. "
        },
        {
          "name": "SymPeriodErrTimestamp",
          "type": "uint16_t",
          "description": "Symbol period error event timestamp indicates the time reference when the event was generated, in terms of 100 ms intervals. "
        },
        {
          "name": "SymPeriodErrEventWindow",
          "type": "uint16_t",
          "description": "Symbol period error event window indicates the number of symbols in the period."
        },
        {
          "name": "SymPeriodErrEventThreshold",
          "type": "uint64_t",
          "description": "Symbol period error event threshold indicates the number of symbol errors in the SymbolPeriodErrEventWindow."
        },
        {
          "name": "SymPeriodErr",
          "type": "uint64_t",
          "description": "Symbol period error indicates the number of symbol errors in the period."
        },
        {
          "name": "TotalSymPeriodErr",
          "type": "uint64_t",
          "description": "Total symbol period errors indicates the sum of symbol errors since the OAM sublayer was reset."
        },
        {
          "name": "TotalSymPeriodErrEvents",
          "type": "uint32_t",
          "description": "Total symbol period error events indicates the number of Errored Symbol Period Event TLVs that have been generated since the OAM sublayer was reset."
        },
        {
          "name": "FrameErrEventTimestamp",
          "type": "uint16_t",
          "description": "Frame error event timestamp indicates the time reference when the event was generated, in terms of 100 ms intervals."
        },
        {
          "name": "FrameErrEventWindow",
          "type": "uint16_t",
          "description": "Frame error event window indicates the duration of the period in terms of 100 ms intervals."
        },
        {
          "name": "FrameErrEventThreshold",
          "type": "uint32_t",
          "description": "Frame error event threshold indicates the number of detected errored frames in the period is required to be equal to or greater than in order for the event to be generated."
        },
        {
          "name": "FrameErr",
          "type": "uint32_t",
          "description": "Frame errors indicates the number of detected errored frames in the period."
        },
        {
          "name": "TotalFrameError",
          "type": "uint64_t",
          "description": "Total frame errors indicates the sum of errored frames that have been detected since the OAM sublayer was reset."
        },
        {
          "name": "TotalFrameErrorEvents",
          "type": "uint32_t",
          "description": "Total frame error events indicates the number of Errored Frame Event TLVs that have been generated since the OAM sublayer was reset."
        },
        {
          "name": "FramePeriodErrTimestamp",
          "type": "uint16_t",
          "description": "Frame period error event timestamp indicates the time reference when the event was generated, in terms of 100 ms intervals."
        },
        {
          "name": "FramePeriodErrWindow",
          "type": "uint32_t",
          "description": "Frame period error event window indicates the duration of period in terms of frames."
        },
        {
          "name": "FramePeriodErrThreshold",
          "type": "uint32_t",
          "description": "Frame period error event threshold indicates the number of errored frames in the period is required to be equal to or greater than in order for the event to be generated."
        },
        {
          "name": "FramePeriodErr",
          "type": "uint32_t",
          "description": "Frame period errors indicates the number of frame errors in the period."
        },
        {
          "name": "TotalFramePeriodErr",
          "type": "uint64_t",
          "description": "Total frame period errors indicates the sum of frame errors that have been detected since the OAM sublayer was reset."
        },
        {
          "name": "TotalFramePeriodErrEvent",
          "type": "uint32_t",
          "description": "Total frame period error events indicates the number of Errored Frame Period Event TLVs that have been generated since the OAM sublayer was reset."
        },
        {
          "name": "ErrFrameSecSummaryTimestamp",
          "type": "uint16_t",
          "description": "Error frame seconds summary event timestamp indicates the time reference when the event was generated, in terms of 100 ms intervals."
        },
        {
          "name": "ErrFrameSecSummaryWindow",
          "type": "uint16_t",
          "description": "Error frame seconds summary event window indicates the duration of the period in terms of 100 ms intervals."
        },
        {
          "name": "ErrFrameSecSummaryThreshold",
          "type": "uint16_t",
          "description": "Error frame seconds summary event threshold indicates the number of errored frame seconds in the period is required to be equal to or greater than in order for the event to be generated."
        },
        {
          "name": "ErrFrameSecSummaryErrors",
          "type": "uint16_t",
          "description": "Error frame seconds summary errors indicates the number of errored frame seconds in the period."
        },
        {
          "name": "TotalErrFrameSecSummaryErrors",
          "type": "uint32_t",
          "description": "Total error frame seconds summary errors indicates the sum of errored frame seconds that have been detected since the OAM sublayer was reset."
        },
        {
          "name": "TotalErrFrameSecSummaryEvents",
          "type": "uint32_t",
          "description": "Total error frame seconds summary events indicates the number of Errored Frame Seconds Summary Event TLVs that have been generated since the OAM sublayer was reset."
        }
      ]
    },
    {
      "type-name": "vtss_appl_eth_link_oam_statistics_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "UnsupportedCodesTx",
          "type": "uint32_t",
          "description": "Indicates the the number of OAMPDUs transmitted on this interface with an unsupported op-code."
        },
        {
          "name": "UnsupportedCodesRx",
          "type": "uint32_t",
          "description": "Indicates the the number of OAMPDUs received on this interface with an unsupported op-code."
        },
        {
          "name": "InformationTx",
          "type": "uint32_t",
          "description": "Indicates the number of Information OAMPDUs transmitted on this interface."
        },
        {
          "name": "InformationRx",
          "type": "uint32_t",
          "description": "Indicates the number of Information OAMPDUs received on this interface."
        },
        {
          "name": "UniqueEventNotificationTx",
          "type": "uint32_t",
          "description": "Indicates the number of unique Event OAMPDUs transmitted on this interface."
        },
        {
          "name": "UniqueEventNotificationRx",
          "type": "uint32_t",
          "description": "Indicates the number of unique Event OAMPDUs received on this interface."
        },
        {
          "name": "DuplicateEventNotificationTx",
          "type": "uint32_t",
          "description": "Indicates the number of duplicate Event OAMPDUs transmitted on this interface."
        },
        {
          "name": "DuplicateEventNotificationRx",
          "type": "uint32_t",
          "description": "Indicates the number of duplicate Event OAMPDUs received on this interface."
        },
        {
          "name": "LoopbackControlTx",
          "type": "uint32_t",
          "description": "Indicates the number of Loopback Control OAMPDUs transmitted on this interface."
        },
        {
          "name": "LoopbackControlRx",
          "type": "uint32_t",
          "description": "Indicates the number of Loopback Control OAMPDUs received on this interface."
        },
        {
          "name": "VariableRequestTx",
          "type": "uint32_t",
          "description": "Indicates the number of Variable Request OAMPDUs transmitted on this interface."
        },
        {
          "name": "VariableRequestRx",
          "type": "uint32_t",
          "description": "Indicates the number of Variable Request OAMPDUs received on this interface."
        },
        {
          "name": "VariableReponseTx",
          "type": "uint32_t",
          "description": "Indicates the number of Variable Response OAMPDUs transmitted on this interface."
        },
        {
          "name": "VariableReponseRx",
          "type": "uint32_t",
          "description": "Indicates the number of Variable Response OAMPDUs received on this interface."
        },
        {
          "name": "OrgSpecificTx",
          "type": "uint32_t",
          "description": "Indicates the number of Organization Specific OAMPDUs transmitted on this interface."
        },
        {
          "name": "OrgSpecificRx",
          "type": "uint32_t",
          "description": "Indicates the number of Organization Specific OAMPDUs received on this interface."
        }
      ]
    },
    {
      "type-name": "vtss_appl_evc_counters_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "RxGreenFrames",
          "type": "uint64_t",
          "description": "Number of received green frames.",
          "depends-on-capability": "HasEvcPortCounters@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "RxGreenBytes",
          "type": "uint64_t",
          "description": "Number of received green bytes.",
          "depends-on-capability": "HasEvcPortCounters@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "RxYellowFrames",
          "type": "uint64_t",
          "description": "Number of received yellow frames.",
          "depends-on-capability": "HasEvcPortCounters@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "RxYellowBytes",
          "type": "uint64_t",
          "description": "Number of received yellow bytes.",
          "depends-on-capability": "HasEvcPortCounters@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "RxRedFrames",
          "type": "uint64_t",
          "description": "Number of received red frames.",
          "depends-on-capability": "HasEvcPortCounters@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "RxRedBytes",
          "type": "uint64_t",
          "description": "Number of received red bytes.",
          "depends-on-capability": "HasEvcPortCounters@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "RxDiscardFrames",
          "type": "uint64_t",
          "description": "Number of received discarded frames.",
          "depends-on-capability": "HasEvcPortCounters@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "RxDiscardBytes",
          "type": "uint64_t",
          "description": "Number of received discarded bytes.",
          "depends-on-capability": "HasEvcPortCounters@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "TxGreenFrames",
          "type": "uint64_t",
          "description": "Number of transmitted green frames.",
          "depends-on-capability": "HasEvcPortCounters@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "TxGreenBytes",
          "type": "uint64_t",
          "description": "Number of transmitted green bytes.",
          "depends-on-capability": "HasEvcPortCounters@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "TxYellowFrames",
          "type": "uint64_t",
          "description": "Number of transmitted yellow frames.",
          "depends-on-capability": "HasEvcPortCounters@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "TxYellowBytes",
          "type": "uint64_t",
          "description": "Number of transmitted yellow bytes.",
          "depends-on-capability": "HasEvcPortCounters@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "TxDiscardFrames",
          "type": "uint64_t",
          "description": "Number of egress discarded frames.",
          "depends-on-capability": "HasEvcPortCounters@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "TxDiscardBytes",
          "type": "uint64_t",
          "description": "Number of egress discarded bytes.",
          "depends-on-capability": "HasEvcPortCounters@vtss_appl_evc_capabilities_t"
        }
      ]
    },
    {
      "type-name": "vtss_appl_evc_ece_type_t",
      "class": "Enum",
      "description": "The ECE frame type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "any",
          "value": "0"
        },
        {
          "name": "etype",
          "value": "1"
        },
        {
          "name": "llc",
          "value": "2"
        },
        {
          "name": "snap",
          "value": "3"
        },
        {
          "name": "l2cp",
          "value": "4"
        },
        {
          "name": "ipv4",
          "value": "5"
        },
        {
          "name": "ipv6",
          "value": "6"
        }
      ]
    },
    {
      "type-name": "vtss_appl_evc_inner_tag_type_t",
      "class": "Enum",
      "description": "The inner tag type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "cTagged",
          "value": "1"
        },
        {
          "name": "sTagged",
          "value": "2"
        },
        {
          "name": "sCustomTagged",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_evc_l2cp_dmac_t",
      "class": "Enum",
      "description": "The ECE DMAC used for L2CP tunneling.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "custom",
          "value": "0"
        },
        {
          "name": "cisco",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_evc_l2cp_mode_t",
      "class": "Enum",
      "description": "The ECE L2CP forward mode.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "forward",
          "value": "0"
        },
        {
          "name": "discard",
          "value": "1"
        },
        {
          "name": "peer",
          "value": "2"
        },
        {
          "name": "tunnel",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_evc_l2cp_t",
      "class": "Enum",
      "description": "The L2CP type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "stp",
          "value": "1"
        },
        {
          "name": "pause",
          "value": "2"
        },
        {
          "name": "lacp",
          "value": "3"
        },
        {
          "name": "lamp",
          "value": "4"
        },
        {
          "name": "loam",
          "value": "5"
        },
        {
          "name": "dot1x",
          "value": "6"
        },
        {
          "name": "elmi",
          "value": "7"
        },
        {
          "name": "pb",
          "value": "8"
        },
        {
          "name": "pbGvrp",
          "value": "9"
        },
        {
          "name": "lldp",
          "value": "10"
        },
        {
          "name": "gmrp",
          "value": "11"
        },
        {
          "name": "gvrp",
          "value": "12"
        },
        {
          "name": "uld",
          "value": "13"
        },
        {
          "name": "pagp",
          "value": "14"
        },
        {
          "name": "pvst",
          "value": "15"
        },
        {
          "name": "ciscoVlan",
          "value": "16"
        },
        {
          "name": "cdp",
          "value": "17"
        },
        {
          "name": "vtp",
          "value": "18"
        },
        {
          "name": "dtp",
          "value": "19"
        },
        {
          "name": "ciscoStp",
          "value": "20"
        },
        {
          "name": "ciscoCfm",
          "value": "21"
        }
      ]
    },
    {
      "type-name": "vtss_appl_evc_mpls_tp_pw_conf_t",
      "class": "TypeSpecification",
      "description": "EVC-specific PW configuration: IfIndex = PW interface index; SplitHorizon = split-horizon enable (boolean).",
      "json-encoding-type": "Array"
    },
    {
      "type-name": "vtss_appl_evc_policer_mode_t",
      "class": "Enum",
      "description": "The EVC policer mode.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "coupled",
          "value": "0"
        },
        {
          "name": "aware",
          "value": "1"
        },
        {
          "name": "blind",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_evc_policer_op_t",
      "class": "Enum",
      "description": "The policer operator.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "normal",
          "value": "0"
        },
        {
          "name": "none",
          "value": "1"
        },
        {
          "name": "discard",
          "value": "2"
        },
        {
          "name": "evc",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_evc_port_evc_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "HqosId",
          "type": "uint16_t",
          "description": "HQoS ID mapping.",
          "depends-on-capability": "HasEvcPortHqos@vtss_appl_evc_capabilities_t"
        }
      ]
    },
    {
      "type-name": "vtss_appl_evc_port_l2cp_mode_t",
      "class": "Enum",
      "description": "The EVC port L2CP mode.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "forward",
          "value": "0"
        },
        {
          "name": "discard",
          "value": "1"
        },
        {
          "name": "peer",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_event_data_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "LogTime",
          "type": "uint64_t",
          "description": "Time when this log entry was created"
        },
        {
          "name": "LogDescription",
          "type": "char *",
          "description": "Log description string"
        }
      ]
    },
    {
      "type-name": "vtss_appl_event_t",
      "class": "Enum",
      "description": "This enumeration is to select a perticular event type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "NONE",
          "value": "1"
        },
        {
          "name": "LOG",
          "value": "2"
        },
        {
          "name": "TRAP",
          "value": "3"
        },
        {
          "name": "LOG_AND_TRAP",
          "value": "4"
        },
        {
          "name": "END",
          "value": "5"
        }
      ]
    },
    {
      "type-name": "vtss_appl_firmware_status_image_type_t",
      "class": "Enum",
      "description": "This enumeration defines the type of image for status.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "bootloader",
          "value": "0"
        },
        {
          "name": "activeFirmware",
          "value": "1"
        },
        {
          "name": "alternativeFirmware",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_firmware_status_switch_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ChipId",
          "type": "char *",
          "description": "ID of chip."
        },
        {
          "name": "BoardType",
          "type": "char *",
          "description": "Type of board."
        },
        {
          "name": "PortCnt",
          "type": "uint32_t",
          "description": "Count of ports."
        },
        {
          "name": "Product",
          "type": "char *",
          "description": "Product name."
        },
        {
          "name": "Version",
          "type": "char *",
          "description": "Image version."
        },
        {
          "name": "BuiltDate",
          "type": "char *",
          "description": "The built date when the image is built."
        }
      ]
    },
    {
      "type-name": "vtss_appl_firmware_upload_image_type_t",
      "class": "Enum",
      "description": "This enumeration defines the type of image to upload.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "bootloader",
          "value": "0"
        },
        {
          "name": "firmware",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_firmware_upload_status_t",
      "class": "Enum",
      "description": "This enumeration defines the status of upload operation.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "success",
          "value": "1"
        },
        {
          "name": "inProgress",
          "value": "2"
        },
        {
          "name": "errIvalidIp",
          "value": "3"
        },
        {
          "name": "errTftpFailed",
          "value": "4"
        },
        {
          "name": "errBusy",
          "value": "5"
        },
        {
          "name": "errMemoryInsufficient",
          "value": "6"
        },
        {
          "name": "errInvalidImage",
          "value": "7"
        },
        {
          "name": "errWriteFlash",
          "value": "8"
        },
        {
          "name": "errSameImageExisted",
          "value": "9"
        },
        {
          "name": "errUnknownImage",
          "value": "10"
        },
        {
          "name": "errFlashImageNotFound",
          "value": "11"
        },
        {
          "name": "errFlashEntryNotFound",
          "value": "12"
        },
        {
          "name": "errCrc",
          "value": "13"
        },
        {
          "name": "errImageSize",
          "value": "14"
        },
        {
          "name": "errEraseFlash",
          "value": "15"
        },
        {
          "name": "errIncorrectImageVersion",
          "value": "16"
        },
        {
          "name": "errDownloadUrl",
          "value": "17"
        },
        {
          "name": "errInvalidUrl",
          "value": "18"
        }
      ]
    },
    {
      "type-name": "vtss_appl_history_entry_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Interval",
          "type": "uint32_t",
          "description": "Sampling interval"
        },
        {
          "name": "BucketSize",
          "type": "uint32_t",
          "description": "Requested data bucket size"
        }
      ]
    },
    {
      "type-name": "vtss_appl_history_statistics_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "etherHistoryIntervalStart",
          "type": "uint64_t",
          "description": "Data entry startup time"
        },
        {
          "name": "etherHistoryDropEvents",
          "type": "uint32_t",
          "description": "Dropped frames counter"
        },
        {
          "name": "etherHistoryOctets",
          "type": "uint32_t",
          "description": "Number of octets/bytes"
        },
        {
          "name": "etherHistoryPkts",
          "type": "uint32_t",
          "description": "Packets counter"
        },
        {
          "name": "etherHistoryBroadcastPkts",
          "type": "uint32_t",
          "description": "Broadcoast packets count"
        },
        {
          "name": "etherHistoryMulticastPkts",
          "type": "uint32_t",
          "description": "Multicast packets count"
        },
        {
          "name": "etherHistoryCRCAlignErrors",
          "type": "uint32_t",
          "description": "CRC error count"
        },
        {
          "name": "etherHistoryUndersizePkts",
          "type": "uint32_t",
          "description": "Undersized packets count"
        },
        {
          "name": "etherHistoryOversizePkts",
          "type": "uint32_t",
          "description": "Oversized packets count"
        },
        {
          "name": "etherHistoryFragments",
          "type": "uint32_t",
          "description": "Fragments count"
        },
        {
          "name": "etherHistoryJabbers",
          "type": "uint32_t",
          "description": "Jabber frame count"
        },
        {
          "name": "etherHistoryCollisions",
          "type": "uint32_t",
          "description": "Collision error count"
        },
        {
          "name": "etherHistoryUtilization",
          "type": "uint64_t",
          "description": "The untilization"
        }
      ]
    },
    {
      "type-name": "vtss_appl_history_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "DataGranted",
          "type": "uint32_t",
          "description": "Size of data bucket granted in added history entry"
        }
      ]
    },
    {
      "type-name": "vtss_appl_icfg_config_type_t",
      "class": "Enum",
      "description": "This enumeration defines the type of configuration.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "runningConfig",
          "value": "1"
        },
        {
          "name": "startupConfig",
          "value": "2"
        },
        {
          "name": "configFile",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_icfg_copy_status_t",
      "class": "Enum",
      "description": "This enumeration defines the type of configuration.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "success",
          "value": "1"
        },
        {
          "name": "inProgress",
          "value": "2"
        },
        {
          "name": "errOtherInProcessing",
          "value": "3"
        },
        {
          "name": "errNoSuchFile",
          "value": "4"
        },
        {
          "name": "errSameSrcDst",
          "value": "5"
        },
        {
          "name": "errPermissionDenied",
          "value": "6"
        },
        {
          "name": "errLoadSrc",
          "value": "7"
        },
        {
          "name": "errSaveDst",
          "value": "8"
        }
      ]
    },
    {
      "type-name": "vtss_appl_icfg_file_entry_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "FileName",
          "type": "char *",
          "description": "File name."
        },
        {
          "name": "Bytes",
          "type": "uint32_t",
          "description": "Number of bytes of the file."
        },
        {
          "name": "ModifiedTime",
          "type": "char *",
          "description": "Last modified time of the file."
        },
        {
          "name": "Attribute",
          "type": "char *",
          "description": "File attribute in the linux format of drwxrwxrwx. 'd' is directory or not, the permission of rwx is for owner, group and other, respectively."
        }
      ]
    },
    {
      "type-name": "vtss_appl_icfg_file_statistics_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "NumberOfFiles",
          "type": "uint32_t",
          "description": "Number of files in flash."
        },
        {
          "name": "TotalBytes",
          "type": "uint32_t",
          "description": "Total number of bytes used by all files in flash."
        }
      ]
    },
    {
      "type-name": "vtss_appl_icfg_reload_default_t",
      "class": "Enum",
      "description": "This enumeration defines the type of reload default.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "default",
          "value": "1"
        },
        {
          "name": "defaultKeepIp",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_icfg_status_copy_config_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Status",
          "type": "vtss_appl_icfg_copy_status_t",
          "description": "The status indicates the status of current copy operation. none(0) means no copy operation. success(1) means copy operation is successful. inProgress(2) means current copy operation is in progress. errOtherInProcessing(3) means copy operation is failed due to other in processing. errNoSuchFile(4) means copy operation is failed due to file not existing. errSameSrcDst(5) means copy operation is failed due to the source and destination are the same. errPermissionDenied(6) means copy operation is failed due to the destination is not permitted to modify. errLoadSrc(7) means copy operation is failed due to the error to load source file. errSaveDst(8) means copy operation is failed due to the error to save or commit destination."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_dhcp4c_state_t",
      "class": "Enum",
      "description": "-",
      "encoding-type": "String",
      "elements": [
        {
          "name": "stopped",
          "value": "0"
        },
        {
          "name": "init",
          "value": "1"
        },
        {
          "name": "selecting",
          "value": "2"
        },
        {
          "name": "requesting",
          "value": "3"
        },
        {
          "name": "rebinding",
          "value": "4"
        },
        {
          "name": "bound",
          "value": "5"
        },
        {
          "name": "renewing",
          "value": "6"
        },
        {
          "name": "fallback",
          "value": "7"
        },
        {
          "name": "arpCheck",
          "value": "8"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_if_status_ip_stat_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "InReceives",
          "type": "uint32_t",
          "description": "Number of input IP datagrams received, including those received in error.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "HCInReceives",
          "type": "uint64_t",
          "description": "Number of input IP datagrams received, including those received in error. This object counts the same datagrams as InReceives, but allows for larger values.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "InOctets",
          "type": "uint32_t",
          "description": "Number of octets received in input IP datagrams, including those received in error. Octets from datagrams counted in InReceives must be counted here.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "HCInOctets",
          "type": "uint64_t",
          "description": "Number of octets received in input IP datagrams, including those received in error. This object counts the same octets as InOctets, but allows for a larger value.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "InHdrErrors",
          "type": "uint32_t",
          "description": "Number of input IP datagrams discarded due to errors in their IP headers, including version number mismatch, other format errors, hop count exceeded, and errors discovered in processing their IP options.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "InNoRoutes",
          "type": "uint32_t",
          "description": "Number of input IP datagrams discarded because no route could be found to transmit them to their destination.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "InAddrErrors",
          "type": "uint32_t",
          "description": "Number of input IP datagrams discarded because the IP address in their IP header's destination field was not a valid address to be received at this entity. This count includes invalid addresses (e.g., ::0). For entities that are not IP routers and therefore do not forward datagrams, this counter includes datagrams discarded because the destination address was not a local address.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "InUnknownProtos",
          "type": "uint32_t",
          "description": "Number of locally-addressed IP datagrams received successfully but discarded because of an unknown or unsupported protocol.\nWhen tracking interface statistics, the counter of the interface to which these datagrams were addressed is incremented. This interface might not be the same as the input interface for some of the datagrams.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "InTruncatedPkts",
          "type": "uint32_t",
          "description": "Number of input IP datagrams discarded because the datagram frame didn't carry enough data.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "InForwDatagrams",
          "type": "uint32_t",
          "description": "Number of input datagrams for which this entity was not their final IP destination and for which this entity attempted to find a route to forward them to their final destination.\nWhen tracking interface statistics, the counter of the incoming interface is incremented for each datagram.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "HCInForwDatagrams",
          "type": "uint64_t",
          "description": "Number of input datagrams for which this entity was not their final IP destination and for which this entity attempted to find a route to forward them to their final destination. This object counts the same packets as InForwDatagrams, but allows for larger values.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "ReasmReqds",
          "type": "uint32_t",
          "description": "Number of IP fragments received that needed to be reassembled at this interface.\nWhen tracking interface statistics, the counter of the interface to which these fragments were addressed is incremented. This interface might not be the same as the input interface for some of the fragments.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "ReasmOKs",
          "type": "uint32_t",
          "description": "Number of IP datagrams successfully reassembled.\nWhen tracking interface statistics, the counter of the interface to which these datagrams were addressed is incremented. This interface might not be the same as the input interface for some of the datagrams.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "ReasmFails",
          "type": "uint32_t",
          "description": "Number of failures detected by the IP re-assembly algorithm.\nNote: this is not necessarily a count of discarded IP fragments because some algorithms (notably the algorithm in RFC 815) can lose track of the number of fragments by combining them as they are received.\nWhen tracking interface statistics, the counter of the interface to which these fragments were addressed is incremented. This interface might not be the same as the input interface for some of the fragments.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "InDiscards",
          "type": "uint32_t",
          "description": "Number of input IP datagrams for which no problems were encountered to prevent their continued processing, but were discarded.\nNote: this counter does not include any datagrams discarded while awaiting re-assembly.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "InDelivers",
          "type": "uint32_t",
          "description": "Number of datagrams successfully delivered to IP user-protocols (including ICMP).\nWhen tracking interface statistics, the counter of the interface to which these datagrams were addressed is incremented. This interface might not be the same as the input interface for some of the datagrams.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "HCInDelivers",
          "type": "uint64_t",
          "description": "Number of datagrams successfully delivered to IP user-protocols (including ICMP). This object counts the same packets as ipSystemStatsInDelivers, but allows for larger values.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "OutRequests",
          "type": "uint32_t",
          "description": "Number of IP datagrams that local IP user-protocols (including ICMP) supplied to IP in requests for transmission.\nNote: this counter does not include any datagrams counted in OutForwDatagrams.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "HCOutRequests",
          "type": "uint64_t",
          "description": "Number of IP datagrams that local IP user-protocols (including ICMP) supplied to IP in requests for transmission. This object counts the same packets as OutRequests, but allows for larger values.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "OutNoRoutes",
          "type": "uint32_t",
          "description": "Number of locally generated IP datagrams discarded because no route could be found to transmit them to their destination.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "OutForwDatagrams",
          "type": "uint32_t",
          "description": "Number of datagrams for which this entity was not their final IP destination and for which it was successful in finding a path to their final destination.\nWhen tracking interface statistics, the counter of the outgoing interface is incremented for a successfully forwarded datagram.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "HCOutForwDatagrams",
          "type": "uint64_t",
          "description": "Number of datagrams for which this entity was not their final IP destination and for which it was successful in finding a path to their final destination. This object counts the same packets as OutForwDatagrams, but allows for larger values.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "OutDiscards",
          "type": "uint32_t",
          "description": "Number of output IP datagrams for which no problem was encountered to prevent their transmission to their destination, but were discarded.\nNote: this counter includes datagrams counted in OutForwDatagrams if any such datagrams met this (discretionary) discard criterion.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "OutFragReqds",
          "type": "uint32_t",
          "description": "Number of IP datagrams that require fragmentation in order to be transmitted.\nWhen tracking interface statistics, the counter of the outgoing interface is incremented for a successfully fragmented datagram.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "OutFragOKs",
          "type": "uint32_t",
          "description": "Number of IP datagrams that have been successfully fragmented.\nWhen tracking interface statistics, the counter of the outgoing interface is incremented for a successfully fragmented datagram.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "OutFragFails",
          "type": "uint32_t",
          "description": "Number of IP datagrams that have been discarded because they needed to be fragmented but could not be. This includes IPv4 packets that have the DF bit set and IPv6 packets that are being forwarded and exceed the outgoing link MTU.\nWhen tracking interface statistics, the counter of the outgoing interface is incremented for an unsuccessfully fragmented datagram.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "OutFragCreates",
          "type": "uint32_t",
          "description": "Number of output datagram fragments that have been generated as a result of IP fragmentation.\nWhen tracking interface statistics, the counter of the outgoing interface is incremented for a successfully fragmented datagram.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "OutTransmits",
          "type": "uint32_t",
          "description": "Number of IP datagrams that this entity supplied to the lower layers for transmission. This includes datagrams generated locally and those forwarded by this entity.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "HCOutTransmits",
          "type": "uint64_t",
          "description": "Number of IP datagrams that this entity supplied to the lower layers for transmission. This object counts the same datagrams as OutTransmits, but allows for larger values.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "OutOctets",
          "type": "uint32_t",
          "description": "Number of octets in IP datagrams delivered to the lower layers for transmission. Octets from datagrams counted in OutTransmits must be counted here.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "HCOutOctets",
          "type": "uint64_t",
          "description": "Number of octets in IP datagrams delivered to the lower layers for transmission. This objects counts the same octets as OutOctets, but allows for larger values.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "InMcastPkts",
          "type": "uint32_t",
          "description": "Number of IP multicast datagrams received.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "HCInMcastPkts",
          "type": "uint64_t",
          "description": "Number of IP multicast datagrams received. This object counts the same datagrams as InMcastPkts but allows for larger values.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "InMcastOctets",
          "type": "uint32_t",
          "description": "Number of octets received in IP multicast datagrams. Octets from datagrams counted in InMcastPkts MUST be counted here.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "HCInMcastOctets",
          "type": "uint64_t",
          "description": "Number of octets received in IP multicast datagrams. This object counts the same octets as InMcastOctets, but allows for larger values.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "OutMcastPkts",
          "type": "uint32_t",
          "description": "Number of IP multicast datagrams transmitted.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "HCOutMcastPkts",
          "type": "uint64_t",
          "description": "Number of IP multicast datagrams transmitted. This object counts the same datagrams as OutMcastPkts, but allows for larger values.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "OutMcastOctets",
          "type": "uint32_t",
          "description": "Number of octets transmitted in IP multicast datagrams. Octets from datagrams counted in OutMcastPkts must be counted here.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "HCOutMcastOctets",
          "type": "uint64_t",
          "description": "Number of octets transmitted in IP multicast datagrams. This object counts the same octets as OutMcastOctets, but allows for larger values.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "InBcastPkts",
          "type": "uint32_t",
          "description": "Number of IP broadcast datagrams received.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "HCInBcastPkts",
          "type": "uint64_t",
          "description": "Number of IP broadcast datagrams received. This object counts the same datagrams as InBcastPkts but allows for larger values.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "OutBcastPkts",
          "type": "uint32_t",
          "description": "Number of IP broadcast datagrams transmitted.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "HCOutBcastPkts",
          "type": "uint64_t",
          "description": "Number of IP broadcast datagrams transmitted. This object counts the same datagrams as OutBcastPkts, but allows for larger values.\nDiscontinuities in the value of this counter may occur at re-initialization of the system, and at other times as indicated by the value of DiscontinuityTime."
        },
        {
          "name": "DiscontinuityTime",
          "type": "uint64_t",
          "description": "Value of sysUpTime on the most recent occasion when any one or more of this entry's counters suffered a discontinuity.\nIf no such discontinuities have occurred since the last re-initialization of the IP stack, then this object contains a zero value."
        },
        {
          "name": "RefreshRate",
          "type": "uint32_t",
          "description": "The minimum reasonable polling interval for this entry. This object provides an indication of the minimum amount of time required to update the counters in this entry."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_if_status_link_stat_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "inPackets",
          "type": "uint64_t",
          "description": "Number of packets delivered by MAC layer to IP layer."
        },
        {
          "name": "outPackets",
          "type": "uint64_t",
          "description": "Number of packets IP protocols requested be transmitted, including those that were discarded or not sent."
        },
        {
          "name": "inBytes",
          "type": "uint64_t",
          "description": "Number of octets received on the interface, including framing characters."
        },
        {
          "name": "outBytes",
          "type": "uint64_t",
          "description": "Number of octets transmitted out of the interface, including framing characters."
        },
        {
          "name": "inMulticasts",
          "type": "uint64_t",
          "description": "Number of packets delivered by MAC layer to IP layer that were addressed to a MAC multicast address.\nFor a MAC layer protocol, this includes both Group and Functional addresses."
        },
        {
          "name": "outMulticasts",
          "type": "uint64_t",
          "description": "Number of packets addressed to a multicast MAC address that IP protocols requested be transmitted, including those that were discarded or not sent.\nFor a MAC layer protocol, this includes both Group and Functional addresses."
        },
        {
          "name": "inBroadcasts",
          "type": "uint64_t",
          "description": "Number of packets delivered by MAC layer to IP layer that were addressed to a MAC broadcast address."
        },
        {
          "name": "outBroadcasts",
          "type": "uint64_t",
          "description": "Number of packets addressed to a broadcast MAC address that IP protocols requested be transmitted, including those that were discarded or not sent."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_action4_t",
      "class": "Enum",
      "description": "This enumeration indicates the source filtering type from IGMP snooping.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "deny",
          "value": "0"
        },
        {
          "name": "permit",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_action6_t",
      "class": "Enum",
      "description": "This enumeration indicates the source filtering type from MLD snooping.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "deny",
          "value": "0"
        },
        {
          "name": "permit",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_action_t",
      "class": "Enum",
      "description": "This enumeration indicates the configured action type for IPMC profile rule.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "deny",
          "value": "0"
        },
        {
          "name": "permit",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_compati4_t",
      "class": "Enum",
      "description": "This enumeration indicates the version compatibility for IGMP snooping VLAN interface.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "auto",
          "value": "0"
        },
        {
          "name": "igmpv1",
          "value": "1"
        },
        {
          "name": "igmpv2",
          "value": "2"
        },
        {
          "name": "igmpv3",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_intf_vtag_t",
      "class": "Enum",
      "description": "This enumeration indicates the VLAN tagging for IPMC control frames in MVR.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "untagged",
          "value": "0"
        },
        {
          "name": "tagging",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_mrtr4_status_t",
      "class": "Enum",
      "description": "This enumeration indicates the router port status from IGMP snooping.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "static",
          "value": "1"
        },
        {
          "name": "dynamic",
          "value": "2"
        },
        {
          "name": "both",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_mrtr6_status_t",
      "class": "Enum",
      "description": "This enumeration indicates the router port status from MLD snooping.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "static",
          "value": "1"
        },
        {
          "name": "dynamic",
          "value": "2"
        },
        {
          "name": "both",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_mvr_grp_adrs_cnt_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "FromIgmp",
          "type": "uint32_t",
          "description": "It is used to denote the total number of registered multicast group address from IGMP learning in MVR."
        },
        {
          "name": "FromMld",
          "type": "uint32_t",
          "description": "It is used to denote the total number of registered multicast group address from MLD learning in MVR."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_mvr_intf_mode_t",
      "class": "Enum",
      "description": "This enumeration indicates the MVR VLAN interface's operational mode.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "dynamic",
          "value": "0"
        },
        {
          "name": "compatible",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_mvr_port_role_t",
      "class": "Enum",
      "description": "This enumeration indicates the MVR port's operational role.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "inactive",
          "value": "0"
        },
        {
          "name": "source",
          "value": "1"
        },
        {
          "name": "receiver",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_profile_mgmt_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ProfileDescription",
          "type": "char *",
          "description": "The description of the IPMC Profile management entry."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_qry4_states_t",
      "class": "Enum",
      "description": "This enumeration indicates the querier status for IGMP snooping VLAN interface.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "disabled",
          "value": "0"
        },
        {
          "name": "initial",
          "value": "1"
        },
        {
          "name": "idle",
          "value": "2"
        },
        {
          "name": "active",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_qry6_states_t",
      "class": "Enum",
      "description": "This enumeration indicates the querier status for MLD snooping VLAN interface.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "disabled",
          "value": "0"
        },
        {
          "name": "initial",
          "value": "1"
        },
        {
          "name": "idle",
          "value": "2"
        },
        {
          "name": "active",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_querier_states_t",
      "class": "Enum",
      "description": "This enumeration indicates the Querier status for MVR VLAN interface.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "disabled",
          "value": "-1"
        },
        {
          "name": "initial",
          "value": "0"
        },
        {
          "name": "idle",
          "value": "1"
        },
        {
          "name": "active",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_sfm4_mode_t",
      "class": "Enum",
      "description": "This enumeration indicates the group filter mode for a IGMP group address.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "exclude",
          "value": "0"
        },
        {
          "name": "include",
          "value": "1"
        },
        {
          "name": "none",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_sfm6_mode_t",
      "class": "Enum",
      "description": "This enumeration indicates the group filter mode for a MLD group address.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "exclude",
          "value": "0"
        },
        {
          "name": "include",
          "value": "1"
        },
        {
          "name": "none",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_sfm_mode_t",
      "class": "Enum",
      "description": "This enumeration indicates the group filter mode for an IPMC group address.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "exclude",
          "value": "0"
        },
        {
          "name": "include",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_snp4_mrouter_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Status",
          "type": "vtss_appl_ipmc_mrtr4_status_t",
          "description": "The IGMP snooping router port status."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_snp6_mrouter_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Status",
          "type": "vtss_appl_ipmc_mrtr6_status_t",
          "description": "The MLD snooping router port status."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_snp_grp_adrs_cnt_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "FromIgmp",
          "type": "uint32_t",
          "description": "It is used to denote the total number of registered multicast group address from IGMP snooping."
        },
        {
          "name": "FromMld",
          "type": "uint32_t",
          "description": "It is used to denote the total number of registered multicast group address from MLD snooping."
        }
      ]
    },
    {
      "type-name": "vtss_appl_json_rpc_inventory_t",
      "class": "TypeSpecification",
      "description": "See VTSS-JSON-SPEC(7)",
      "json-encoding-type": "Object"
    },
    {
      "type-name": "vtss_appl_json_rpc_notification_dest_auth_type_t",
      "class": "Enum",
      "description": "Type of authentication (if any).",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "basic",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_json_rpc_notification_dest_conf_t ",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "url",
          "type": "char *",
          "description": "URL of the destination where the events are delivered to."
        },
        {
          "name": "authType",
          "type": "vtss_appl_json_rpc_notification_dest_auth_type_t",
          "description": "Type of authentication to use (if any)"
        },
        {
          "name": "username",
          "type": "char *",
          "description": "User name for the authentication process"
        },
        {
          "name": "password",
          "type": "char *",
          "description": "Password for the authentication process"
        }
      ]
    },
    {
      "type-name": "vtss_appl_lacp_globals_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "dot3adAggrSystemPriority",
          "type": "uint32_t",
          "description": "LACP system priority is a value."
        }
      ]
    },
    {
      "type-name": "vtss_appl_led_power_reduction_intensity_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "IntensityLevel",
          "type": "uint8_t",
          "description": " Led power intensity level. The LEDs brightness in percentage. 100 means full intensity(maximum power consumption), 0 means LEDs are off(no power consumption)."
        }
      ]
    },
    {
      "type-name": "vtss_appl_lldp_admin_state_t",
      "class": "Enum",
      "description": "This enumerations the admin state.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "disabled",
          "value": "0"
        },
        {
          "name": "txAndRx",
          "value": "1"
        },
        {
          "name": "txOnly",
          "value": "2"
        },
        {
          "name": "rxOnly",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_lldp_global_cnt_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Clear",
          "type": "uint8_t",
          "description": "Clear LLDP global counters."
        }
      ]
    },
    {
      "type-name": "vtss_appl_lldp_global_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ReInitDelay",
          "type": "uint16_t",
          "description": "Set the LLDP tx reinitialization delay in seconds. Valid range 1-10.\nWhen a port is disabled, LLDP is disabled or the switch is rebooted, a LLDP shutdown frame is transmitted to the neighboring units, signaling that the LLDP information isn't valid anymore.\nTx reinitialization delay controls the amount of seconds between the shutdown frame and a new LLDP initialization.\n\nNote: Must be less than 0.25 times the Tx interval."
        },
        {
          "name": "msgTxHold",
          "type": "uint16_t",
          "description": "Set the LLDP tx hold times . Valid range 2-10.\nEach LLDP frame contains information about how long time the information in the LLDP frame shall be considered valid. The LLDP information valid period is set to tx hold times multiplied by tx interval seconds."
        },
        {
          "name": "msgTxInterval",
          "type": "uint16_t",
          "description": "Set the LLDP tx interval in seconds.\nThe switch periodically transmits LLDP frames to its neighbors for having the network discovery information up-to-date. The interval between each LLDP frame is determined by the tx Interval value.\n\nValid range 5-32768 seconds."
        },
        {
          "name": "txDelay",
          "type": "uint16_t",
          "description": "Set the LLDP tx delay in seconds. Valid range 1-8192.\nIf some configuration is changed (e.g. the IP address) a new LLDP frame is transmitted, but the time between the LLDP frames will always be at least the value of tx delay seconds.\nNote: tx Delay cannot be larger than 1/4 of the tx interval."
        }
      ]
    },
    {
      "type-name": "vtss_appl_lldp_global_counters_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "TableInserts",
          "type": "uint32_t",
          "description": "Shows the number of new entries added since switch reboot."
        },
        {
          "name": "TableDeletes",
          "type": "uint32_t",
          "description": "Shows the number of new entries deleted since switch reboot."
        },
        {
          "name": "TableDrops",
          "type": "uint32_t",
          "description": "Shows the number of LLDP frames dropped due to the entry table being full."
        },
        {
          "name": "TableAgeOuts",
          "type": "uint32_t",
          "description": "Shows the number of entries deleted due to Time-To-Live expiring."
        },
        {
          "name": "LastChangeTime",
          "type": "uint64_t",
          "description": "Shows the time when the last entry was last deleted or added. It also shows the time elapsed since the last change was detected."
        }
      ]
    },
    {
      "type-name": "vtss_appl_lldp_med_application_type_t",
      "class": "Enum",
      "description": "This enumerations the remote neighbor's network policy's application type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "voice",
          "value": "1"
        },
        {
          "name": "voiceSignaling",
          "value": "2"
        },
        {
          "name": "guestVoice",
          "value": "3"
        },
        {
          "name": "guestVoiceSignaling",
          "value": "4"
        },
        {
          "name": "softphoneVoice",
          "value": "5"
        },
        {
          "name": "videoConferencing",
          "value": "6"
        },
        {
          "name": "streamingVideo",
          "value": "7"
        },
        {
          "name": "videoSignaling",
          "value": "8"
        }
      ]
    },
    {
      "type-name": "vtss_appl_lldp_med_at_type_t",
      "class": "Enum",
      "description": "This enumerations the altitude type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "meters",
          "value": "1"
        },
        {
          "name": "floors",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_lldp_med_catype_t",
      "class": "Enum",
      "description": "This enumerations the civic address type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "state",
          "value": "1"
        },
        {
          "name": "county",
          "value": "2"
        },
        {
          "name": "city",
          "value": "3"
        },
        {
          "name": "district",
          "value": "4"
        },
        {
          "name": "block",
          "value": "5"
        },
        {
          "name": "street",
          "value": "6"
        },
        {
          "name": "leadingStreetDirection",
          "value": "16"
        },
        {
          "name": "trailingStreetSuffix",
          "value": "17"
        },
        {
          "name": "streetSuffix",
          "value": "18"
        },
        {
          "name": "houseNo",
          "value": "19"
        },
        {
          "name": "houseNoSuffix",
          "value": "20"
        },
        {
          "name": "landmark",
          "value": "21"
        },
        {
          "name": "additionalInformation",
          "value": "22"
        },
        {
          "name": "name",
          "value": "23"
        },
        {
          "name": "zipCode",
          "value": "24"
        },
        {
          "name": "building",
          "value": "25"
        },
        {
          "name": "apartment",
          "value": "26"
        },
        {
          "name": "floor",
          "value": "27"
        },
        {
          "name": "roomNumber",
          "value": "28"
        },
        {
          "name": "placeType",
          "value": "29"
        },
        {
          "name": "postalCommunityName",
          "value": "30"
        },
        {
          "name": "poBox",
          "value": "31"
        },
        {
          "name": "additionalCode",
          "value": "32"
        }
      ]
    },
    {
      "type-name": "vtss_appl_lldp_med_datum_t",
      "class": "Enum",
      "description": "This enumerations the datum (geodetic system).",
      "encoding-type": "String",
      "elements": [
        {
          "name": "wgs84",
          "value": "1"
        },
        {
          "name": "nad83navd88",
          "value": "2"
        },
        {
          "name": "nad83mllw",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_lldp_med_device_type_t",
      "class": "Enum",
      "description": "This enumerations the device type that the device shall operate as.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "connectivity",
          "value": "0"
        },
        {
          "name": "endpoint",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_lldp_med_remote_device_type_t",
      "class": "Enum",
      "description": "This enumerations the remote neighbor's device type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "notDefined",
          "value": "0"
        },
        {
          "name": "endpointClassI",
          "value": "1"
        },
        {
          "name": "endpointClassII",
          "value": "2"
        },
        {
          "name": "endpointClassIII",
          "value": "3"
        },
        {
          "name": "networkConnectivity",
          "value": "4"
        },
        {
          "name": "reserved",
          "value": "5"
        }
      ]
    },
    {
      "type-name": "vtss_appl_lldp_port_counters_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "TxTotal",
          "type": "uint32_t",
          "description": "Shows the number of LLDP frames transmitted."
        },
        {
          "name": "RxTotal",
          "type": "uint32_t",
          "description": "Shows the number of LLDP frames received."
        },
        {
          "name": "RxError",
          "type": "uint32_t",
          "description": "Shows the number of received LLDP frames containing some kind of error."
        },
        {
          "name": "RxDiscarded",
          "type": "uint32_t",
          "description": "Show the number of LLDP frames discarded.                                       If a LLDP frame is received at an interface, and the switch's internal table has run full, the LLDP frame is counted and discarded.                                       This situation is known as 'Too Many Neighbors' in the LLDP standard.                                       LLDP frames require a new entry in the table when the Chassis ID or Remote Port ID is not already contained within the table.                                       Entries are removed from the table when a given interface's link is down, an LLDP shutdown frame is received, or when the entry ages out."
        },
        {
          "name": "TLVsDiscarded",
          "type": "uint32_t",
          "description": "Shows the number of TLVs discarded.                                       Each LLDP frame can contain multiple pieces of information, known as TLVs (TLV is short for 'Type Length Value').                                       If a TLV is malformed, it is counted and discarded."
        },
        {
          "name": "TLVsUnrecognized",
          "type": "uint32_t",
          "description": "Shows the number of well-formed TLVs, but with an unknown type value."
        },
        {
          "name": "TLVsOrgDiscarded",
          "type": "uint32_t",
          "description": "Shows the number of well-formed TLVs, but with an organizationally TLV which is not supported."
        },
        {
          "name": "AgeOuts",
          "type": "uint32_t",
          "description": "Show the number of age-outs.                                       Each frame contains information about how long time the LLDP information is valid (age-out time).                                       If no new LLDP frame is received within the age out time, the information is removed, and the counter is incremented."
        }
      ]
    },
    {
      "type-name": "vtss_appl_lldpmed_civic_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "State",
          "type": "char *",
          "description": "National subdivision"
        },
        {
          "name": "County",
          "type": "char *",
          "description": "County"
        },
        {
          "name": "City",
          "type": "char *",
          "description": "City"
        },
        {
          "name": "District",
          "type": "char *",
          "description": "City district"
        },
        {
          "name": "Block",
          "type": "char *",
          "description": "Block (Neighborhood)"
        },
        {
          "name": "Street",
          "type": "char *",
          "description": "Street"
        },
        {
          "name": "LeadingStreetDirection",
          "type": "char *",
          "description": "Street Direction"
        },
        {
          "name": "TrailingStreetSuffix",
          "type": "char *",
          "description": "Trailing Street Suffix"
        },
        {
          "name": "StreetSuffix",
          "type": "char *",
          "description": "Street Suffix"
        },
        {
          "name": "HouseNo",
          "type": "char *",
          "description": "House No."
        },
        {
          "name": "HouseNoSuffix",
          "type": "char *",
          "description": "House No. Suffix"
        },
        {
          "name": "Landmark",
          "type": "char *",
          "description": "Landmark"
        },
        {
          "name": "AdditionalInfo",
          "type": "char *",
          "description": "Additional Location Info"
        },
        {
          "name": "Name",
          "type": "char *",
          "description": "Name"
        },
        {
          "name": "ZipCode",
          "type": "char *",
          "description": "Zip code"
        },
        {
          "name": "Building",
          "type": "char *",
          "description": "Building"
        },
        {
          "name": "Apartment",
          "type": "char *",
          "description": "Apartment/unit"
        },
        {
          "name": "Floor",
          "type": "char *",
          "description": "Floor"
        },
        {
          "name": "RoomNumber",
          "type": "char *",
          "description": "Room Number"
        },
        {
          "name": "PlaceType",
          "type": "char *",
          "description": "Place type"
        },
        {
          "name": "PostalCommunityName",
          "type": "char *",
          "description": "Postal Community Name"
        },
        {
          "name": "PoBox",
          "type": "char *",
          "description": "Post Office Box"
        },
        {
          "name": "AdditionalCode",
          "type": "char *",
          "description": "Addination Code"
        },
        {
          "name": "CountryCode",
          "type": "char *",
          "description": "The two-letter ISO 3166 country code in capital ASCII letters - Example: DK, DE or US."
        }
      ]
    },
    {
      "type-name": "vtss_appl_loop_protect_action_t",
      "class": "Enum",
      "description": "This enumeration defines the available actions for when a loop on an interface is detected.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "shutdown",
          "value": "0"
        },
        {
          "name": "shutdownAndLogEvent",
          "value": "1"
        },
        {
          "name": "logEvent",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mac_age_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AgeTime",
          "type": "uint32_t",
          "description": "Mac address aging time in the FDB."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mac_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "NonVolatileMax",
          "type": "uint32_t",
          "description": "Max number of static non-volatile MAC addresses that can be stored in the system."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mac_port_learn_mode_t",
      "class": "Enum",
      "description": "The learning mode of the port.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "auto",
          "value": "0"
        },
        {
          "name": "disable",
          "value": "1"
        },
        {
          "name": "secure",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mac_port_stats_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Dynamic",
          "type": "uint32_t",
          "description": "Total number of dynamic learned addresses on the port"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mac_table_stats_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "TotalDynamic",
          "type": "uint32_t",
          "description": "Total dynamic learned addresses in the FDB"
        },
        {
          "name": "TotalStatic",
          "type": "uint32_t",
          "description": "Total static addresses in the FDB"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_aps_type_t",
      "class": "Enum",
      "description": "Type of APS.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "invalidAps",
          "value": "0"
        },
        {
          "name": "linearAps",
          "value": "1"
        },
        {
          "name": "ringAps",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_bfd_auth_type_t",
      "class": "Enum",
      "description": "BFD authentication type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "disabled",
          "value": "0"
        },
        {
          "name": "simplePwd",
          "value": "1"
        },
        {
          "name": "keyedMD5",
          "value": "2"
        },
        {
          "name": "meticulousKeyedMD5",
          "value": "3"
        },
        {
          "name": "keyedSHA1",
          "value": "4"
        },
        {
          "name": "meticulousKeyedSHA1",
          "value": "5"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_bfd_diag_t",
      "class": "Enum",
      "description": "BFD diagnostic code.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "detectExpired",
          "value": "1"
        },
        {
          "name": "echoFailed",
          "value": "2"
        },
        {
          "name": "remoteDown",
          "value": "3"
        },
        {
          "name": "fwdPlaneReset",
          "value": "4"
        },
        {
          "name": "pathDown",
          "value": "5"
        },
        {
          "name": "concatPathDown",
          "value": "6"
        },
        {
          "name": "adminDown",
          "value": "7"
        },
        {
          "name": "reverseConcatDown",
          "value": "8"
        },
        {
          "name": "misconnectivity",
          "value": "9"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_bfd_session_state_t",
      "class": "Enum",
      "description": "State of BFD session.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "adminDown",
          "value": "0"
        },
        {
          "name": "down",
          "value": "1"
        },
        {
          "name": "init",
          "value": "2"
        },
        {
          "name": "up",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_cast_t",
      "class": "Enum",
      "description": "Unicast or Multicast selection.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "uniCast",
          "value": "0"
        },
        {
          "name": "multiCast",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_client_flow_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AisPrio",
          "type": "uint8_t",
          "description": "AIS Priority (EVC COS-ID) 0-7. Capability client_prio_highest indicate highest possible is requested"
        },
        {
          "name": "LckPrio",
          "type": "uint8_t",
          "description": "LCK Priority (EVC COS-ID) 0-7. Capability client_prio_highest indicate highest possible is requested"
        },
        {
          "name": "Level",
          "type": "uint8_t",
          "description": "Client flow level"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_direction_t",
      "class": "Enum",
      "description": "This enumeration indicates MEP instance direction measured by PM.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "down",
          "value": "0"
        },
        {
          "name": "up",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_dm_act_t",
      "class": "Enum",
      "description": "Action when internal total delay counter overflow.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "disableDm",
          "value": "0"
        },
        {
          "name": "continueDm",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_dm_calcway_t",
      "class": "Enum",
      "description": "Round trip or flow calculation way selection.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "roundTrip",
          "value": "0"
        },
        {
          "name": "flow",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_dm_tunit_t",
      "class": "Enum",
      "description": "This enumeration indicates time resolution of the DM results measured by PM.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "us",
          "value": "0"
        },
        {
          "name": "ns",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_ended_t",
      "class": "Enum",
      "description": "Dual/single ended selection.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "singleEnded",
          "value": "0"
        },
        {
          "name": "dualEnded",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_format_t",
      "class": "Enum",
      "description": "The MEG-ID format.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "ituIcc",
          "value": "0"
        },
        {
          "name": "ieeeString",
          "value": "1"
        },
        {
          "name": "ituCcIcc",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_g8113_2_bfd_auth_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "KeyType",
          "type": "vtss_appl_mep_bfd_auth_type_t",
          "description": "Key type."
        },
        {
          "name": "KeyLen",
          "type": "uint8_t",
          "description": "Key length in bytes. 1-16 for Simple Password, 16 for MD5 and 20 for SHA1."
        },
        {
          "name": "Key",
          "type": "unsigned char *",
          "description": "Key value."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_g8113_2_bfd_state_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "CcTxCnt",
          "type": "uint64_t",
          "description": "BFD CC transmitted."
        },
        {
          "name": "ValidCcRxCnt",
          "type": "uint64_t",
          "description": "Valid BFD CC received."
        },
        {
          "name": "InvalidCcRxCnt",
          "type": "uint64_t",
          "description": "Invalid BFD CC received."
        },
        {
          "name": "CvTxCnt",
          "type": "uint64_t",
          "description": "BFD CV transmitted."
        },
        {
          "name": "ValidCvRxCnt",
          "type": "uint64_t",
          "description": "Valid BFD CV received."
        },
        {
          "name": "InvalidCvRxCnt",
          "type": "uint64_t",
          "description": "Invalid BFD CV received."
        },
        {
          "name": "MyDiscr",
          "type": "uint32_t",
          "description": "Selected random 'My Discriminator' value, non-zero."
        },
        {
          "name": "SessionState0",
          "type": "vtss_appl_mep_bfd_session_state_t",
          "description": "Local BFD session state (for coordinated mode only SessionState0 is valid, for independent mode SessionState0 is sink, SessionState1 is source."
        },
        {
          "name": "SessionState1",
          "type": "vtss_appl_mep_bfd_session_state_t",
          "description": "Local BFD session state. Only valid in independent mode where SessionState0 is sink, SessionState1 is source."
        },
        {
          "name": "LocalDiag",
          "type": "vtss_appl_mep_bfd_diag_t",
          "description": "Local diagnostic code."
        },
        {
          "name": "RemoteSessionState",
          "type": "vtss_appl_mep_bfd_session_state_t",
          "description": "BFD session state received from remote end."
        },
        {
          "name": "RemoteDiag",
          "type": "vtss_appl_mep_bfd_diag_t",
          "description": "Diagnostic code received from remote end."
        },
        {
          "name": "RemoteDiscr",
          "type": "uint32_t",
          "description": "Discriminator value received from remote end."
        },
        {
          "name": "RemoteMinRx",
          "type": "uint32_t",
          "description": "Required Min RX interval value received from remote end."
        },
        {
          "name": "RemoteFlags",
          "type": "uint8_t",
          "description": "Flags received from remote end."
        },
        {
          "name": "UnexpDiscr",
          "type": "uint32_t",
          "description": "Last received unexpected discriminator value (should be my configured)."
        },
        {
          "name": "ExpSrcMepIdTlv",
          "type": "unsigned char *",
          "description": "Expected source MEP ID TLV."
        },
        {
          "name": "UnexpSrcMepIdTlv",
          "type": "unsigned char *",
          "description": "Last received unexpected source MEP ID TLV."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_lb_state_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "TransactionId",
          "type": "uint32_t",
          "description": "This is the transaction id that is used to send the next LBM."
        },
        {
          "name": "ReplyCounter",
          "type": "uint32_t",
          "description": "The number of replying MAC. In case of 'infinite' LBM there is only one reply."
        },
        {
          "name": "LbmTransmitted",
          "type": "uint64_t",
          "description": "The number of transmitted LBM."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_lm_avail_state",
      "class": "Enum",
      "description": "Loss Measurement Availability State.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "available",
          "value": "0"
        },
        {
          "name": "unavailable",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_lm_avail_state_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "NearEndAvailState",
          "type": "vtss_appl_mep_lm_avail_state",
          "description": "Near end Availability State."
        },
        {
          "name": "FarEndAvailState",
          "type": "vtss_appl_mep_lm_avail_state",
          "description": "Far end Availability State."
        },
        {
          "name": "NearEndAvailCnt",
          "type": "uint32_t",
          "description": "Near end Availability Count."
        },
        {
          "name": "FarEndAvailCnt",
          "type": "uint32_t",
          "description": "Far end Availability Count."
        },
        {
          "name": "NearEndUnAvailCnt",
          "type": "uint32_t",
          "description": "Near end Unavailability Count."
        },
        {
          "name": "FarEndUnAvailCnt",
          "type": "uint32_t",
          "description": "Far end Unavailability Count."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_lm_hli_state_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "NearEndCnt",
          "type": "uint32_t",
          "description": "Near end High Loss Interval count (number of measurements where Availability State is available and FLR is above HLI FLR threshold."
        },
        {
          "name": "FarEndCnt",
          "type": "uint32_t",
          "description": "Far end High Loss Interval count (number of measurements where Availability State is available and FLR is above HLI FLR threshold."
        },
        {
          "name": "NearEndConCnt",
          "type": "uint32_t",
          "description": "Near end High Loss Interval consecutive count."
        },
        {
          "name": "FarEndConCnt",
          "type": "uint32_t",
          "description": "Far end High Loss Interval consecutive count."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_lm_notif_state_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "NearEndAvailState",
          "type": "vtss_appl_mep_lm_avail_state",
          "description": "Near end Availability State."
        },
        {
          "name": "FarEndAvailState",
          "type": "vtss_appl_mep_lm_avail_state",
          "description": "Far end Availability State."
        },
        {
          "name": "NearEndLosCounterInt",
          "type": "int32_t",
          "description": "Near end frame loss counter for interval."
        },
        {
          "name": "FarEndLosCounterInt",
          "type": "int32_t",
          "description": "Far end frame loss counter for interval."
        },
        {
          "name": "NearEndLosThCnt",
          "type": "uint32_t",
          "description": "Near end frame loss threshold count."
        },
        {
          "name": "FarEndLosThCnt",
          "type": "uint32_t",
          "description": "Far end frame loss threshold count."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_lm_state_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "TxCounter",
          "type": "uint32_t",
          "description": "Transmitted PDU (LMM - CCM) containing counters."
        },
        {
          "name": "RxCounter",
          "type": "uint32_t",
          "description": "Received PDU (LMM - CCM) containing counters."
        },
        {
          "name": "NearEndLosCounterTot",
          "type": "int32_t",
          "description": "Near end total frame loss counter."
        },
        {
          "name": "FarEndLosCounterTot",
          "type": "int32_t",
          "description": "Far end total frame loss counter."
        },
        {
          "name": "NearEndLosRatioInt",
          "type": "uint32_t",
          "description": "Near end frame loss ratio for interval in per mille."
        },
        {
          "name": "FarEndLosRatioInt",
          "type": "uint32_t",
          "description": "Far end frame loss ratio for interval in per mille."
        },
        {
          "name": "NearEndLosCounterInt",
          "type": "int32_t",
          "description": "Near end frame loss counter for interval."
        },
        {
          "name": "FarEndLosCounterInt",
          "type": "int32_t",
          "description": "Far end frame loss counter for interval."
        },
        {
          "name": "NearEndLosThCnt",
          "type": "uint32_t",
          "description": "Near end frame loss threshold count."
        },
        {
          "name": "FarEndLosThCnt",
          "type": "uint32_t",
          "description": "Far end frame loss threshold count."
        },
        {
          "name": "NearEndLosRatioTot",
          "type": "uint32_t",
          "description": "Near end total frame loss ratio in per mille (average since last clear)."
        },
        {
          "name": "FarEndLosRatioTot",
          "type": "uint32_t",
          "description": "Far end total frame loss ratio in per mille (average since last clear)."
        },
        {
          "name": "NearEndLosRatioMin",
          "type": "uint32_t",
          "description": "Near end minimum frame loss ratio in per mille (since last clear)."
        },
        {
          "name": "FarEndLosRatioMin",
          "type": "uint32_t",
          "description": "Far end minimum frame loss ratio in per mille (since last clear)."
        },
        {
          "name": "NearEndLosRatioMax",
          "type": "uint32_t",
          "description": "Near end maximum frame loss ratio in per mille (since last clear)."
        },
        {
          "name": "FarEndLosRatioMax",
          "type": "uint32_t",
          "description": "Far end maximum frame loss ratio in per mille (since last clear)."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_lt_transaction_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "TransactionId",
          "type": "uint32_t",
          "description": "The transaction id of the latest Link Trace."
        },
        {
          "name": "ReplyCount",
          "type": "uint32_t",
          "description": "Number of replies for this Link Trace transaction."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_mode_t",
      "class": "Enum",
      "description": "The instance mode.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "mep",
          "value": "0"
        },
        {
          "name": "mip",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_oam_count",
      "class": "Enum",
      "description": "Loss Measurement OAM frame counting selection.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "countAsY1731",
          "value": "0"
        },
        {
          "name": "countNone",
          "value": "1"
        },
        {
          "name": "countAll",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_pattern_t",
      "class": "Enum",
      "description": "Pattern in TST frame Data TLV.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "allZero",
          "value": "0"
        },
        {
          "name": "allOne",
          "value": "1"
        },
        {
          "name": "hexAA",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_rate_t",
      "class": "Enum",
      "description": "This enumeration indicates MEP frame rate of CCM/LMM PDU which is the inverse of transmission period as described in Y.1731.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "frames300PerSecond",
          "value": "1"
        },
        {
          "name": "frames100PerSecond",
          "value": "2"
        },
        {
          "name": "frames10PerSecond",
          "value": "3"
        },
        {
          "name": "frames1PerSecond",
          "value": "4"
        },
        {
          "name": "frames6PerMinute",
          "value": "5"
        },
        {
          "name": "frames1PerMinute",
          "value": "6"
        },
        {
          "name": "frames6PerHour",
          "value": "7"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_relay_act_t",
      "class": "Enum",
      "description": "The Link Trace relay action.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "relayUnknown",
          "value": "0"
        },
        {
          "name": "relayHit",
          "value": "1"
        },
        {
          "name": "relayFdb",
          "value": "2"
        },
        {
          "name": "relayMpdb",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_rt_pad_tlv_type_t",
      "class": "Enum",
      "description": "RT Pad TLV type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "drop",
          "value": "1"
        },
        {
          "name": "copy",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_rt_ret_code_t",
      "class": "Enum",
      "description": "RT return code type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "malformed",
          "value": "1"
        },
        {
          "name": "tlvError",
          "value": "2"
        },
        {
          "name": "isEgress",
          "value": "3"
        },
        {
          "name": "noMapping",
          "value": "4"
        },
        {
          "name": "downMapMismatch",
          "value": "5"
        },
        {
          "name": "upIfUnknown",
          "value": "6"
        },
        {
          "name": "labelSwitch",
          "value": "8"
        },
        {
          "name": "labelSwitchNoFwd",
          "value": "9"
        },
        {
          "name": "mappingWrong",
          "value": "10"
        },
        {
          "name": "noLabel",
          "value": "11"
        },
        {
          "name": "protocolError",
          "value": "12"
        },
        {
          "name": "premature",
          "value": "13"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_rt_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "SeqNo",
          "type": "uint32_t",
          "description": "Sequence number of first RT request."
        },
        {
          "name": "RequestCount",
          "type": "uint32_t",
          "description": "Number of RT requests sent for current session."
        },
        {
          "name": "ReplyCount",
          "type": "uint32_t",
          "description": "Number of replies received for this Route Trace session."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_tlv_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "OsTlvOuiFirst",
          "type": "uint8_t",
          "description": "Transmitted OS TLV - The OUI content first nibble"
        },
        {
          "name": "OsTlvOuiSecond",
          "type": "uint8_t",
          "description": "Transmitted OS TLV - The OUI content second nibble"
        },
        {
          "name": "OsTlvOuiThird",
          "type": "uint8_t",
          "description": "Transmitted OS TLV - The OUI content third nibble"
        },
        {
          "name": "OsTlvSubType",
          "type": "uint8_t",
          "description": "Transmitted OS TLV - The Sub-Type content"
        },
        {
          "name": "OsTlvValue",
          "type": "uint8_t",
          "description": "Transmitted OS TLV - The Value content"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_tst_state_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "TxCounter",
          "type": "uint64_t",
          "description": "Transmitted TST frames counter."
        },
        {
          "name": "RxCounter",
          "type": "uint64_t",
          "description": "REceived TST frames counter."
        },
        {
          "name": "OutOfOrderCounter",
          "type": "uint64_t",
          "description": "Out of Order counter."
        },
        {
          "name": "RxRate",
          "type": "uint32_t",
          "description": "Receive bit rate in Kbit/s."
        },
        {
          "name": "TestTime",
          "type": "uint32_t",
          "description": "Test time in seconds. The elapsed time since last clear."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mirror_session_type_t",
      "class": "Enum",
      "description": "This enumeration defines the session type in Mirror function.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "mirror",
          "value": "0"
        },
        {
          "name": "rMirrorSource",
          "value": "1"
        },
        {
          "name": "rMirrorDestination",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mplstp_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "MaxLinks",
          "type": "uint32_t",
          "description": "Maximum number of links."
        },
        {
          "name": "MaxTunnels",
          "type": "uint32_t",
          "description": "Maximum number of tunnels."
        },
        {
          "name": "MaxPw",
          "type": "uint32_t",
          "description": "Maximum number of pseudo wires."
        },
        {
          "name": "MaxLsp",
          "type": "uint32_t",
          "description": "Maximum number of LSP and xc."
        },
        {
          "name": "MaxCosMap",
          "type": "uint32_t",
          "description": "Maximum number of Class of Service maps."
        },
        {
          "name": "MaxTunnelNameLen",
          "type": "uint32_t",
          "description": "Maximum number of characters in tunnel name."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mplstp_cosmap_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "InTcToCos0",
          "type": "uint8_t",
          "description": "Ingress Traffic Class to Class of Service mapping"
        },
        {
          "name": "InTcToCos1",
          "type": "uint8_t",
          "description": "Ingress Traffic Class to Class of Service mapping"
        },
        {
          "name": "InTcToCos2",
          "type": "uint8_t",
          "description": "Ingress Traffic Class to Class of Service mapping"
        },
        {
          "name": "InTcToCos3",
          "type": "uint8_t",
          "description": "Ingress Traffic Class to Class of Service mapping"
        },
        {
          "name": "InTcToCos4",
          "type": "uint8_t",
          "description": "Ingress Traffic Class to Class of Service mapping"
        },
        {
          "name": "InTcToCos5",
          "type": "uint8_t",
          "description": "Ingress Traffic Class to Class of Service mapping"
        },
        {
          "name": "InTcToCos6",
          "type": "uint8_t",
          "description": "Ingress Traffic Class to Class of Service mapping"
        },
        {
          "name": "InTcToCos7",
          "type": "uint8_t",
          "description": "Ingress Traffic Class to Class of Service mapping"
        },
        {
          "name": "InTcToDp0",
          "type": "uint8_t",
          "description": "Ingress Traffic Class to Drop Precedence mapping."
        },
        {
          "name": "InTcToDp1",
          "type": "uint8_t",
          "description": "Ingress Traffic Class to Drop Precedence mapping."
        },
        {
          "name": "InTcToDp2",
          "type": "uint8_t",
          "description": "Ingress Traffic Class to Drop Precedence mapping."
        },
        {
          "name": "InTcToDp3",
          "type": "uint8_t",
          "description": "Ingress Traffic Class to Drop Precedence mapping."
        },
        {
          "name": "InTcToDp4",
          "type": "uint8_t",
          "description": "Ingress Traffic Class to Drop Precedence mapping."
        },
        {
          "name": "InTcToDp5",
          "type": "uint8_t",
          "description": "Ingress Traffic Class to Drop Precedence mapping."
        },
        {
          "name": "InTcToDp6",
          "type": "uint8_t",
          "description": "Ingress Traffic Class to Drop Precedence mapping."
        },
        {
          "name": "InTcToDp7",
          "type": "uint8_t",
          "description": "Ingress Traffic Class to Drop Precedence mapping."
        },
        {
          "name": "OutCosDpToTc00",
          "type": "uint8_t",
          "description": "Class of Service (0-7) and Egress Drop Precedence (0) to Traffic Class mapping."
        },
        {
          "name": "OutCosDpToTc10",
          "type": "uint8_t",
          "description": "Class of Service (0-7) and Egress Drop Precedence (0) to Traffic Class mapping."
        },
        {
          "name": "OutCosDpToTc20",
          "type": "uint8_t",
          "description": "Class of Service (0-7) and Egress Drop Precedence (0) to Traffic Class mapping."
        },
        {
          "name": "OutCosDpToTc30",
          "type": "uint8_t",
          "description": "Class of Service (0-7) and Egress Drop Precedence (0) to Traffic Class mapping."
        },
        {
          "name": "OutCosDpToTc40",
          "type": "uint8_t",
          "description": "Class of Service (0-7) and Egress Drop Precedence (0) to Traffic Class mapping."
        },
        {
          "name": "OutCosDpToTc50",
          "type": "uint8_t",
          "description": "Class of Service (0-7) and Egress Drop Precedence (0) to Traffic Class mapping."
        },
        {
          "name": "OutCosDpToTc60",
          "type": "uint8_t",
          "description": "Class of Service (0-7) and Egress Drop Precedence (0) to Traffic Class mapping."
        },
        {
          "name": "OutCosDpToTc70",
          "type": "uint8_t",
          "description": "Class of Service (0-7) and Egress Drop Precedence (0) to Traffic Class mapping."
        },
        {
          "name": "OutCosDpToTc01",
          "type": "uint8_t",
          "description": "Class of Service (0-7) and Egress Drop Precedence (1) toTraffic Class mapping."
        },
        {
          "name": "OutCosDpToTc11",
          "type": "uint8_t",
          "description": "Class of Service (0-7) and Egress Drop Precedence (1) toTraffic Class mapping."
        },
        {
          "name": "OutCosDpToTc21",
          "type": "uint8_t",
          "description": "Class of Service (0-7) and Egress Drop Precedence (1) toTraffic Class mapping."
        },
        {
          "name": "OutCosDpToTc31",
          "type": "uint8_t",
          "description": "Class of Service (0-7) and Egress Drop Precedence (1) toTraffic Class mapping."
        },
        {
          "name": "OutCosDpToTc41",
          "type": "uint8_t",
          "description": "Class of Service (0-7) and Egress Drop Precedence (1) toTraffic Class mapping."
        },
        {
          "name": "OutCosDpToTc51",
          "type": "uint8_t",
          "description": "Class of Service (0-7) and Egress Drop Precedence (1) toTraffic Class mapping."
        },
        {
          "name": "OutCosDpToTc61",
          "type": "uint8_t",
          "description": "Class of Service (0-7) and Egress Drop Precedence (1) toTraffic Class mapping."
        },
        {
          "name": "OutCosDpToTc71",
          "type": "uint8_t",
          "description": "Class of Service (0-7) and Egress Drop Precedence (1) toTraffic Class mapping."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mplstp_counters_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "RxGreenFrames",
          "type": "uint64_t",
          "description": "Number of received green frames."
        },
        {
          "name": "RxGreenBytes",
          "type": "uint64_t",
          "description": "Number of received green bytes."
        },
        {
          "name": "RxYellowFrames",
          "type": "uint64_t",
          "description": "Number of received yellow frames."
        },
        {
          "name": "RxYellowBytes",
          "type": "uint64_t",
          "description": "Number of received yellow bytes."
        },
        {
          "name": "RxRedFrames",
          "type": "uint64_t",
          "description": "Number of received red frames."
        },
        {
          "name": "RxRedBytes",
          "type": "uint64_t",
          "description": "Number of received red bytes."
        },
        {
          "name": "RxDiscardFrames",
          "type": "uint64_t",
          "description": "Number of received discarded frames."
        },
        {
          "name": "RxDiscardBytes",
          "type": "uint64_t",
          "description": "Number of received discarded bytes."
        },
        {
          "name": "TxGreenFrames",
          "type": "uint64_t",
          "description": "Number of transmitted green frames."
        },
        {
          "name": "TxGreenBytes",
          "type": "uint64_t",
          "description": "Number of transmitted green bytes."
        },
        {
          "name": "TxYellowFrames",
          "type": "uint64_t",
          "description": "Number of transmitted yellow frames."
        },
        {
          "name": "TxYellowBytes",
          "type": "uint64_t",
          "description": "Number of transmitted yellow bytes."
        },
        {
          "name": "TxDiscardFrames",
          "type": "uint64_t",
          "description": "Number of egress discarded frames."
        },
        {
          "name": "TxDiscardBytes",
          "type": "uint64_t",
          "description": "Number of egress discarded bytes."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mplstp_fwd_counters_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "FwdRxGreenFrames",
          "type": "uint64_t",
          "description": "Number of received green frames."
        },
        {
          "name": "FwdRxGreenBytes",
          "type": "uint64_t",
          "description": "Number of received green bytes."
        },
        {
          "name": "FwdRxYellowFrames",
          "type": "uint64_t",
          "description": "Number of received yellow frames."
        },
        {
          "name": "FwdRxYellowBytes",
          "type": "uint64_t",
          "description": "Number of received yellow bytes."
        },
        {
          "name": "FwdRxRedFrames",
          "type": "uint64_t",
          "description": "Number of received red frames."
        },
        {
          "name": "FwdRxRedBytes",
          "type": "uint64_t",
          "description": "Number of received red bytes."
        },
        {
          "name": "FwdRxDiscardFrames",
          "type": "uint64_t",
          "description": "Number of received discarded frames."
        },
        {
          "name": "FwdRxDiscardBytes",
          "type": "uint64_t",
          "description": "Number of received discarded bytes."
        },
        {
          "name": "FwdTxGreenFrames",
          "type": "uint64_t",
          "description": "Number of transmitted green frames."
        },
        {
          "name": "FwdTxGreenBytes",
          "type": "uint64_t",
          "description": "Number of transmitted green bytes."
        },
        {
          "name": "FwdTxYellowFrames",
          "type": "uint64_t",
          "description": "Number of transmitted yellow frames."
        },
        {
          "name": "FwdTxYellowBytes",
          "type": "uint64_t",
          "description": "Number of transmitted yellow bytes."
        },
        {
          "name": "FwdTxDiscardFrames",
          "type": "uint64_t",
          "description": "Number of egress discarded frames."
        },
        {
          "name": "FwdTxDiscardBytes",
          "type": "uint64_t",
          "description": "Number of egress discarded bytes."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mplstp_oam_vccv_t",
      "class": "Enum",
      "description": "Specifies the MPLS Vccv type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "vccv1",
          "value": "1"
        },
        {
          "name": "vccv2",
          "value": "2"
        },
        {
          "name": "vccv3",
          "value": "3"
        },
        {
          "name": "vccv4",
          "value": "4"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mplstp_rev_counters_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "RewRxGreenFrames",
          "type": "uint64_t",
          "description": "Number of received green frames."
        },
        {
          "name": "RewRxGreenBytes",
          "type": "uint64_t",
          "description": "Number of received green bytes."
        },
        {
          "name": "RewRxYellowFrames",
          "type": "uint64_t",
          "description": "Number of received yellow frames."
        },
        {
          "name": "RewRxYellowBytes",
          "type": "uint64_t",
          "description": "Number of received yellow bytes."
        },
        {
          "name": "RewRxRedFrames",
          "type": "uint64_t",
          "description": "Number of received red frames."
        },
        {
          "name": "RewRxRedBytes",
          "type": "uint64_t",
          "description": "Number of received red bytes."
        },
        {
          "name": "RewRxDiscardFrames",
          "type": "uint64_t",
          "description": "Number of received discarded frames."
        },
        {
          "name": "RewRxDiscardBytes",
          "type": "uint64_t",
          "description": "Number of received discarded bytes."
        },
        {
          "name": "RewTxGreenFrames",
          "type": "uint64_t",
          "description": "Number of transmitted green frames."
        },
        {
          "name": "RewTxGreenBytes",
          "type": "uint64_t",
          "description": "Number of transmitted green bytes."
        },
        {
          "name": "RewTxYellowFrames",
          "type": "uint64_t",
          "description": "Number of transmitted yellow frames."
        },
        {
          "name": "RewTxYellowBytes",
          "type": "uint64_t",
          "description": "Number of transmitted yellow bytes."
        },
        {
          "name": "RewTxDiscardFrames",
          "type": "uint64_t",
          "description": "Number of egress discarded frames."
        },
        {
          "name": "RewTxDiscardBytes",
          "type": "uint64_t",
          "description": "Number of egress discarded bytes."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mplstp_state_t",
      "class": "Enum",
      "description": "Specifies the MPLS state.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "unconfigured",
          "value": "0"
        },
        {
          "name": "configured",
          "value": "1"
        },
        {
          "name": "up",
          "value": "2"
        },
        {
          "name": "down",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mplstp_tagtype_t",
      "class": "Enum",
      "description": "Specifies the MPLS tag type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "untagged",
          "value": "0"
        },
        {
          "name": "ctagged",
          "value": "1"
        },
        {
          "name": "stagged",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mplstp_tunnel_mode_t",
      "class": "Enum",
      "description": "Specifies the MPLS tunnel mode.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "pipe",
          "value": "0"
        },
        {
          "name": "shortpipe",
          "value": "1"
        },
        {
          "name": "uniform",
          "value": "2"
        },
        {
          "name": "useglobal",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mstp_forceversion_t",
      "class": "Enum",
      "description": "This enumeration control the STP protocol variant to run.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "stp",
          "value": "0"
        },
        {
          "name": "rstp",
          "value": "2"
        },
        {
          "name": "mstp",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mstp_msti_config_name_and_rev_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Name",
          "type": "char *",
          "description": "The configuration name"
        },
        {
          "name": "Revision",
          "type": "uint16_t",
          "description": "The configuration revision"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mstp_msti_param_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Priority",
          "type": "uint8_t",
          "description": "Bridge Priority"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mstp_msti_port_param_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AdminPathCost",
          "type": "uint32_t",
          "description": "Path Cost - 13.37.1 of 802.1Q-2005"
        },
        {
          "name": "AdminPortPriority",
          "type": "uint8_t",
          "description": "priority field for the Port Identifier - 13.24.12 of 802.1Q-2005"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mstp_p2p_t",
      "class": "Enum",
      "description": "This enumeration describe the values of adminPointToPointMAC and operPointToPointMAC parameters. (Full duplex port administrative and operational status.) See 6.4.3 of IEEE Std 802.1D.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "forceTrue",
          "value": "0"
        },
        {
          "name": "forceFalse",
          "value": "1"
        },
        {
          "name": "auto",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mstp_port_statistics_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "StpFrameXmits",
          "type": "uint32_t",
          "description": "Number of STP frames transmitted"
        },
        {
          "name": "StpFrameReceived",
          "type": "uint32_t",
          "description": "Number of STP frames received"
        },
        {
          "name": "RstpFrameXmits",
          "type": "uint32_t",
          "description": "Number of RSTP frames transmitted"
        },
        {
          "name": "RstpFrameReceived",
          "type": "uint32_t",
          "description": "Number of RSTP frames received"
        },
        {
          "name": "MstpFrameXmits",
          "type": "uint32_t",
          "description": "Number of MSTP frames transmitted"
        },
        {
          "name": "MstpFrameReceived",
          "type": "uint32_t",
          "description": "Number of MSTP frames received"
        },
        {
          "name": "UnknownFramesReceived",
          "type": "uint32_t",
          "description": "Number of unknown frames received and discarded in error"
        },
        {
          "name": "IllegalFrameReceived",
          "type": "uint32_t",
          "description": "Number of illegal frames received and discarded in error"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mstp_portstate_t",
      "class": "Enum",
      "description": "This enumeration describe the forwarding state of an interface.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "disabled",
          "value": "0"
        },
        {
          "name": "discarding",
          "value": "1"
        },
        {
          "name": "learning",
          "value": "2"
        },
        {
          "name": "forwarding",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mstp_vlan_msti_config",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mstid",
          "type": "uint8_t",
          "description": "The MSTID value associated with the vlan id"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mvr_action_t",
      "class": "Enum",
      "description": "This enumeration indicates the source filtering type from IPMC.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "deny",
          "value": "0"
        },
        {
          "name": "permit",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_nas_backend_counters_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "backendResponses",
          "type": "uint32_t",
          "description": "Numbers of backend Responses."
        },
        {
          "name": "backendAccessChallenges",
          "type": "uint32_t",
          "description": "Numbers of backend Access Challenges."
        },
        {
          "name": "backendOtherRequestsToSupplicant",
          "type": "uint32_t",
          "description": "Numbers of backend Other Requests To Supplicant."
        },
        {
          "name": "backendAuthSuccesses",
          "type": "uint32_t",
          "description": "Numbers of backend Auth Successes."
        },
        {
          "name": "backendAuthFails",
          "type": "uint32_t",
          "description": "Numbers of backend Auth Fails."
        }
      ]
    },
    {
      "type-name": "vtss_appl_nas_eapol_counters_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "dot1xAuthEapolFramesRx",
          "type": "uint32_t",
          "description": "Numbers of dot1x Auth Eapol Frames Received."
        },
        {
          "name": "dot1xAuthEapolFramesTx",
          "type": "uint32_t",
          "description": "Numbers of dot1x Auth Eapol Frames Transmitted."
        },
        {
          "name": "dot1xAuthEapolStartFramesRx",
          "type": "uint32_t",
          "description": "Numbers of dot1x Auth Eapol Start Frames Received."
        },
        {
          "name": "dot1xAuthEapolLogoffFramesRx",
          "type": "uint32_t",
          "description": "Numbers of dot1x Auth Eapol Logoff Frames Received."
        },
        {
          "name": "dot1xAuthEapolRespIdFramesRx",
          "type": "uint32_t",
          "description": "Numbers of dot1x Auth Eapol RespId Frames Received."
        },
        {
          "name": "dot1xAuthEapolRespFramesRx",
          "type": "uint32_t",
          "description": "Numbers of dot1x Auth Eapol Resp Frames Received."
        },
        {
          "name": "dot1xAuthEapolReqIdFramesTx",
          "type": "uint32_t",
          "description": "Numbers of dot1x Auth Eapol Req Id Frames Transmitted."
        },
        {
          "name": "dot1xAuthEapolReqFramesTx",
          "type": "uint32_t",
          "description": "Numbers of dot1x Auth Eapol Req Frames Transmitted."
        },
        {
          "name": "dot1xAuthInvalidEapolFramesRx",
          "type": "uint32_t",
          "description": "Numbers of dot1x Auth Invalid Eapol Frames Received."
        },
        {
          "name": "dot1xAuthEapLengthErrorFramesRx",
          "type": "uint32_t",
          "description": "Numbers of dot1x Auth Eap Length Error Frames Received."
        }
      ]
    },
    {
      "type-name": "vtss_appl_nas_port_control_t",
      "class": "Enum",
      "description": "This enumeration the NAS admin state.\n",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "forceAuthorized",
          "value": "1"
        },
        {
          "name": "auto",
          "value": "2"
        },
        {
          "name": "forceUnAuthorized",
          "value": "3"
        },
        {
          "name": "macBased",
          "value": "4"
        },
        {
          "name": "dot1xSingle",
          "value": "5"
        },
        {
          "name": "dot1xmulti",
          "value": "6"
        }
      ]
    },
    {
      "type-name": "vtss_appl_nas_port_status_t",
      "class": "Enum",
      "description": "This enumeration the NAS interface status.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "linkDown",
          "value": "0"
        },
        {
          "name": "authorized",
          "value": "1"
        },
        {
          "name": "unAuthorized",
          "value": "2"
        },
        {
          "name": "disabled",
          "value": "3"
        },
        {
          "name": "count",
          "value": "4"
        }
      ]
    },
    {
      "type-name": "vtss_appl_nas_vlan_type_t",
      "class": "Enum",
      "description": "This enumeration the NAS VLAN type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "radiusAssigned",
          "value": "1"
        },
        {
          "name": "guestVlan",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_password_t",
      "class": "TypeSpecification",
      "description": "Password string. The string can be set, but when reading an empty string is returned.",
      "json-encoding-type": "String"
    },
    {
      "type-name": "vtss_appl_pm_dm_bin_stats_data_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "HitCount",
          "type": "uint32_t",
          "description": "The hit count for the DM bin"
        }
      ]
    },
    {
      "type-name": "vtss_appl_pm_evc_port_type_t",
      "class": "Enum",
      "description": "This enumeration indicates per port type for EVC statistics.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "evcNni",
          "value": "0"
        },
        {
          "name": "evcUni",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_pm_interval_info_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "StartTime",
          "type": "char *",
          "description": "The date and time when PM starts."
        },
        {
          "name": "EndTime",
          "type": "char *",
          "description": "The date and time when PM stops."
        },
        {
          "name": "ElapsedTime",
          "type": "uint64_t",
          "description": "The elapsed time ticks for the specific monitoring type and the corresponding interval identifier."
        }
      ]
    },
    {
      "type-name": "vtss_appl_pm_transfer_mode_t",
      "class": "Enum",
      "description": "This enumeration indicates PM transfer interval mode.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "all",
          "value": "1"
        },
        {
          "name": "new",
          "value": "2"
        },
        {
          "name": "fixAmount",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_pm_transfer_offset_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Minute",
          "type": "uint8_t",
          "description": "The scheduled transfer time offset by minutes. The configurable value ranges from 0 to 15."
        },
        {
          "name": "RandomSecond",
          "type": "uint16_t",
          "description": "The scheduled transfer time random offset by seconds. It provides a range for choosing a random second offset. The configurable value ranges from 0 to 900."
        }
      ]
    },
    {
      "type-name": "vtss_appl_port_fc_t",
      "class": "Enum",
      "description": "This enumeration controls the interface flow control.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "off",
          "value": "0"
        },
        {
          "name": "on",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_port_media_t",
      "class": "Enum",
      "description": "This enumeration controls the interface media type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "rj45",
          "value": "0"
        },
        {
          "name": "sfp",
          "value": "1"
        },
        {
          "name": "dual",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_port_prio_counter_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "RxPrio",
          "type": "uint64_t",
          "description": "The number of frames received for the queue."
        },
        {
          "name": "TxPrio",
          "type": "uint64_t",
          "description": "The number of frames transmitted for the queue."
        }
      ]
    },
    {
      "type-name": "vtss_appl_port_speed_t",
      "class": "Enum",
      "description": "This enumeration controls the interface speed. E.g force10ModeFdx means force 10Mbs full duplex.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "force10ModeFdx",
          "value": "0"
        },
        {
          "name": "force10ModeHdx",
          "value": "1"
        },
        {
          "name": "force100ModeFdx",
          "value": "2"
        },
        {
          "name": "force100ModeHdx",
          "value": "3"
        },
        {
          "name": "force1GModeFdx",
          "value": "4"
        },
        {
          "name": "autoNegMode",
          "value": "5"
        },
        {
          "name": "force2G5ModeFdx",
          "value": "6"
        },
        {
          "name": "force5GModeFdx",
          "value": "7"
        },
        {
          "name": "force10GModeFdx",
          "value": "8"
        },
        {
          "name": "force12GModeFdx",
          "value": "9"
        }
      ]
    },
    {
      "type-name": "vtss_appl_power_saving_status_t",
      "class": "Enum",
      "description": "This enumeration defines the feature status.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "no",
          "value": "0"
        },
        {
          "name": "yes",
          "value": "1"
        },
        {
          "name": "notSupported",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_privilege_config_web_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ConfigRoPriv",
          "type": "uint32_t",
          "description": "Web privilege of read-only configuration."
        },
        {
          "name": "ConfigRwPriv",
          "type": "uint32_t",
          "description": "Web privilege of read-write configuration."
        },
        {
          "name": "StatusRoPriv",
          "type": "uint32_t",
          "description": "Web privilege of read-only status."
        },
        {
          "name": "StatusRwPriv",
          "type": "uint32_t",
          "description": "Web privilege of read-write status."
        }
      ]
    },
    {
      "type-name": "vtss_appl_psec_limit_action_t",
      "class": "Enum",
      "description": "This enumeration defines the Action type in psec function.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "trap",
          "value": "1"
        },
        {
          "name": "shutdown",
          "value": "2"
        },
        {
          "name": "trapShutdown",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_psec_state_t",
      "class": "Enum",
      "description": "This enumeration defines the state of Psec config.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "forwarding",
          "value": "0"
        },
        {
          "name": "blocked",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "clockCount",
          "type": "uint32_t",
          "description": "The number of PTP clocks supported by the device."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_clock_control_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "syncToSystemClock",
          "type": "uint8_t",
          "description": "-"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_clock_current_ds_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "stepsRemoved",
          "type": "uint16_t",
          "description": "The number of PTP clocks traversed from the grandmaster to the local PTP clock."
        },
        {
          "name": "offsetFromMaster",
          "type": "int64_t",
          "description": "The time differece in ns from the grandmaster to the local PTP clock."
        },
        {
          "name": "meanPathDelay",
          "type": "int64_t",
          "description": "The mean path delay from the master to the local slave."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_clock_filter_config_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "delayFilter",
          "type": "uint32_t",
          "description": "Defines the time constant of the delay filter."
        },
        {
          "name": "offsetFilter",
          "type": "uint32_t",
          "description": "Selects the type of offset filter used."
        },
        {
          "name": "period",
          "type": "uint32_t",
          "description": "Defines the period of the offset filter."
        },
        {
          "name": "dist",
          "type": "uint32_t",
          "description": "Sets the dist value of the offset filter."
        },
        {
          "name": "height",
          "type": "uint32_t",
          "description": "Sets the height value of the offset filter (only applicable to advanced filter)."
        },
        {
          "name": "percentage",
          "type": "uint32_t",
          "description": "Sets the percentage  of time delays values used by the offset filter (only applicable to advanced filter)."
        },
        {
          "name": "resetThreshold",
          "type": "uint32_t",
          "description": "Sets the reset threshold of the offset filter."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_clock_slave_config_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "stableOffset",
          "type": "uint32_t",
          "description": "Stable offset threshold in ns."
        },
        {
          "name": "offsetOk",
          "type": "uint32_t",
          "description": "Offset OK threshold in ns."
        },
        {
          "name": "offsetFail",
          "type": "uint32_t",
          "description": "Offset fail threshold in ns."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_clock_status_default_ds_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "clockIdentity",
          "type": "unsigned char *",
          "description": "This is the unique 8 byte clockIdentify field from the DefaultDS structure."
        },
        {
          "name": "clockQualityClockClass",
          "type": "uint8_t",
          "description": "This is the clock class field of the clock quality structure."
        },
        {
          "name": "clockQualityClockAccuracy",
          "type": "uint8_t",
          "description": "This is the clock accuracy field of the clock quality structure."
        },
        {
          "name": "clockQualityOffsetScaledLogVar",
          "type": "uint16_t",
          "description": "This is the offsetScaledLogVariance field of the clock quality structure."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_device_type_t",
      "class": "Enum",
      "description": "-",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "ordBound",
          "value": "1"
        },
        {
          "name": "p2pTransparent",
          "value": "2"
        },
        {
          "name": "e2eTransparent",
          "value": "3"
        },
        {
          "name": "masterOnly",
          "value": "4"
        },
        {
          "name": "slaveOnly",
          "value": "5"
        },
        {
          "name": "bcFrontend",
          "value": "6"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_ext_clock_1pps_t",
      "class": "Enum",
      "description": "-",
      "encoding-type": "String",
      "elements": [
        {
          "name": "onePpsDisable",
          "value": "0"
        },
        {
          "name": "onePpsOutput",
          "value": "1"
        },
        {
          "name": "onePpsInput",
          "value": "2"
        },
        {
          "name": "onePpsOutInput",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_preferred_adj_t",
      "class": "Enum",
      "description": "-",
      "encoding-type": "String",
      "elements": [
        {
          "name": "preferredAdjLtc",
          "value": "0"
        },
        {
          "name": "preferredAdjSyncE",
          "value": "1"
        },
        {
          "name": "preferredAdjXO",
          "value": "2"
        },
        {
          "name": "preferredAdjLtcPhase",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_protocol_t",
      "class": "Enum",
      "description": "-",
      "encoding-type": "String",
      "elements": [
        {
          "name": "ethernet",
          "value": "0"
        },
        {
          "name": "ethernetMixed",
          "value": "1"
        },
        {
          "name": "ip4multi",
          "value": "2"
        },
        {
          "name": "ip4mixed",
          "value": "3"
        },
        {
          "name": "ip4uni",
          "value": "4"
        },
        {
          "name": "oam",
          "value": "5"
        },
        {
          "name": "onePps",
          "value": "6"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_slave_clock_state_t",
      "class": "Enum",
      "description": "-",
      "encoding-type": "String",
      "elements": [
        {
          "name": "slaveClockStateFreerun",
          "value": "0"
        },
        {
          "name": "slaveClockStateFreqLocking",
          "value": "1"
        },
        {
          "name": "slaveClockStatePhaseLocking",
          "value": "2"
        },
        {
          "name": "slaveClockStateLocked",
          "value": "3"
        },
        {
          "name": "slaveClockStateHoldover",
          "value": "4"
        },
        {
          "name": "slaveClockStateInvalid",
          "value": "5"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_srv_clock_option_t",
      "class": "Enum",
      "description": "-",
      "encoding-type": "String",
      "elements": [
        {
          "name": "clockFree",
          "value": "0"
        },
        {
          "name": "clockSyncE",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_system_time_sync_mode_t",
      "class": "Enum",
      "description": "-",
      "encoding-type": "String",
      "elements": [
        {
          "name": "systemTimeNoSync",
          "value": "0"
        },
        {
          "name": "systemTimeSyncGet",
          "value": "1"
        },
        {
          "name": "systemTimeSyncSet",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_cos_dscp_entry_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Dscp",
          "type": "uint8_t",
          "description": "If qosCapabilitiesHasDscpDplClassification is true: This is the DSCP value which the classified CoS value maps to when the classified DPL is 0.\nIf qosCapabilitiesHasDscpDplClassification is false: This is the DSCP value which the classified CoS value maps to."
        },
        {
          "name": "DscpDp1",
          "type": "uint8_t",
          "description": "The DSCP value which the classified CoS value maps to when the classified DPL is 1.\n This object is only valid if QosCapabilitiesHasDscpDplClassification is true."
        },
        {
          "name": "DscpDp2",
          "type": "uint8_t",
          "description": "The DSCP value which the classified CoS value maps to when the classified DPL is 2.\nThis object is only valid if QosCapabilitiesHasDscpDplClassification is true and QosCapabilitiesDplMax is greater than 1."
        },
        {
          "name": "DscpDp3",
          "type": "uint8_t",
          "description": "The DSCP value which the classified CoS value maps to when the classified DPL is 3.\nThis object is only valid if QosCapabilitiesHasDscpDplClassification is true and QosCapabilitiesDplMax is greater than 2."
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_cos_tag_entry_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Pcp",
          "type": "uint32_t",
          "description": "The PCP value which this entry maps to.\nValid range is 0-7."
        },
        {
          "name": "Dei",
          "type": "uint8_t",
          "description": "The DEI value which this entry maps to.\nValid range is 0-1."
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_dscp_emode_t",
      "class": "Enum",
      "description": "An integer that indicates the DSCP remark mode.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "disabled",
          "value": "0"
        },
        {
          "name": "rewrite",
          "value": "1"
        },
        {
          "name": "remap",
          "value": "2"
        },
        {
          "name": "remapDp",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_dscp_mode_t",
      "class": "Enum",
      "description": "An integer that indicates the DSCP classify mode.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "zero",
          "value": "1"
        },
        {
          "name": "selected",
          "value": "2"
        },
        {
          "name": "all",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_if_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Cos",
          "type": "uint32_t",
          "description": "Some subsystems are allowed to modify the default CoS value for an interface. This object shows the actual default CoS value a packet is classified to."
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_qce_type_t",
      "class": "Enum",
      "description": "An integer that indicates the QCE frame type key.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "any",
          "value": "0"
        },
        {
          "name": "etype",
          "value": "1"
        },
        {
          "name": "llc",
          "value": "2"
        },
        {
          "name": "snap",
          "value": "3"
        },
        {
          "name": "ipv4",
          "value": "4"
        },
        {
          "name": "ipv6",
          "value": "5"
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_qcl_user_t",
      "class": "Enum",
      "description": "An integer that indicates the QCE user type.\nIf the value is zero it indicates a static configuration.\nIf the value is non-zero it indicates a dynamic configuration made by another subsystem.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "admin",
          "value": "0"
        },
        {
          "name": "voiceVlan",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_scheduler_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Weight",
          "type": "uint8_t",
          "description": "The weight for this queue.\nValid range is 1-100."
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_tag_cos_entry_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Cos",
          "type": "uint32_t",
          "description": "The CoS value which this entry maps to.\nValid range is qosCapabilitiesClassMin-qosCapabilitiesClassMax."
        },
        {
          "name": "Dpl",
          "type": "uint8_t",
          "description": "The DPL (Drop Precedence Level) value which this entry maps to.\nValid range is qosCapabilitiesDplMin-qosCapabilitiesDplMax."
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_tag_remark_mode_t",
      "class": "Enum",
      "description": "An integer that indicates the tag remarking mode.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "classified",
          "value": "0"
        },
        {
          "name": "default",
          "value": "2"
        },
        {
          "name": "mapped",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_wred_max_t",
      "class": "Enum",
      "description": "An integer that selects between 'Maximum Drop Probability' or 'Maximum Fill Level'.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "maximumDropProbability",
          "value": "0"
        },
        {
          "name": "maximumFillLevel",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_rmon_alarm_if_t",
      "class": "Enum",
      "description": "This enumeration is to select a perticular counter type on an interface.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "ifInOctets",
          "value": "10"
        },
        {
          "name": "ifInUcastPkts",
          "value": "11"
        },
        {
          "name": "ifInNUcastPkts",
          "value": "12"
        },
        {
          "name": "ifInDiscards",
          "value": "13"
        },
        {
          "name": "ifInErrors",
          "value": "14"
        },
        {
          "name": "ifInUnknownProtos",
          "value": "15"
        },
        {
          "name": "ifOutOctets",
          "value": "16"
        },
        {
          "name": "ifOutUcastPkts",
          "value": "17"
        },
        {
          "name": "ifOutNUcastPkts",
          "value": "18"
        },
        {
          "name": "ifOutDiscards",
          "value": "19"
        },
        {
          "name": "ifOutErrors",
          "value": "20"
        }
      ]
    },
    {
      "type-name": "vtss_appl_sflow_instance_statistics_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "FsRx",
          "type": "uint64_t",
          "description": "Number of flow samples received on the master            that were Rx sampled."
        },
        {
          "name": "FsTx",
          "type": "uint64_t",
          "description": "Number of flow samples received on the master            that were Tx sampled."
        },
        {
          "name": "CpCount",
          "type": "uint64_t",
          "description": "Number of counter samples received on the master."
        }
      ]
    },
    {
      "type-name": "vtss_appl_sflow_rcvr_statistics_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "DatagramOK",
          "type": "uint64_t",
          "description": "Counting number of times datagrams were sent successfully."
        },
        {
          "name": "DatagramError",
          "type": "uint64_t",
          "description": "Counting number of times datagram transmission failed            (for instance because the receiver could not be reached)."
        },
        {
          "name": "FlowSamplesCount",
          "type": "uint64_t",
          "description": "Counting number of attempted transmitted flow samples.            If #dgrams_err is 0, this corresponds to the actual number            of transmitted flow samples."
        },
        {
          "name": "CounterSamplesCount",
          "type": "uint64_t",
          "description": "Counting number of attempted transmitted counter samples.            If #dgrams_err is 0, this corresponds to the actual number            of transmitted counter samples."
        }
      ]
    },
    {
      "type-name": "vtss_appl_sfp_tranceiver_t",
      "class": "Enum",
      "description": "This enumerations show the SFP transceiver type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "notSupported",
          "value": "1"
        },
        {
          "name": "sfp100FX",
          "value": "2"
        },
        {
          "name": "sfp100BaseBx10",
          "value": "4"
        },
        {
          "name": "sfp1000BaseT",
          "value": "7"
        },
        {
          "name": "sfp1000BaseBx10",
          "value": "6"
        },
        {
          "name": "sfp1000BaseCx",
          "value": "8"
        },
        {
          "name": "sfp1000BaseSx",
          "value": "9"
        },
        {
          "name": "sfp1000BaseLx",
          "value": "10"
        },
        {
          "name": "sfp1000BaseX",
          "value": "11"
        },
        {
          "name": "sfp2G5",
          "value": "12"
        },
        {
          "name": "sfp5G",
          "value": "13"
        },
        {
          "name": "sfp10G",
          "value": "14"
        },
        {
          "name": "sfp10G-DAC",
          "value": "15"
        }
      ]
    },
    {
      "type-name": "vtss_appl_snmp_access_group_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ReadViewName",
          "type": "char *",
          "description": "The name of the MIB view defining the MIB objects for which this request may request the current values."
        },
        {
          "name": "WriteViewName",
          "type": "char *",
          "description": "The name of the MIB view defining the MIB objects for which this request may potentially set new values."
        }
      ]
    },
    {
      "type-name": "vtss_appl_snmp_auth_protocol_t",
      "class": "Enum",
      "description": "The SNMP authentication protocol",
      "encoding-type": "String",
      "elements": [
        {
          "name": "snmpNoAuthProtocol",
          "value": "0"
        },
        {
          "name": "snmpMD5AuthProtocol",
          "value": "1"
        },
        {
          "name": "snmpSHAAuthProtocol",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_snmp_priv_protocol_t",
      "class": "Enum",
      "description": "The SNMP privacy protocol",
      "encoding-type": "String",
      "elements": [
        {
          "name": "snmpNoPrivProtocol",
          "value": "0"
        },
        {
          "name": "snmpDESPrivProtocol",
          "value": "1"
        },
        {
          "name": "snmpAESPrivProtocol",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_snmp_security_level_t",
      "class": "Enum",
      "description": "The SNMP authentication protocol",
      "encoding-type": "String",
      "elements": [
        {
          "name": "snmpNoAuthNoPriv",
          "value": "1"
        },
        {
          "name": "snmpAuthNoPriv",
          "value": "2"
        },
        {
          "name": "snmpAuthPriv",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_snmp_security_model_t",
      "class": "Enum",
      "description": "The SNMP security model",
      "encoding-type": "String",
      "elements": [
        {
          "name": "any",
          "value": "0"
        },
        {
          "name": "v1",
          "value": "1"
        },
        {
          "name": "v2c",
          "value": "2"
        },
        {
          "name": "usm",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_snmp_user_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "SecurityLevel",
          "type": "vtss_appl_snmp_security_level_t",
          "description": "The security level of this entry."
        },
        {
          "name": "AuthProtocol",
          "type": "vtss_appl_snmp_auth_protocol_t",
          "description": "The authentication protocol of this entry."
        },
        {
          "name": "AuthPassword",
          "type": "vtss_appl_password_t",
          "description": "The authentication password of this entry."
        },
        {
          "name": "PrivProtocol",
          "type": "vtss_appl_snmp_priv_protocol_t",
          "description": "The privacy protocol of this entry."
        },
        {
          "name": "PrivPassword",
          "type": "vtss_appl_password_t",
          "description": "The privacy password of this entry."
        }
      ]
    },
    {
      "type-name": "vtss_appl_snmp_user_index_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "EngineId",
          "type": "unsigned char *",
          "description": "SNMPv3 engine ID. The length is between 5 ~ 32 bytes. But all-zeros and all-'F's are not allowed. Change of the Engine ID will clear all original local users."
        },
        {
          "name": "UserName",
          "type": "char *",
          "description": "The name of this entry"
        }
      ]
    },
    {
      "type-name": "vtss_appl_snmp_user_to_access_group_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AccessGroupName",
          "type": "char *",
          "description": "The access group name of this entry."
        }
      ]
    },
    {
      "type-name": "vtss_appl_snmp_user_to_access_group_index_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "SecurityModel",
          "type": "vtss_appl_snmp_security_model_t",
          "description": "The security model of this entry"
        },
        {
          "name": "UserOrCommunity",
          "type": "char *",
          "description": "The user or community name of this entry"
        }
      ]
    },
    {
      "type-name": "vtss_appl_snmp_version_t",
      "class": "Enum",
      "description": "The version of SNMP",
      "encoding-type": "String",
      "elements": [
        {
          "name": "snmpV1",
          "value": "0"
        },
        {
          "name": "snmpV2c",
          "value": "1"
        },
        {
          "name": "snmpV3",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_snmp_view_index_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Name",
          "type": "char *",
          "description": "The name of this entry"
        },
        {
          "name": "Subtree",
          "type": "char *",
          "description": "The OID defining the root of the subtree to add to the named view."
        }
      ]
    },
    {
      "type-name": "vtss_appl_snmp_view_type_t",
      "class": "Enum",
      "description": "The SNMP view type",
      "encoding-type": "String",
      "elements": [
        {
          "name": "included",
          "value": "0"
        },
        {
          "name": "excluded",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_stat_ctrl_entry_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "etherStatsCreateTime",
          "type": "uint32_t",
          "description": "The time when the entry is activated."
        },
        {
          "name": "etherStatsDropEvents",
          "type": "uint32_t",
          "description": "Dropped frames counter."
        },
        {
          "name": "etherStatsOctets",
          "type": "uint32_t",
          "description": "Number of octets/bytes."
        },
        {
          "name": "etherStatsPkts",
          "type": "uint32_t",
          "description": "Packets counter."
        },
        {
          "name": "etherStatsBroadcastPkts",
          "type": "uint32_t",
          "description": "Broadcoast packets count"
        },
        {
          "name": "etherStatsMulticastPkts",
          "type": "uint32_t",
          "description": "Multicast packets count"
        },
        {
          "name": "etherStatsCRCAlignErrors",
          "type": "uint32_t",
          "description": "CRC error count"
        },
        {
          "name": "etherStatsUndersizePkts",
          "type": "uint32_t",
          "description": "Undersized packets count"
        },
        {
          "name": "etherStatsOversizePkts",
          "type": "uint32_t",
          "description": "Oversized packets count"
        },
        {
          "name": "etherStatsFragments",
          "type": "uint32_t",
          "description": "Fragments count"
        },
        {
          "name": "etherStatsJabbers",
          "type": "uint32_t",
          "description": "Jabber frame count"
        },
        {
          "name": "etherStatsCollisions",
          "type": "uint32_t",
          "description": "Collision error count"
        },
        {
          "name": "etherStatsPkts64Octets",
          "type": "uint32_t",
          "description": "pkts sized less than 64 bytes"
        },
        {
          "name": "etherStatsPkts65to127Octets",
          "type": "uint32_t",
          "description": "pkts sized from 64 to 128"
        },
        {
          "name": "etherStatsPkts128to255Octets",
          "type": "uint32_t",
          "description": "pkts sized from 128 to 255"
        },
        {
          "name": "etherStatsPkts256to511Octets",
          "type": "uint32_t",
          "description": "pkts sized from 256 to 511"
        },
        {
          "name": "etherStatsPkts512to1023Octets",
          "type": "uint32_t",
          "description": "pkts sized from 512 to 1023"
        },
        {
          "name": "etherStatsPkts1024to1518Octets",
          "type": "uint32_t",
          "description": "pkts sized from 1024 to 1518"
        }
      ]
    },
    {
      "type-name": "vtss_appl_synce_aneg_mode_t",
      "class": "Enum",
      "description": "-",
      "encoding-type": "String",
      "elements": [
        {
          "name": "none",
          "value": "0"
        },
        {
          "name": "preferedSlave",
          "value": "1"
        },
        {
          "name": "preferedMaster",
          "value": "2"
        },
        {
          "name": "forcedSlave",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_synce_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "sourceCount",
          "type": "uint32_t",
          "description": "The number of SyncE sources supported by the device."
        }
      ]
    },
    {
      "type-name": "vtss_appl_synce_clock_source_control_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "clearWtr",
          "type": "uint8_t",
          "description": "-"
        }
      ]
    },
    {
      "type-name": "vtss_appl_synce_eec_option_t",
      "class": "Enum",
      "description": "-",
      "encoding-type": "String",
      "elements": [
        {
          "name": "eecOption1",
          "value": "0"
        },
        {
          "name": "eecOption2",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_synce_frequency_t",
      "class": "Enum",
      "description": "-",
      "encoding-type": "String",
      "elements": [
        {
          "name": "disabled",
          "value": "0"
        },
        {
          "name": "freq1544kHz",
          "value": "1"
        },
        {
          "name": "freq2048kHz",
          "value": "2"
        },
        {
          "name": "freq10MHz",
          "value": "3"
        },
        {
          "name": "freqMax",
          "value": "4"
        }
      ]
    },
    {
      "type-name": "vtss_appl_synce_quality_level_t",
      "class": "Enum",
      "description": "-",
      "encoding-type": "String",
      "elements": [
        {
          "name": "qlNone",
          "value": "0"
        },
        {
          "name": "qlPrc",
          "value": "1"
        },
        {
          "name": "qlSsua",
          "value": "2"
        },
        {
          "name": "qlSsub",
          "value": "3"
        },
        {
          "name": "qlEec2",
          "value": "4"
        },
        {
          "name": "qlEec1",
          "value": "5"
        },
        {
          "name": "qlDnu",
          "value": "6"
        },
        {
          "name": "qlInv",
          "value": "7"
        },
        {
          "name": "qlFail",
          "value": "8"
        },
        {
          "name": "qlLink",
          "value": "9"
        }
      ]
    },
    {
      "type-name": "vtss_appl_synce_selection_mode_t",
      "class": "Enum",
      "description": "-",
      "encoding-type": "String",
      "elements": [
        {
          "name": "manual",
          "value": "0"
        },
        {
          "name": "manualToSelected",
          "value": "1"
        },
        {
          "name": "autoNonrevertive",
          "value": "2"
        },
        {
          "name": "autoRevertive",
          "value": "3"
        },
        {
          "name": "forcedHoldover",
          "value": "4"
        },
        {
          "name": "forcedFreeRun",
          "value": "5"
        }
      ]
    },
    {
      "type-name": "vtss_appl_synce_selector_state_t",
      "class": "Enum",
      "description": "-",
      "encoding-type": "String",
      "elements": [
        {
          "name": "locked",
          "value": "0"
        },
        {
          "name": "holdover",
          "value": "1"
        },
        {
          "name": "freerun",
          "value": "2"
        },
        {
          "name": "ptp",
          "value": "3"
        },
        {
          "name": "refFailed",
          "value": "4"
        },
        {
          "name": "acquiring",
          "value": "5"
        }
      ]
    },
    {
      "type-name": "vtss_appl_synce_station_clock_config_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "stationClkOut",
          "type": "vtss_appl_synce_frequency_t",
          "description": "Station clock output frequency setting."
        },
        {
          "name": "stationClkIn",
          "type": "vtss_appl_synce_frequency_t",
          "description": "Station clock input frequency setting."
        }
      ]
    },
    {
      "type-name": "vtss_appl_syslog_lvl_t",
      "class": "Enum",
      "description": "The syslog severity level.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "error",
          "value": "3"
        },
        {
          "name": "warning",
          "value": "4"
        },
        {
          "name": "notice",
          "value": "5"
        },
        {
          "name": "informational",
          "value": "6"
        },
        {
          "name": "all",
          "value": "8"
        }
      ]
    },
    {
      "type-name": "vtss_appl_sysutil_psu_state_t",
      "class": "Enum",
      "description": "This enumeration defines the type of power supply state.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "active",
          "value": "0"
        },
        {
          "name": "standby",
          "value": "1"
        },
        {
          "name": "notPresent",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_sysutil_psu_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "State",
          "type": "vtss_appl_sysutil_psu_state_t",
          "description": "The state of power supply."
        },
        {
          "name": "Description",
          "type": "char *",
          "description": "The description of power supply."
        }
      ]
    },
    {
      "type-name": "vtss_appl_sysutil_reboot_type_t",
      "class": "Enum",
      "description": "This enumeration defines the type of reboot.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "noReboot",
          "value": "0"
        },
        {
          "name": "coldReboot",
          "value": "1"
        },
        {
          "name": "warmReboot",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_sysutil_status_cpu_load_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Average100msec",
          "type": "uint32_t",
          "description": "Average CPU load (%) in 100 milli-seconds."
        },
        {
          "name": "Average1sec",
          "type": "uint32_t",
          "description": "Average CPU load (%) in 1 second."
        },
        {
          "name": "Average10sec",
          "type": "uint32_t",
          "description": "Average CPU load (%) in 10 seconds."
        }
      ]
    },
    {
      "type-name": "vtss_appl_sysutil_system_led_clear_type_t",
      "class": "Enum",
      "description": "This enumeration defines the type of system LED status clearing.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "all",
          "value": "0"
        },
        {
          "name": "fatal",
          "value": "1"
        },
        {
          "name": "software",
          "value": "2"
        },
        {
          "name": "post",
          "value": "3"
        },
        {
          "name": "ztp",
          "value": "4"
        },
        {
          "name": "stackFwChk",
          "value": "5"
        }
      ]
    },
    {
      "type-name": "vtss_appl_sysutil_system_led_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Description",
          "type": "char *",
          "description": "The description of system LED status."
        }
      ]
    },
    {
      "type-name": "vtss_appl_thermal_protect_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "MaxSupportedGroup",
          "type": "uint8_t",
          "description": "Maximum number of supported thermal protection groups."
        }
      ]
    },
    {
      "type-name": "vtss_appl_thermal_protect_group_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Group",
          "type": "uint8_t",
          "description": "Thermal protection groups. Object value (4) mean disable thermal protect for the interface. Object values from 0 to 3 are for the temperature group. "
        }
      ]
    },
    {
      "type-name": "vtss_appl_thermal_protect_group_temperature_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "GroupTemperature",
          "type": "int16_t",
          "description": "Temperature(in C) where the interfaces mapped to the group will be shut down."
        }
      ]
    },
    {
      "type-name": "vtss_appl_udld_mode_t",
      "class": "Enum",
      "description": "This enumeration defines the available udld mode.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "disable",
          "value": "0"
        },
        {
          "name": "normal",
          "value": "1"
        },
        {
          "name": "aggressive",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_udld_port_conf_struct_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "UdldMode",
          "type": "vtss_appl_udld_mode_t",
          "description": "Port udld mode disable/normal/aggresive."
        },
        {
          "name": "ProbeMsgInterval",
          "type": "uint32_t",
          "description": "Port probe message interval(seconds). Valid range: 7 to 90 seconds."
        }
      ]
    },
    {
      "type-name": "vtss_appl_vcap_adv_dmac_type_t",
      "class": "Enum",
      "description": "Represents a destination MAC type selector.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "any",
          "value": "0"
        },
        {
          "name": "unicast",
          "value": "1"
        },
        {
          "name": "multicast",
          "value": "2"
        },
        {
          "name": "broadcast",
          "value": "3"
        },
        {
          "name": "specific",
          "value": "4"
        }
      ]
    },
    {
      "type-name": "vtss_appl_vcap_as_type_t",
      "class": "Enum",
      "description": "Represents an Any/Specific selector.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "any",
          "value": "0"
        },
        {
          "name": "specific",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_appl_vcap_asr_type_t",
      "class": "Enum",
      "description": "Represents an Any/Specific/Range selector.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "any",
          "value": "0"
        },
        {
          "name": "specific",
          "value": "1"
        },
        {
          "name": "range",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_vcap_dmac_type_t",
      "class": "Enum",
      "description": "Represents a destination MAC type selector.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "any",
          "value": "0"
        },
        {
          "name": "unicast",
          "value": "1"
        },
        {
          "name": "multicast",
          "value": "2"
        },
        {
          "name": "broadcast",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_vcap_vlan_pri_type_t",
      "class": "Enum",
      "description": "VLAN priority.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "any",
          "value": "0"
        },
        {
          "name": "value0",
          "value": "1"
        },
        {
          "name": "value1",
          "value": "2"
        },
        {
          "name": "value2",
          "value": "3"
        },
        {
          "name": "value3",
          "value": "4"
        },
        {
          "name": "value4",
          "value": "5"
        },
        {
          "name": "value5",
          "value": "6"
        },
        {
          "name": "value6",
          "value": "7"
        },
        {
          "name": "value7",
          "value": "8"
        },
        {
          "name": "range0to1",
          "value": "9"
        },
        {
          "name": "range2to3",
          "value": "10"
        },
        {
          "name": "range4to5",
          "value": "11"
        },
        {
          "name": "range6to7",
          "value": "12"
        },
        {
          "name": "range0to3",
          "value": "13"
        },
        {
          "name": "range4to7",
          "value": "14"
        }
      ]
    },
    {
      "type-name": "vtss_appl_vcap_vlan_tag_type_t",
      "class": "Enum",
      "description": "Represents a VLAN tag type selector.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "any",
          "value": "0"
        },
        {
          "name": "untagged",
          "value": "1"
        },
        {
          "name": "tagged",
          "value": "2"
        },
        {
          "name": "cTagged",
          "value": "3"
        },
        {
          "name": "sTagged",
          "value": "4"
        }
      ]
    },
    {
      "type-name": "vtss_appl_vcl_proto_group_conf_proto_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ProtocolGroupName",
          "type": "char *",
          "description": " This is a name identifying the protocol group."
        }
      ]
    },
    {
      "type-name": "vtss_appl_vcl_proto_t",
      "class": "TypeSpecification",
      "description": "String describing the Protocol encapsulation, first octet is the encapsulation type  and the remaining (2 - 5) contain the respective encapsulation fields",
      "json-encoding-type": "String"
    },
    {
      "type-name": "vtss_appl_vlan_name_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Name",
          "type": "char *",
          "description": "VLAN Name. Default for VLAN 1 is 'default'. Default for any other VLAN is 'VLANxxxx', where 'xxxx' is a decimal representation of the VLAN ID with leading zeroes."
        }
      ]
    },
    {
      "type-name": "vtss_appl_vlan_port_mode_t",
      "class": "Enum",
      "description": "Determines the underlying port mode.\nAccess ports are only members of one VLAN, the AccessVlan.\nTrunk ports are by default members of all VLANs, which can be limited with TrunkVlans.\nHybrid ports allow for changing all port VLAN parameters. As trunk ports, hybrid ports are by default members of all VLANs, which can be limited with HybridVlans.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "access",
          "value": "0"
        },
        {
          "name": "trunk",
          "value": "1"
        },
        {
          "name": "hybrid",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_vlan_port_type_t",
      "class": "Enum",
      "description": "An integer that indicates if a port is VLAN aware, and if so, to which EtherType it is sensitive.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "unaware",
          "value": "0"
        },
        {
          "name": "c",
          "value": "1"
        },
        {
          "name": "s",
          "value": "2"
        },
        {
          "name": "sCustom",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_vlan_translation_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "maxNumberOfTranslations",
          "type": "uint32_t",
          "description": "Maximum number of VLAN translation mappings the user can store in the VLAN Translation mapping table."
        }
      ]
    },
    {
      "type-name": "vtss_appl_vlan_translation_group_mapping_key_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "GroupId",
          "type": "int32_t",
          "description": "Group ID of the VLAN translation mapping key."
        },
        {
          "name": "VlanId",
          "type": "int32_t",
          "description": "Vlan ID of the VLAN translation mapping key."
        }
      ]
    },
    {
      "type-name": "vtss_appl_vlan_translation_if_conf_value_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "GroupId",
          "type": "int32_t",
          "description": "Group ID of the interface configuration."
        }
      ]
    },
    {
      "type-name": "vtss_appl_vlan_tx_tag_type_t",
      "class": "Enum",
      "description": "An integer that indicates how egress tagging occurs.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "untagThis",
          "value": "0"
        },
        {
          "name": "tagThis",
          "value": "1"
        },
        {
          "name": "tagAll",
          "value": "2"
        },
        {
          "name": "untagAll",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_appl_vlan_user_t",
      "class": "Enum",
      "description": "An integer that indicates the VLAN user type. A value of 'combined' indicates the VLAN settings as programmed to hardware. A value of 'admin' indicates the VLAN settings as programmed by the administrative user, and any other value indicates a software module that changes VLAN settings 'behind the scenes'.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "combined",
          "value": "0"
        },
        {
          "name": "admin",
          "value": "1"
        },
        {
          "name": "dot1x",
          "value": "3"
        },
        {
          "name": "mvrp",
          "value": "4"
        },
        {
          "name": "gvrp",
          "value": "5"
        },
        {
          "name": "mvr",
          "value": "6"
        },
        {
          "name": "voiceVlan",
          "value": "7"
        },
        {
          "name": "mstp",
          "value": "8"
        },
        {
          "name": "erps",
          "value": "9"
        },
        {
          "name": "mep",
          "value": "10"
        },
        {
          "name": "evc",
          "value": "11"
        },
        {
          "name": "vcl",
          "value": "12"
        },
        {
          "name": "rmirror",
          "value": "13"
        }
      ]
    },
    {
      "type-name": "vtss_appl_voice_vlan_discovery_t",
      "class": "Enum",
      "description": "This enumeration indicates per port Voice VLAN discovery protocol.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "oui",
          "value": "0"
        },
        {
          "name": "lldp",
          "value": "1"
        },
        {
          "name": "both",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_voice_vlan_management_t",
      "class": "Enum",
      "description": "This enumeration indicates per port Voice VLAN function administrative type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "disabled",
          "value": "0"
        },
        {
          "name": "forced",
          "value": "1"
        },
        {
          "name": "automatic",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_appl_voice_vlan_oui_index_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Prefix",
          "type": "unsigned char *",
          "description": "Address prefix of the telephony OUI. A leading 3 bytes index used to denote whether specific MAC address is presenting a voice device."
        }
      ]
    },
    {
      "type-name": "vtss_appl_voice_vlan_telephony_oui_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Description",
          "type": "char *",
          "description": "The description for the specific telephony OUI."
        }
      ]
    },
    {
      "type-name": "vtss_bool_t",
      "class": "TypeSpecification",
      "description": "Boolean value",
      "json-encoding-type": "Boolean"
    },
    {
      "type-name": "vtss_ece_dir_t",
      "class": "Enum",
      "description": "The ECE direction.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "both",
          "value": "0"
        },
        {
          "name": "uniToNni",
          "value": "1"
        },
        {
          "name": "nniToUni",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_ece_pop_tag_t",
      "class": "Enum",
      "description": "The number of tags popped.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "zero",
          "value": "0"
        },
        {
          "name": "one",
          "value": "1"
        },
        {
          "name": "two",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_hqos_sch_mode_t",
      "class": "Enum",
      "description": "The HQoS scheduling mode.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "normal",
          "value": "0"
        },
        {
          "name": "basic",
          "value": "1"
        },
        {
          "name": "hierarchical",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_ifindex_t",
      "class": "TypeSpecification",
      "description": "Interface identification",
      "json-encoding-type": "String"
    },
    {
      "type-name": "vtss_inet_address_t",
      "class": "TypeSpecification",
      "description": "vtss_inet_address_t",
      "json-encoding-type": "String"
    },
    {
      "type-name": "vtss_ip_addr_t",
      "class": "TypeSpecification",
      "description": "String representation of either an IPv4 address, an IPv6 address or \"no-address\". The string representation of IPv4 addresses is documented for vtss_ipv4_addr_t and the string representation for IPv6 address is documented for vtss_ipv6_t.",
      "json-encoding-type": "String"
    },
    {
      "type-name": "vtss_ipv4_network_t",
      "class": "TypeSpecification",
      "description": "A IPv4 network encoded as \"<ipv4>/<prefix-length>\" where <ipv4> is encoded as defined for vtss_ipv4_t, and <prefix-length> is a BASE-10 human readable integer in the range [0-32]",
      "json-encoding-type": "String"
    },
    {
      "type-name": "vtss_ipv4_t",
      "class": "TypeSpecification",
      "description": "Ipv4 address encoded as \"a.b.c.d\", where a-d is a base-10 human readable integer in the range [0-255]",
      "json-encoding-type": "String"
    },
    {
      "type-name": "vtss_ipv4_uc_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "networkAddress",
          "type": "vtss_ipv4_t",
          "description": "Network address."
        },
        {
          "name": "networkPrefixSize",
          "type": "int32_t",
          "description": "Network prefix size."
        },
        {
          "name": "nextHop",
          "type": "vtss_ipv4_t",
          "description": "Next-hop address."
        }
      ]
    },
    {
      "type-name": "vtss_ipv6_network_t",
      "class": "TypeSpecification",
      "description": "A IPv6 network encoded as \"<ipv6>/<prefix-length>\" where <ipv6> is encoded as defined for vtss_ipv6_t, and <prefix-length> is a BASE-10 human readable integer in the range [0-128]",
      "json-encoding-type": "String"
    },
    {
      "type-name": "vtss_ipv6_t",
      "class": "TypeSpecification",
      "description": "An Ipv6 address represented as human readable test as specified in RFC5952",
      "json-encoding-type": "String"
    },
    {
      "type-name": "vtss_lacp_port_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "dot3adAggrActorAdminMode",
          "type": "vtss_bool_t",
          "description": "Control whether port is LACP enabled(1) or disabled(0)."
        },
        {
          "name": "dot3adAggrActorAdminKey",
          "type": "uint32_t",
          "description": "The current administrative value of the Key for the Aggregator.            The administrative Key value may differ from the operational            Key value for the reasons discussed in 43.6.2. This is a 16-bit,            read-write value. The meaning of particular Key values            is of local significance"
        },
        {
          "name": "dot3adAggrRole",
          "type": "vtss_bool_t",
          "description": "The Role shows the LACP activity status. The Active(true) will            transmit LACP packets each second, while Passive(false) will wait            for a LACP packet from a partner"
        },
        {
          "name": "dot3adAggrTimeout",
          "type": "vtss_bool_t",
          "description": "The Timeout controls the period between BPDU            transmissions. Fast(true) will transmit LACP packets each second,            while Slow(0) will wait for 30 seconds before sending a LACP packet."
        },
        {
          "name": "dot3adAggrPortPriority",
          "type": "uint32_t",
          "description": "The Port Priority controls the priority of the             port. If the LACP partner wants to form a larger group than is            supported by this device then this parameter will control which            ports will be active and which ports will be in a backup role.            Lower number means greater priority."
        }
      ]
    },
    {
      "type-name": "vtss_lacp_port_stats_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "dot3adAggrRxFrames",
          "type": "uint64_t",
          "description": "Shows received LACP frame count."
        },
        {
          "name": "dot3adAggrTxFrames",
          "type": "uint64_t",
          "description": "Shows transmitted LACP frame count."
        },
        {
          "name": "dot3adAggrRxIllegalFrames",
          "type": "uint64_t",
          "description": "Shows recevied illegal LACP frame count."
        },
        {
          "name": "dot3adAggrRxUnknownFrames",
          "type": "uint64_t",
          "description": "Shows recevied unknown LACP frame count."
        }
      ]
    },
    {
      "type-name": "vtss_lacp_port_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "dot3adAggrActorAdminMode",
          "type": "vtss_bool_t",
          "description": "Shows the current Admin mode of port, if LACP enabled then returns            true else returns false."
        },
        {
          "name": "dot3adAggrActorAdminKey",
          "type": "uint16_t",
          "description": "Shows the current administrative value of the            Key for the Aggregator. The administrative Key value may differ            from the operational Key value for the reasons discussed in 43.6.2.            This is a 16-bit, read-write value. The meaning of particular Key            values is of local significance"
        },
        {
          "name": "dot3adAggrPartnerOperPortIndex",
          "type": "uint8_t",
          "description": "Shows the port index of the partner port connected to this port."
        },
        {
          "name": "dot3adAggrPartnerOperPortPriority",
          "type": "uint16_t",
          "description": "Shows the port priority of the port partner port connected to this            port."
        }
      ]
    },
    {
      "type-name": "vtss_lldpmed_ca_type_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "civicAddress",
          "type": "char *",
          "description": "Civic address"
        }
      ]
    },
    {
      "type-name": "vtss_mac_t",
      "class": "TypeSpecification",
      "description": "Ethernet MAC address encoded as \"a:b:c:d:e:f\", where a-f is a base-16 human readable integer in the range [0-ff]",
      "json-encoding-type": "String"
    },
    {
      "type-name": "vtss_phy_veriphy_status_t",
      "class": "Enum",
      "description": "This enumerations show the VeriPhy status.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "correctlyTerminatedPair",
          "value": "0"
        },
        {
          "name": "openPair",
          "value": "1"
        },
        {
          "name": "shortPair",
          "value": "2"
        },
        {
          "name": "abnormalTermination",
          "value": "4"
        },
        {
          "name": "crossPairShortToPairA",
          "value": "8"
        },
        {
          "name": "crossPairShortToPairB",
          "value": "9"
        },
        {
          "name": "crossPairShortToPairC",
          "value": "10"
        },
        {
          "name": "crossPairShortToPairD",
          "value": "11"
        },
        {
          "name": "abnormalCrossPairCouplingToPairA",
          "value": "12"
        },
        {
          "name": "abnormalCrossPairCouplingToPairB",
          "value": "13"
        },
        {
          "name": "abnormalCrossPairCouplingToPairC",
          "value": "14"
        },
        {
          "name": "abnormalCrossPairCouplingToPairD",
          "value": "15"
        },
        {
          "name": "unknownResult",
          "value": "16"
        },
        {
          "name": "veriPhyRunning",
          "value": "17"
        }
      ]
    },
    {
      "type-name": "vtss_policer_type_t",
      "class": "Enum",
      "description": "The EVC policer type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "mef",
          "value": "0"
        },
        {
          "name": "single",
          "value": "1"
        }
      ]
    },
    {
      "type-name": "vtss_port_bridge_counters_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "RxBridgeDiscard",
          "type": "uint64_t",
          "description": "The number of bridge frames discarded."
        }
      ]
    },
    {
      "type-name": "vtss_port_ethernet_like_counters_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "RxPauseFrames",
          "type": "uint64_t",
          "description": "The number of pause frames received."
        },
        {
          "name": "TxPauseFrames",
          "type": "uint64_t",
          "description": "The number of pause frames transmitted."
        }
      ]
    },
    {
      "type-name": "vtss_port_if_group_counters_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "RxOctets",
          "type": "uint64_t",
          "description": "Shows the number of bytes received."
        },
        {
          "name": "RxUnicastPkts",
          "type": "uint64_t",
          "description": "Shows the number of uni-cast frames received."
        },
        {
          "name": "RxMulticastPkts",
          "type": "uint64_t",
          "description": "Shows the number of multi-cast frames received."
        },
        {
          "name": "RxBroadcastPkts",
          "type": "uint64_t",
          "description": "Shows the number of broad-cast frames received."
        },
        {
          "name": "RxNonUnicastPkts",
          "type": "uint64_t",
          "description": "Shows the number of non uni-cast frames received."
        },
        {
          "name": "RxDiscards",
          "type": "uint64_t",
          "description": "Shows the number of received frames discarded."
        },
        {
          "name": "RxErrors",
          "type": "uint64_t",
          "description": "Shows the number of frames with errors received."
        },
        {
          "name": "TxOctets",
          "type": "uint64_t",
          "description": "Shows the number of bytes transmitted."
        },
        {
          "name": "TxUnicastPkts",
          "type": "uint64_t",
          "description": "Shows the number of uni-cast frames transmitted."
        },
        {
          "name": "TxMulticastPkts",
          "type": "uint64_t",
          "description": "Shows the number of multi-cast frames transmitted."
        },
        {
          "name": "TxBroadcastPkts",
          "type": "uint64_t",
          "description": "Shows the number of broad-cast frames transmitted."
        },
        {
          "name": "TxNonUnicastPkts",
          "type": "uint64_t",
          "description": "Shows the number of non uni-cast frames transmitted."
        },
        {
          "name": "TxDiscardPkts",
          "type": "uint64_t",
          "description": "Shows the number of discard frames which should been transmitted."
        },
        {
          "name": "TxErrorPkts",
          "type": "uint64_t",
          "description": "Shows the number of frames transmit with error."
        }
      ]
    },
    {
      "type-name": "vtss_port_list_stackable_t",
      "class": "TypeSpecification",
      "description": "vtss_port_list_stackable_t",
      "json-encoding-type": "Array"
    },
    {
      "type-name": "vtss_port_rmon_counters_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "RxDropEvents",
          "type": "uint64_t",
          "description": "Shows the number of frames discarded due to ingress congestion."
        },
        {
          "name": "RxOctets",
          "type": "uint64_t",
          "description": "Shows the number of received (good and bad) bytes. Includes FCS, but excludes framing bits."
        },
        {
          "name": "RxPkts",
          "type": "uint64_t",
          "description": "Shows the number of received (good and bad) packets."
        },
        {
          "name": "RxBroadcastPkts",
          "type": "uint64_t",
          "description": "Shows the number of received (good and bad) broadcast packets."
        },
        {
          "name": "RxMulticastPkts",
          "type": "uint64_t",
          "description": "Shows the number of received (good and bad) multicast packets."
        },
        {
          "name": "RxCrcAlignErrPkts",
          "type": "uint64_t",
          "description": "Shows the number of frames received with CRC or alignment errors."
        },
        {
          "name": "RxUndersizePkts",
          "type": "uint64_t",
          "description": "Shows the number of short frames (frames that are smaller than 64 bytes) received with valid CRC."
        },
        {
          "name": "RxOversizePkts",
          "type": "uint64_t",
          "description": "Shows the number of long frames received with valid CRC."
        },
        {
          "name": "RxFragmentsPkts",
          "type": "uint64_t",
          "description": "Shows the number of short frames (frames that are smaller than 64 bytes) received with invalid CRC."
        },
        {
          "name": "RxJabbersPkts",
          "type": "uint64_t",
          "description": "The number of long frames (frames that are longer than the configured maximum frame length for this interface) received with invalid CRC."
        },
        {
          "name": "Rx64Pkts",
          "type": "uint64_t",
          "description": "The number of 64 bytes frames received."
        },
        {
          "name": "Rx65to127Pkts",
          "type": "uint64_t",
          "description": "The number of received frames with size within 65 to 127 bytes."
        },
        {
          "name": "Rx128to255Pkts",
          "type": "uint64_t",
          "description": "The number of received frames with size within 128 to 255 bytes."
        },
        {
          "name": "Rx256to511Pkts",
          "type": "uint64_t",
          "description": "The number of received frames with size within 256 to 511 bytes."
        },
        {
          "name": "Rx512to1023Pkts",
          "type": "uint64_t",
          "description": "The number of received frames with size within 512 to 1023 bytes."
        },
        {
          "name": "Rx1024to1518Pkts",
          "type": "uint64_t",
          "description": "The number of received frames with size within 1024 to 1518 bytes."
        },
        {
          "name": "Rx1519PktsToMax",
          "type": "uint64_t",
          "description": "The number of received frames with size larger than 1518 bytes."
        },
        {
          "name": "TxDropEvents",
          "type": "uint64_t",
          "description": "Shows the number of frames discarded due to egress congestion."
        },
        {
          "name": "TxOctets",
          "type": "uint64_t",
          "description": "Shows the number of transmitted (good and bad) bytes. Includes FCS, but excludes framing bits."
        },
        {
          "name": "TxPkts",
          "type": "uint64_t",
          "description": "Shows the number of transmitted (good and bad) packets."
        },
        {
          "name": "TxBroadcastPkts",
          "type": "uint64_t",
          "description": "Shows the number of transmitted (good and bad) broadcast packets."
        },
        {
          "name": "TxMulticastPkts",
          "type": "uint64_t",
          "description": "Shows the number of transmitted (good and bad) multicast packets."
        },
        {
          "name": "Tx64Pkts",
          "type": "uint64_t",
          "description": "The number of 64 bytes frames transmitted."
        },
        {
          "name": "Tx65to127Pkts",
          "type": "uint64_t",
          "description": "The number of transmitted frames with size within 65 to 127 bytes."
        },
        {
          "name": "Tx128to255Pkts",
          "type": "uint64_t",
          "description": "The number of transmitted frames with size within 128 to 255 bytes."
        },
        {
          "name": "Tx256to511Pkts",
          "type": "uint64_t",
          "description": "The number of transmitted frames with size within 256 to 511 bytes."
        },
        {
          "name": "Tx512to1023Pkts",
          "type": "uint64_t",
          "description": "The number of transmitted frames with size within 512 to 1023 bytes."
        },
        {
          "name": "Tx1024to1518Pkts",
          "type": "uint64_t",
          "description": "The number of transmitted frames with size within 1024 to 1518 bytes."
        },
        {
          "name": "Tx1519PktsToMax",
          "type": "uint64_t",
          "description": "The number of transmitted frames with size larger than 1518 bytes."
        }
      ]
    },
    {
      "type-name": "vtss_port_speed_t",
      "class": "Enum",
      "description": "This enum represents the link speed.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "undefined",
          "value": "0"
        },
        {
          "name": "speed10M",
          "value": "1"
        },
        {
          "name": "speed100M",
          "value": "2"
        },
        {
          "name": "speed1G",
          "value": "3"
        },
        {
          "name": "speed2G5",
          "value": "4"
        },
        {
          "name": "speed5G",
          "value": "5"
        },
        {
          "name": "speed10G",
          "value": "6"
        },
        {
          "name": "speed12G",
          "value": "7"
        }
      ]
    },
    {
      "type-name": "vtss_sflow_type_t",
      "class": "Enum",
      "description": "This enumeration control the agent IP Address type.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "None",
          "value": "0"
        },
        {
          "name": "RX",
          "value": "1"
        },
        {
          "name": "TX",
          "value": "2"
        },
        {
          "name": "ALL",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_snmp_oid_t",
      "class": "TypeSpecification",
      "description": "SNMP Object Identifier\nThe string starts with an optional dot followed by a dot-seperated sequence of integers. 0-255 integers are allowed.\n\nExamples of allowed strings:\n\".\"        -- Empty sequence\n\".1\"       -- Sequence with one element of value 1\n\"1\"        -- Sequence with one element of value 1\n\"1.1.1.1\"  -- Sequence with four elements of value 1\n\".1.1.1.1\" -- Sequence with four elements of value 1\n",
      "json-encoding-type": "String"
    },
    {
      "type-name": "vtss_udld_detection_state_t",
      "class": "Enum",
      "description": "This enumeration defines the link detection state.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "inDeterminant",
          "value": "0"
        },
        {
          "name": "uniDirectional",
          "value": "1"
        },
        {
          "name": "biDirectional",
          "value": "2"
        },
        {
          "name": "neighborMismatch",
          "value": "3"
        },
        {
          "name": "loopback",
          "value": "4"
        },
        {
          "name": "multipleNeighbor",
          "value": "5"
        }
      ]
    },
    {
      "type-name": "vtss_vcap_bit_t",
      "class": "Enum",
      "description": "Represents a bit selector.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "any",
          "value": "0"
        },
        {
          "name": "zero",
          "value": "1"
        },
        {
          "name": "one",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "vtss_vcap_key_type_t",
      "class": "Enum",
      "description": "Represents a VCAP key type selector.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "normal",
          "value": "0"
        },
        {
          "name": "doubleTag",
          "value": "1"
        },
        {
          "name": "ipAddr",
          "value": "2"
        },
        {
          "name": "macIpAddr",
          "value": "3"
        }
      ]
    },
    {
      "type-name": "vtss_vid_list_t",
      "class": "TypeSpecification",
      "description": "vtss_vid_list_t",
      "json-encoding-type": "Array"
    },
    {
      "type-name": "vtss_vid_t",
      "class": "TypeSpecification",
      "description": "Vlan ID",
      "json-encoding-type": "Number"
    },
    {
      "type-name": "vtss_vlan_frame_t",
      "class": "Enum",
      "description": "An integer that indicates the type of frames that are not discarded on ingress w.r.t. VLAN tagging.",
      "encoding-type": "String",
      "elements": [
        {
          "name": "all",
          "value": "0"
        },
        {
          "name": "tagged",
          "value": "1"
        },
        {
          "name": "untagged",
          "value": "2"
        }
      ]
    },
    {
      "type-name": "NAS_ifindex_index",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "InterfaceNo",
          "type": "vtss_ifindex_t",
          "description": "Logical interface number."
        }
      ]
    },
    {
      "type-name": "lldp_neighbors_information_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ChassisId",
          "type": "char *",
          "description": "Shows the LLDP neighbor's chassis Id."
        },
        {
          "name": "PortId",
          "type": "char *",
          "description": "Shows the LLDP neighbor's port id."
        },
        {
          "name": "PortDescription",
          "type": "char *",
          "description": "Shows the LLDP neighbor's port description."
        },
        {
          "name": "SystemName",
          "type": "char *",
          "description": "Shows the LLDP neighbor's system name."
        },
        {
          "name": "SystemDescription",
          "type": "char *",
          "description": "Shows the LLDP neighbor's system description."
        },
        {
          "name": "SystemCapabilities",
          "type": "uint16_t",
          "description": "Shows the LLDP neighbor's system capabilities as bit mask.\nIf the bit is set, it means that the functionality is supported by the neighbor system.\n                                       Bit 0 represents Other.\n                                        Bit 1 represents Repeater.\n                                       Bit 2 represents Bridge.\n                                       Bit 3 represents WLAN Access Point.\n                                       Bit 4 represents Router.\n                                       Bit 5 represents Telephone.\n                                       Bit 6 represents DOCSIS cable device.\n                                       Bit 7 represents Station Only.\n                                       Bit 8 represents Reserved."
        },
        {
          "name": "SystemCapabilitiesEnable",
          "type": "uint16_t",
          "description": "Shows the LLDP neighbor's system capabilities which is enabled.\nIf the bit is set, it means that the functionality is currently enabled at the neighbor system.\n                                       Bit 0 represents Other.\n                                        Bit 1 represents Repeater.\n                                       Bit 2 represents Bridge.\n                                       Bit 3 represents WLAN Access Point.\n                                       Bit 4 represents Router.\n                                       Bit 5 represents Telephone.\n                                       Bit 6 represents DOCSIS cable device.\n                                       Bit 7 represents Station Only.\n                                       Bit 8 represents Reserved."
        }
      ]
    },
    {
      "type-name": "lldp_port_mib_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AdminState",
          "type": "vtss_appl_lldp_admin_state_t",
          "description": "Sets the LLDP admin state for the interface."
        },
        {
          "name": "CdpAware",
          "type": "vtss_bool_t",
          "description": "Enables/disables CDP awareness for the interface.\nCDP is Cisco's equivalent to LLDP.\n\nThe CDP operation is restricted to decoding incoming CDP frames (The switch doesn't transmit CDP frames). CDP frames are only decoded if LLDP on the port is enabled.\n\nOnly CDP TLVs that can be mapped to a corresponding field in the LLDP neighbors' table are decoded. All other TLVs are discarded (Unrecognized CDP TLVs and discarded CDP frames are not shown in the LLDP statistics.).\nCDP TLVs are mapped onto LLDP neighbors' table as shown below.\nCDP TLV 'Device ID' is mapped to the LLDP 'Chassis ID' field.\nCDP TLV 'Address' is mapped to the LLDP 'Management Address' field. The CDP address TLV can contain multiple addresses, but only the first address is shown in the LLDP neighbors table.\nCDP TLV 'Port ID' is mapped to the LLDP 'Port ID' field.\nCDP TLV 'Version and Platform' is mapped to the LLDP 'System Description' field.\nBoth the CDP and LLDP support 'system capabilities', but the CDP capabilities cover capabilities that are not part of the LLDP. These capabilities are shown as 'others' in the LLDP neighbors' table.\n\nIf all ports have CDP awareness disabled the switch forwards CDP frames received from neighbor devices. If at least one port has CDP awareness enabled all CDP frames are terminated by the switch.\n\nNote: When CDP awareness on a port is disabled the CDP information isn't removed immediately, but gets removed when the hold time is exceeded."
        },
        {
          "name": "OptionalTlvs",
          "type": "uint8_t",
          "description": "Enables/Disables the LLDP optional TLVs. Bit mask, where setting the bit to 1 means enable transmission of the corresponding TLV.\n                                       Bit 0 represents Port Description TLV.\n                                        Bit 1 represents System Name TLV.\n                                       Bit 2 represents System Description.\n                                       Bit 3 represents System Capabilities TLV.\n                                       Bit 4 represents Management Address TLV."
        }
      ]
    },
    {
      "type-name": "lldpmed_global_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "FastRepeatCount",
          "type": "uint8_t",
          "description": "Number of times to repeat LLDP frame transmission at fast start\nRapid startup and Emergency Call Service Location Identification Discovery of endpoints is a critically important aspect of VoIP systems in general. In addition, it is best to advertise only those pieces of information which are specifically relevant to particular endpoint types (for example only advertise the voice network policy to permitted voice-capable devices), both in order to conserve the limited LLDPU space and to reduce security and system integrity issues that can come with inappropriate knowledge of the network policy.\nWith this in mind LLDP-MED defines an LLDP-MED Fast Start interaction between the protocol and the application layers on top of the protocol, in order to achieve these related properties. Initially, a Network Connectivity Device will only transmit LLDP TLVs in an LLDPDU. Only after an LLDP-MED Endpoint Device is detected, will an LLDP-MED capable Network Connectivity Device start to advertise LLDP-MED TLVs in outgoing LLDPDUs on the associated port. The LLDP-MED application will temporarily speed up the transmission of the LLDPDU to start within a second, when a new LLDP-MED neighbor has been detected in order share LLDP-MED information as fast as possible to new neighbors.\nBecause there is a risk of an LLDP frame being lost during transmission between neighbors, it is recommended  to repeat the fast start transmission multiple times to increase the possibility of the neighbors receiving the LLDP frame. With fast start repeat count it is possible to specify the number of times the fast start transmission would be repeated. The recommended value is 4 times, given that 4 LLDP frames with a 1 second interval will be transmitted, when an LLDP frame with new information is received.\nIt should be noted that LLDP-MED and the LLDP-MED Fast Start mechanism is only intended to run on links between LLDP-MED Network Connectivity Devices and Endpoint Devices, and as such does not apply to links between LAN infrastructure elements, including Network Connectivity Devices, or other types of links."
        },
        {
          "name": "Latitude",
          "type": "int64_t",
          "description": "Latitude degrees in 2s-complement as specified in RFC 3825. Positive numbers are north of the equator and negative numbers are south of the equator."
        },
        {
          "name": "Longitude",
          "type": "int64_t",
          "description": "Longitude degrees in 2s-complement as specified in RFC 3825. Positive values are East of the prime meridian and negative numbers are West of the prime meridian."
        },
        {
          "name": "AltitudeType",
          "type": "vtss_appl_lldp_med_at_type_t",
          "description": "Setting altitude type \nPossible to select between two altitude types (floors or meters). Meters are representing meters of altitude defined by the vertical datum specified. Floors are representing altitude in a form more relevant in buildings which have different floor-to-floor dimensions. An altitude = 0.0 is meaningful even outside a building, and represents ground level at the given latitude and longitude. Inside a building, 0.0 represents the floor level associated with ground level at the main entrance."
        },
        {
          "name": "Altitude",
          "type": "int32_t",
          "description": "Altitude value in 2s-complement as specified in RFC 3825"
        },
        {
          "name": "ElinAddr",
          "type": "char *",
          "description": "Emergency Call Service ELIN identifier data format is defined to carry the ELIN identifier as used during emergency call setup to a traditional CAMA or ISDN trunk-based PSAP. This format consists of a numerical digit string, corresponding to the ELIN to be used for emergency calling. Maximum number of octets are 25."
        },
        {
          "name": "Datum",
          "type": "vtss_appl_lldp_med_datum_t",
          "description": "Setting datum to configure the datum (geodetic system) to use.\nThe Map Datum is used for the coordinates given in these options:\nWGS84:  (Geographical 3D) - World Geodesic System 1984, CRS Code 4327, Prime Meridian Name: Greenwich.\nNAD83/NAVD88: North American Datum 1983, CRS Code 4269, Prime Meridian Name: Greenwich;The associated vertical datum is the North American Vertical Datum of 1988 (NAVD88).This datum pair is to be used when referencing locations on land, not near tidal water(which would use Datum = NAD83/MLLW).\nNAD83/MLLW:  North American Datum 1983, CRS Code 4269, Prime Meridian Name: Greenwich; The associated vertical datum is Mean Lower Low Water (MLLW). This datum pair is to be used when referencing locations on water/sea/ocean."
        },
        {
          "name": "CountryCode",
          "type": "char *",
          "description": "The two-letter ISO 3166 country code in capital ASCII letters - Example: DK, DE or US."
        }
      ]
    },
    {
      "type-name": "lldpmed_port_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "OptionalTlvs",
          "type": "uint8_t",
          "description": "Enables/Disables the LLDP optional TLVs. Bit mask, where setting the bit to 1 means\n                                      enable transmission of the corresponding optional TLV.\n                                              Bit 0 represents the capabilities TLV.\n                                      Bit 1 represents the network Policy TLV.\n                                      Bit 2 represents the location TLV.\n                                      Bit 3 represents the PoE TLV."
        },
        {
          "name": "DeviceType",
          "type": "vtss_appl_lldp_med_device_type_t",
          "description": "Setting device type to configure the mode the device shall operate as."
        }
      ]
    },
    {
      "type-name": "lldpmed_remote_info_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Capabilities",
          "type": "uint16_t",
          "description": "LLDP neighbor's capabilities bit mask.\n                                      Bit 0 represents LLDP-MED capabilities.\n                                      Bit 1 represents Network Policy.\n                                      Bit 2 represents Location Identification.\n                                      Bit 3 represents Extended Power via MDI - PSE.\n                                      Bit 4 represents Extended Power via MDI - PD\n                                      Bit 5 represents Inventory\n"
        },
        {
          "name": "CapabilitiesEnabled",
          "type": "uint16_t",
          "description": "LLDP neighbor's capabilities bit mask for the capabilities which are currently enabled.\n                                      Bit 0 represents LLDP-MED capabilities.\n                                      Bit 1 represents Network Policy.\n                                      Bit 2 represents Location Identification.\n                                      Bit 3 represents Extended Power via MDI - PSE.\n                                      Bit 4 represents Extended Power via MDI - PD\n                                      Bit 5 represents Inventory\n"
        },
        {
          "name": "Latitude",
          "type": "int64_t",
          "description": "Latitude degrees in 2s-complement as specified in RFC 3825. Positive numbers are north of the equator and negative numbers are south of the equator."
        },
        {
          "name": "Longitude",
          "type": "int64_t",
          "description": "Longitude degrees in 2s-complement as specified in RFC 3825. Positive values are East of the prime meridian and negative numbers are West of the prime meridian."
        },
        {
          "name": "AltitudeType",
          "type": "vtss_appl_lldp_med_at_type_t",
          "description": "Altitude type as either floors or meters. Meters are representing meters of altitude defined by the vertical datum specified. Floors are representing altitude in a form more relevant in buildings which have different floor-to-floor dimensions. An altitude = 0.0 is meaningful even outside a building, and represents ground level at the given latitude and longitude. Inside a building, 0.0 represents the floor level associated with ground level at the main entrance."
        },
        {
          "name": "Altitude",
          "type": "int32_t",
          "description": "Altitude value in 2s-complement as specified in RFC 3825"
        },
        {
          "name": "Datum",
          "type": "vtss_appl_lldp_med_datum_t",
          "description": "Datum (geodetic system) .\nThe Map Datum is used for the coordinates given in these options:\nWGS84:  (Geographical 3D) - World Geodesic System 1984, CRS Code 4327, Prime Meridian Name: Greenwich.\nNAD83/NAVD88: North American Datum 1983, CRS Code 4269, Prime Meridian Name: Greenwich; The associated vertical datum is the North American Vertical Datum of 1988 (NAVD88). This datum pair is to be used when referencing locations on land, not near tidal water(which would use Datum = NAD83/MLLW).\nNAD83/MLLW:  North American Datum 1983, CRS Code 4269, Prime Meridian Name: Greenwich; The associated vertical datum is Mean Lower Low Water (MLLW). This datum pair is to be used when referencing locations on water/sea/ocean."
        },
        {
          "name": "Elinaddr",
          "type": "char *",
          "description": "Emergency Call Service ELIN identifier data format is defined to carry the ELIN identifier as used during emergency call setup to a traditional CAMA or ISDN trunk-based PSAP. This format consists of a numerical digit string, corresponding to the ELIN to be used for emergency calling. Maximum number of octets are 25."
        },
        {
          "name": "DeviceType",
          "type": "vtss_appl_lldp_med_remote_device_type_t",
          "description": "Shows the LLDP neighbor's device type."
        },
        {
          "name": "HwRev",
          "type": "char *",
          "description": "Shows the LLDP neighbor's hardware revision."
        },
        {
          "name": "FwRev",
          "type": "char *",
          "description": "Shows the LLDP neighbor's firmware revision."
        },
        {
          "name": "SwRev",
          "type": "char *",
          "description": "Shows the LLDP neighbor's software revision."
        },
        {
          "name": "SerialNo",
          "type": "char *",
          "description": "Shows the LLDP neighbor's serial number."
        },
        {
          "name": "ManufacturerName",
          "type": "char *",
          "description": "Shows the LLDP neighbor's manufacturer name."
        },
        {
          "name": "ModelName",
          "type": "char *",
          "description": "Shows the LLDP neighbor's model name."
        },
        {
          "name": "AssetId",
          "type": "char *",
          "description": "Shows the LLDP neighbor's asset id."
        },
        {
          "name": "EeeRxTwSys",
          "type": "uint16_t",
          "description": "Shows the LLDP neighbor's Receive tw_sys_rx . Tw_sys_rx is defined as the time (expressed in microseconds) that the transmitting link partner will wait before it starts transmitting data after leaving the Low Power Idle (LPI) mode. Section 79.3.5.2, IEEE802.3az."
        },
        {
          "name": "EeeTxTwSys",
          "type": "uint16_t",
          "description": "Shows the LLDP neighbor's Transmit Tw_sys_tx . Tw_sys_tx is defined as the time (expressed in microseconds) that the receiving link partner is requesting the transmitting link partner to wait before starting the transmission data following the Low Power Idle (LPI) mode. Section 79.3.5.1, IEEE802.3az."
        },
        {
          "name": "EeeFbTwSys",
          "type": "uint16_t",
          "description": "Shows the LLDP neighbor's Fallback tw_sys_tx. A receiving link partner may inform the transmitter of an alternate desired Tw_sys_tx. Since a receiving link partner is likely to have discrete levels for savings, this provides the transmitter with additional information that it may use for a more efficient allocation. Section 79.3.5.3, IEEE802.3az."
        },
        {
          "name": "EeeTxTwSysEcho",
          "type": "uint16_t",
          "description": "Shows the LLDP neighbor's echo transmit Tw. The respective echo values shall be defined as the local link partners reflection (echo) of the remote link partners respective values. When a local link partner receives its echoed values from the remote link partner it can determine whether or not the remote link partner has received, registered, and processed its most recent values. Section 79.3.5.4, IEEE802.3az."
        },
        {
          "name": "EeeRxTwSysEcho",
          "type": "uint16_t",
          "description": "Shows the LLDP neighbor's echo receive Tw. The respective echo values shall be defined as the local link partners reflection (echo) of the remote link partners respective values. When a local link partner receives its echoed values from the remote link partner it can determine whether or not the remote link partner has received, registered, and processed its most recent values. Section 79.3.5.4, IEEE802.3az."
        }
      ]
    },
    {
      "type-name": "vtss_aggr_group_member_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "PortMembers",
          "type": "vtss_port_list_stackable_t",
          "description": "The list of port members for this Link Aggregation Group."
        }
      ]
    },
    {
      "type-name": "vtss_aggr_group_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ConfiguredPorts",
          "type": "vtss_port_list_stackable_t",
          "description": "Configured member ports of the aggregation Group."
        },
        {
          "name": "AggregatedPorts",
          "type": "vtss_port_list_stackable_t",
          "description": "Aggregated member ports of the aggregation Group."
        },
        {
          "name": "Speed",
          "type": "vtss_port_speed_t",
          "description": "Speed of the Aggregation Group."
        },
        {
          "name": "Type",
          "type": "char *",
          "description": "Type of the Aggregation Group."
        }
      ]
    },
    {
      "type-name": "vtss_aggr_mode_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "SmacAddr",
          "type": "vtss_bool_t",
          "description": "Set to true to enable the use of the Source MAC            address, or false to disable. By default, Source MAC Address is            enabled."
        },
        {
          "name": "DmacAddr",
          "type": "vtss_bool_t",
          "description": "Set to true to enable the use of the Destination            MAC address, or false to disable. By default, Destination MAC Address            is disabled."
        },
        {
          "name": "SourceAndDestinationIpAddr",
          "type": "vtss_bool_t",
          "description": "Set to true to enable the use of the IP address,            or false to disable. By default, Destination MAC Address is enabled."
        },
        {
          "name": "TcpOrUdpSportAndDportNo",
          "type": "vtss_bool_t",
          "description": "Set to true to enable the use of the TCP/UDP            Port Number, or false to disable. By default, TCP/UDP Port Number is enabled."
        }
      ]
    },
    {
      "type-name": "vtss_appl_access_mgmt_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AdminState",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the Access Management global functionality."
        }
      ]
    },
    {
      "type-name": "vtss_appl_access_mgmt_ipv4_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "VlanId",
          "type": "uint16_t",
          "description": "The ID of specific VLAN interface that Access Management should take effect for IPv4."
        },
        {
          "name": "StartAddress",
          "type": "vtss_ipv4_t",
          "description": "The starting IPv4 address of the range that Access Management performs checking."
        },
        {
          "name": "EndAddress",
          "type": "vtss_ipv4_t",
          "description": "The ending IPv4 address of the range that Access Management performs checking."
        },
        {
          "name": "WebServices",
          "type": "vtss_bool_t",
          "description": "Enable/Disable HTTP and HTTPS functionality via Access Management. At least one of WebServices/SnmpServices/TelnetServices has to be enabled for a specific AccessIndex in Access Management IPv4 table."
        },
        {
          "name": "SnmpServices",
          "type": "vtss_bool_t",
          "description": "Enable/Disable SNMP functionality via Access Management. At least one of WebServices/SnmpServices/TelnetServices has to be enabled for a specific AccessIndex in Access Management IPv4 table."
        },
        {
          "name": "TelnetServices",
          "type": "vtss_bool_t",
          "description": "Enable/Disable TELNET/SSH functionality via Access Management. At least one of WebServices/SnmpServices/TelnetServices has to be enabled for a specific AccessIndex in Access Management IPv4 table."
        }
      ]
    },
    {
      "type-name": "vtss_appl_access_mgmt_ipv6_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "VlanId",
          "type": "uint16_t",
          "description": "The ID of specific VLAN interface that Access Management should take effect for IPv6."
        },
        {
          "name": "StartAddress",
          "type": "vtss_ipv6_t",
          "description": "The starting IPv6 address of the range that Access Management performs checking."
        },
        {
          "name": "EndAddress",
          "type": "vtss_ipv6_t",
          "description": "The ending IPv6 address of the range that Access Management performs checking."
        },
        {
          "name": "WebServices",
          "type": "vtss_bool_t",
          "description": "Enable/Disable HTTP and HTTPS functionality via Access Management. At least one of WebServices/SnmpServices/TelnetServices has to be enabled for a specific AccessIndex in Access Management IPv6 table."
        },
        {
          "name": "SnmpServices",
          "type": "vtss_bool_t",
          "description": "Enable/Disable SNMP functionality via Access Management. At least one of WebServices/SnmpServices/TelnetServices has to be enabled for a specific AccessIndex in Access Management IPv6 table."
        },
        {
          "name": "TelnetServices",
          "type": "vtss_bool_t",
          "description": "Enable/Disable TELNET/SSH functionality via Access Management. At least one of WebServices/SnmpServices/TelnetServices has to be enabled for a specific AccessIndex in Access Management IPv6 table."
        }
      ]
    },
    {
      "type-name": "vtss_appl_acl_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AceIdMax",
          "type": "uint32_t",
          "description": "Maximum ID of ACE."
        },
        {
          "name": "PolicyIdMax",
          "type": "uint32_t",
          "description": "Maximum ID of policy."
        },
        {
          "name": "RateLimiterIdMax",
          "type": "uint32_t",
          "description": "Maximum ID of rate limiter."
        },
        {
          "name": "EvcPolicerIdMax",
          "type": "uint32_t",
          "description": "Maximum ID of EVC policer."
        },
        {
          "name": "RateLimiterBitRateSupported",
          "type": "vtss_bool_t",
          "description": "If true, the rate limiter can be configured by bit rate."
        },
        {
          "name": "EvcPolicerSupported",
          "type": "vtss_bool_t",
          "description": "If true, EVC policer can be configured."
        },
        {
          "name": "MirrorSupported",
          "type": "vtss_bool_t",
          "description": "If true, mirror action is supported."
        },
        {
          "name": "MultipleRedirectPortsSupported",
          "type": "vtss_bool_t",
          "description": "If true, redirect port list can be configured with multiple ports. If false, redirect port list can be configured with only one single port."
        },
        {
          "name": "SecondLookupSupported",
          "type": "vtss_bool_t",
          "description": "If true, second lookup can be configured."
        },
        {
          "name": "MultipleIngressPortsSupported",
          "type": "vtss_bool_t",
          "description": "If true, ingress port list can be configured with multiple ports. If false, ingress port list can be configured with only one single port."
        },
        {
          "name": "EgressPortSupported",
          "type": "vtss_bool_t",
          "description": "If true, egress port list can be configured."
        },
        {
          "name": "VlanTaggedSupported",
          "type": "vtss_bool_t",
          "description": "If true, VLAN tagged can be configured."
        },
        {
          "name": "StackableAceSupported",
          "type": "vtss_bool_t",
          "description": "If true, stackable ACE is supported. The 'switch' and 'switchport' ACE ingress type can be configured. Otherwize, only 'any' and 'specific' ACE ingress type can be configured."
        }
      ]
    },
    {
      "type-name": "vtss_appl_acl_config_ace_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "NextAceId",
          "type": "uint32_t",
          "description": "The ID of ACE next to this ACE."
        },
        {
          "name": "HitAction",
          "type": "vtss_appl_acl_hit_action_t",
          "description": "The hit action operation for this ACE."
        },
        {
          "name": "RedirectPortList",
          "type": "vtss_port_list_stackable_t",
          "description": "The redirect port list for this ACE."
        },
        {
          "name": "RedirectPortListSwitchPort",
          "type": "uint32_t",
          "description": "The redirect switch port for this ACE. The object is only abaliable if AclAceIngressPortListMode is switchport. And it is used when this ACE is applied on specific switch port of all switches in stackable devices.",
          "depends-on-capability": "StackableAceSupported@vtss_appl_acl_capabilities_t"
        },
        {
          "name": "EgressPortList",
          "type": "vtss_port_list_stackable_t",
          "description": "The egress port list. The port list is to define what ports are allowed to be egress ports. If the egress port of an incoming frame is in the port list then the frame will be forwared to that port. Otherwise, if the egress port is not in the port list then the egress port is not allowed and the incoming frame will be dropped.",
          "depends-on-capability": "EgressPortSupported@vtss_appl_acl_capabilities_t"
        },
        {
          "name": "RateLimiterId",
          "type": "uint32_t",
          "description": "The rate limiter ID. 0 means to be disabled."
        },
        {
          "name": "EvcPolicerId",
          "type": "uint16_t",
          "description": "The EVC policer ID. 0 means to be disabled.",
          "depends-on-capability": "EvcPolicerSupported@vtss_appl_acl_capabilities_t"
        },
        {
          "name": "Mirror",
          "type": "vtss_bool_t",
          "description": "The mirror operation. Frames matching this ACE are mirrored to the destination mirror port that is configured in the mirror module.",
          "depends-on-capability": "MirrorSupported@vtss_appl_acl_capabilities_t"
        },
        {
          "name": "Logging",
          "type": "vtss_bool_t",
          "description": "Specify the logging operation of the ACE. Notice that the logging message doesn't include the 4 bytes CRC information. The allowed values are: True - Frames matching the ACE are stored in the System Log. False - Frames matching the ACE are not logged. Note: The logging feature only works when the packet length is less than 1518(without VLAN tags) and the system log memory size and logging rate is limited."
        },
        {
          "name": "Shutdown",
          "type": "vtss_bool_t",
          "description": "Specify the port shut down operation of the ACE. The allowed values are: True: If a frame matches the ACE, the ingress port will be shuted down. False: Port shut down is disabled for the ACE. Note: The shutdown feature only works when the packet length is less than 1518(without VLAN tags)."
        },
        {
          "name": "IngressPortListMode",
          "type": "vtss_appl_acl_ace_ingress_mode_t",
          "description": "The ingress port list mode for this ACE. The possible mode are: 'any': Indicates this ACE is applied on all switches and all ports. 'specific': Indicates this ACE is applied on specific switch and specific ports. 'switch': Indicates this ACE is applied on all ports of specific switch in stackable devices. 'switchport': Indicates this ACE is applied on specific switch port of all switches in stackable devices."
        },
        {
          "name": "IngressPortList",
          "type": "vtss_port_list_stackable_t",
          "description": "The ingress port list for this ACE. The object is only abaliable if AclAceIngressPortListMode is specific. And it is used when this ACE is applied on specific switch and specific ports."
        },
        {
          "name": "IngressPortListSwitch",
          "type": "uint32_t",
          "description": "The ingress switch ID for this ACE. The object is only abaliable if AclAceIngressPortListMode is switch. And it is used when this ACE is applied on specific switch port of all switches in stackable devices.",
          "depends-on-capability": "StackableAceSupported@vtss_appl_acl_capabilities_t"
        },
        {
          "name": "IngressPortListSwitchPort",
          "type": "uint32_t",
          "description": "The ingress switch port for this ACE. The object is only abaliable if AclAceIngressPortListMode is switchport. And it is used when this ACE is applied on specific switch port of all switches in stackable devices.",
          "depends-on-capability": "StackableAceSupported@vtss_appl_acl_capabilities_t"
        },
        {
          "name": "PolicyValue",
          "type": "uint8_t",
          "description": "The policy number for this ACE."
        },
        {
          "name": "PolicyMask",
          "type": "uint8_t",
          "description": "The policy mask for this ACE. The allowed range is 0x0 to 0xff. If the binary bit value is '0', it means this bit is don't-care. The real matched pattern is [policy_value & policy_bitmask]. For example, if the policy value is 3 and the policy bitmask is 0x10(bit 0 is don't-care bit), then policy 2 and 3 are applied to this rule."
        },
        {
          "name": "SecondLookup",
          "type": "vtss_bool_t",
          "description": "The second lookup operation for this ACE.",
          "depends-on-capability": "SecondLookupSupported@vtss_appl_acl_capabilities_t"
        },
        {
          "name": "VlanId",
          "type": "uint16_t",
          "description": "The VLAN ID for this ACE. Possible values are: 0(disabled), 1-4095."
        },
        {
          "name": "VlanTagPriority",
          "type": "vtss_appl_vcap_vlan_pri_type_t",
          "description": "The VLAN tag priority for this ACE."
        },
        {
          "name": "VlanTagged",
          "type": "vtss_appl_acl_ace_vlan_tagged_t",
          "description": "The 802.1Q VLAN tagged for this ACE.",
          "depends-on-capability": "VlanTaggedSupported@vtss_appl_acl_capabilities_t"
        },
        {
          "name": "FrameType",
          "type": "vtss_appl_acl_ace_frame_type_t",
          "description": "The frame type for this ACE."
        },
        {
          "name": "DestMacOp",
          "type": "vtss_appl_vcap_adv_dmac_type_t",
          "description": "Indicates how a packet's destination MAC address to be matched."
        },
        {
          "name": "EtherSrcMacOp",
          "type": "vtss_appl_vcap_as_type_t",
          "description": "Indicates how a Ethernet type packet's source MAC address to be matched. This object is only available if FrameType is ether(1)."
        },
        {
          "name": "EtherSrcMac",
          "type": "vtss_mac_t",
          "description": "Indicates the 48 bits source MAC address. This object is only available if FrameType is ether(1) and EtherSrcMacOp is specific(1)."
        },
        {
          "name": "EtherDestMac",
          "type": "vtss_mac_t",
          "description": "Indicates the 48 bits destination MAC address. This object is only available if FrameType is ether(1) and EtherDestMacOp is specific(1)."
        },
        {
          "name": "EtherType",
          "type": "uint16_t",
          "description": "Indicates the packet's 16 bit Ethernet type field. Possible values are: 0(disabled), 0x600-0xFFFF but excluding 0x800(IPv4), 0x806(ARP) and 0x86DD(IPv6). This object is only available if FrameType is ether(1) and EtherDestMacOp is specific(1)."
        },
        {
          "name": "ArpSrcMacOp",
          "type": "vtss_appl_vcap_as_type_t",
          "description": "Indicates how a ARP packet's source MAC address to be matched. This object is only available if FrameType is arp(4)."
        },
        {
          "name": "ArpSrcMac",
          "type": "vtss_mac_t",
          "description": "Indicates the 48 bits source MAC address. This object is only available if FrameType is arp(4) and ArpSrcMacOp is specific(1)."
        },
        {
          "name": "ArpSenderIp",
          "type": "vtss_ipv4_t",
          "description": "The specified ARP sender IP address. The packet's sender address is AND-ed with the value of ArpSenderIpMask and then compared with the value of this object. If ArpSenderIp and ArpSrcIpMask are 0.0.0.0, this entry matches any sender IP address. This object is only available if FrameType is arp(4)."
        },
        {
          "name": "ArpSenderIpMask",
          "type": "vtss_ipv4_t",
          "description": "The specified ARP sender IP address mask. This object is only available if FrameType is arp(4)."
        },
        {
          "name": "ArpTargetIp",
          "type": "vtss_ipv4_t",
          "description": "The specified ARP target IP address. The packet's target address is AND-ed with the value of ArpTragetIpMask and then compared with the value of this object. If ArpTragetIp and ArpSrcIpMask are 0.0.0.0, this entry matches any target IP address. This object is only available if FrameType is arp(4)."
        },
        {
          "name": "ArpTargetIpMask",
          "type": "vtss_ipv4_t",
          "description": "The specified ARP target IP address mask. This object is only available if FrameType is arp(4)."
        },
        {
          "name": "ArpOpcode",
          "type": "vtss_appl_acl_ace_arp_op_t",
          "description": "Indicates how a ARP packet's opcode to be matched. This object is only available if FrameType is arp(4)."
        },
        {
          "name": "ArpFlagReq",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how a ARP packet's request/reply opcode is to be compared. This object is only available if FrameType is arp(4)."
        },
        {
          "name": "ArpFlagSha",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how a ARP packet's sender hardware address field (SHA) to be compared. This object is only available if FrameType is arp(4)."
        },
        {
          "name": "ArpFlagTha",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how a ARP packet's target hardware address field (THA) is to be compared. This object is only available if FrameType is arp(4)."
        },
        {
          "name": "ArpFlagHln",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how a ARP packet's s hardware address length field (HLN) is to be compared. The value 0 means any HLN value is allowed (don't-care field), value 1 means HLN is not equal to Ethernet (0x06) or the (PLN) is not equal to IPv4 (0x04) and value 2 means HLN is equal to Ethernet (0x06) or the (PLN) is not equal to IPv4 (0x04). This object is only available if FrameType is arp(4)."
        },
        {
          "name": "ArpFlagHrd",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how a ARP packet's hardware address space field (HRD) is to be compared. The value 0 means any HRD value is allowed (don't-care field), value 1 means HRD is not equal to Ethernet (1) and value 2 means HRD is equal to Ethernet (1). This object is only available if FrameType is arp(4)."
        },
        {
          "name": "ArpFlagPro",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how a ARP packet's protocol address space field (PRO) is to be compared. The value 0 means any PRO value is allowed (don't-care field), value 1 means PRO is not equal to IP (0x800) and value 2 means PRO is equal to IP (0x800). This object is only available if FrameType is arp(4)."
        },
        {
          "name": "Ipv4ProtocolOp",
          "type": "vtss_appl_vcap_as_type_t",
          "description": "Indicates how a IPv4 packet's protocol field is to be compared. This object is only available if FrameType is ipv4(5)."
        },
        {
          "name": "Ipv4Protocol",
          "type": "uint8_t",
          "description": "The protocol number field in the IPv4 header used to indicate a higher layer protocol. Possible values are 0-255. This object is only available if FrameType is ipv4(5) and Ipv4ProtocolOp is specific(1)."
        },
        {
          "name": "Ipv4SrcIp",
          "type": "vtss_ipv4_t",
          "description": "The specified source IPv4 address. The packet's sender address is AND-ed with the value of Ipv4SrcIpMask and then compared with the value of this object. If Ipv4SrcIp and Ipv4SrcIpMask are 0.0.0.0, this entry matches any source IP address. This object is only available if FrameType is ipv4(5)."
        },
        {
          "name": "Ipv4SrcIpMask",
          "type": "vtss_ipv4_t",
          "description": "The specified source IPv4 address mask. This object is only available if FrameType is ipv4(5)."
        },
        {
          "name": "Ipv4DestIp",
          "type": "vtss_ipv4_t",
          "description": "The specified destination IPv4 address. The packet's sender address is AND-ed with the value of Ipv4DestIpMask and then compared with the value of this object. If Ipv4DestIp and Ipv4DestIpMask are 0.0.0.0, this entry matches any destination IP address. This object is only available if FrameType is ipv4(5)."
        },
        {
          "name": "Ipv4DestIpMask",
          "type": "vtss_ipv4_t",
          "description": "The specified destination IPv4 address mask. This object is only available if FrameType is ipv4(5)."
        },
        {
          "name": "Ipv4IcmpTypeOp",
          "type": "vtss_appl_vcap_as_type_t",
          "description": "Indicates how a IPv4 packet's ICMP type field is to be compared. This object is only available if FrameType is ipv4(5) and Ipv4Protocol is icmp(1)."
        },
        {
          "name": "Ipv4IcmpType",
          "type": "uint8_t",
          "description": "The ICMP type field in the IPv4 header. Possible values are 0-255. This object is only available if FrameType is ipv4(5), Ipv4Protocol is icmp(1) and Ipv4IcmpTypeOp is specific(1)."
        },
        {
          "name": "Ipv4IcmpCodeOp",
          "type": "vtss_appl_vcap_as_type_t",
          "description": "Indicates how a IPv4 packet's ICMP code field is to be compared. This object is only available if FrameType is ipv4(5) and Ipv4Protocol is icmp(1)."
        },
        {
          "name": "Ipv4IcmpCode",
          "type": "uint8_t",
          "description": "The ICMP code field in the IPv4 header. Possible values are 0-255. This object is only available if FrameType is ipv4(5), Ipv4Protocol is icmp(1) and Ipv4IcmpCodeOp is specific(1)."
        },
        {
          "name": "Ipv4SrcPortOp",
          "type": "vtss_appl_vcap_asr_type_t",
          "description": "Indicates how a packet's source TCP/UDP port number is to be compared. This object is only available if FrameType is ipv4(5)."
        },
        {
          "name": "Ipv4SrcPort",
          "type": "uint16_t",
          "description": "The source port number of the TCP or UDP protocol. If the Ipv4SrcPortOp object is range(2), this object will be the starting port number of the port range. Valid range is 0-65535. This object is only available if FrameType is ipv4(5) and Ipv4SrcPortOp is not any(0)."
        },
        {
          "name": "Ipv4SrcPortRange",
          "type": "uint16_t",
          "description": "The source port number of the TCP or UDP protocol. If the Ipv4SrcPortOp object is range(2), this object will be the ending port number of the port range. Valid range is 0-65535. This object is only available if FrameType is ipv4(5) and Ipv4SrcPortOp is range(2)."
        },
        {
          "name": "Ipv4DestPortOp",
          "type": "vtss_appl_vcap_asr_type_t",
          "description": "Indicates how a packet's destination TCP/UDP port number is to be compared. This object is only available if FrameType is ipv4(5)."
        },
        {
          "name": "Ipv4DestPort",
          "type": "uint16_t",
          "description": "The destination port number of the TCP or UDP protocol. If the Ipv4DestPortOp object in the same row is range(2), this object will be the starting port number of the port range. Valid range is 0-65535. This object is only available if FrameType is ipv4(5) and Ipv4DestPortOp is not any(0)."
        },
        {
          "name": "Ipv4DestPortRange",
          "type": "uint16_t",
          "description": "The destination port number of the TCP or UDP protocol. If the Ipv4DestPortOp object in the same row is range(2), this object will be the ending port number of the port range. Valid range is 0-65535. This object is only available if FrameType is ipv4(5) and Ipv4DestPortOp is range(2)."
        },
        {
          "name": "Ipv4FlagTtl",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how a IPv4 packet's Time-to-Live field (TTL) is to be compared. The value 0 means any TTL value is allowed (don't-care field), value 1 means TTL is not equal zero and value 2 means TTL is equal to zero. This object is only available if FrameType is ipv4(5)."
        },
        {
          "name": "Ipv4FlagFragment",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how a IPv4 packet's More-Fragments field (MF) is to be compared. The value 0 means any MF value is allowed (don't-care field), value 1 means MF is not equal one (MF field isn't set) and value 2 means MF is equal to one (MF field is set). This object is only available if FrameType is ipv4(5)."
        },
        {
          "name": "Ipv4FlagIpOption",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how a IPv4 packet's options field is to be compared. This object is only available if FrameType is ipv4(5)."
        },
        {
          "name": "Ipv4TcpFlagFin",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how the IPv4 TCP FIN flag is matched. This object is only available if FrameType is ipv4(5) and Ipv4Protocol is tcp(6)."
        },
        {
          "name": "Ipv4TcpFlagSyn",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how the IPv4 TCP SYN flag is matched. This object is only available if FrameType is ipv4(5) and Ipv4Protocol is tcp(6)."
        },
        {
          "name": "Ipv4TcpFlagRst",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how the IPv4 TCP RST flag is matched. This object is only available if FrameType is ipv4(5) and Ipv4Protocol is tcp(6)."
        },
        {
          "name": "Ipv4TcpFlagPsh",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how the IPv4 TCP PSH flag is matched. This object is only available if FrameType is ipv4(5) and Ipv4Protocol is tcp(6)."
        },
        {
          "name": "Ipv4TcpFlagAck",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how the IPv4 TCP ACK flag is matched. This object is only available if FrameType is ipv4(5) and Ipv4Protocol is tcp(6)."
        },
        {
          "name": "Ipv4TcpFlagUrg",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how the IPv4 TCP URG flag is matched. This object is only available if FrameType is ipv4(5) and Ipv4Protocol is tcp(6)."
        },
        {
          "name": "Ipv6NextHeaderOp",
          "type": "vtss_appl_vcap_as_type_t",
          "description": "Specify the IPv6 next header filter for this ACE. This object is only available if FrameType is ipv6(6)."
        },
        {
          "name": "Ipv6NextHeader",
          "type": "uint8_t",
          "description": "When 'Specific' is selected for the IPv6 next header value, you can enter a specific value. The allowed range is 0 to 255. A frame that hits this ACE matches this IPv6 protocol value. This object is only available if FrameType is ipv6(6) and Ipv6NextHeaderOp is specific(1)."
        },
        {
          "name": "Ipv6Icmpv6TypeOp",
          "type": "vtss_appl_vcap_as_type_t",
          "description": "Indicates how a IPv6 packet's ICMPv6 type field is to be compared. This object is only available if FrameType is ipv6(6) and Ipv6NextHeader is icmpv6(58)."
        },
        {
          "name": "Ipv6Icmpv6Type",
          "type": "uint8_t",
          "description": "The ICMPv6 type field in the IPv6 header. Possible values are 0-255. This object is only available if FrameType is ipv6(6), Ipv6NextHeader is  icmpv6(58) and Ipv6Icmpv6TypeOp is specific(1)."
        },
        {
          "name": "Ipv6Icmpv6CodeOp",
          "type": "vtss_appl_vcap_as_type_t",
          "description": "Indicates how a IPv6 packet's ICMPv6 code field is to be compared. This object is only available if FrameType is ipv6(6) and Ipv6NextHeader is icmpv6(58)."
        },
        {
          "name": "Ipv6Icmpv6Code",
          "type": "uint8_t",
          "description": "The ICMP code field in the IPv6 header. Possible values are 0-255. This object is only available if FrameType is ipv6(6), Ipv6NextHeader is icmpv6(58) and Ipv6Icmpv6CodeOp is specific(1)."
        },
        {
          "name": "Ipv6SrcIp",
          "type": "vtss_ipv6_t",
          "description": "The specified source IPv6 address. The packet's sender address is AND-ed with the value of Ipv6SrcIpMask and then compared with the value of this object. If Ipv6SrcIp and Ipv4SrcIpMask are 0::, this entry matches any source IP address. This object is only available if FrameType is ipv6(6)."
        },
        {
          "name": "Ipv6SrcIpMask",
          "type": "vtss_ipv6_t",
          "description": "The specified source IPv6 address mask. This object is only available if FrameType is ipv6(6)."
        },
        {
          "name": "Ipv6SrcPortOp",
          "type": "vtss_appl_vcap_asr_type_t",
          "description": "Indicates how a packet's source TCP/UDP port number is to be compared. This object is only available if FrameType is ipv6(6)."
        },
        {
          "name": "Ipv6SrcPort",
          "type": "uint16_t",
          "description": "The source port number of the TCP or UDP protocol. If the Ipv6SrcPortOp object in the same row is range(2), this object will be the starting port number of the port range. Valid range is 0-65535. This object is only available if FrameType is ipv6(6) and Ipv6SrcPortOp is not any(0)."
        },
        {
          "name": "Ipv6SrcPortRange",
          "type": "uint16_t",
          "description": "The source port number of the TCP or UDP protocol. If the Ipv6SrcPortOp object in the same row is range(2), this object will be the ending port number of the port range. Valid range is 0-65535. This object is only available if FrameType is ipv6(6) and Ipv6SrcPortOp is range(2)."
        },
        {
          "name": "Ipv6DestPortOp",
          "type": "vtss_appl_vcap_asr_type_t",
          "description": "Indicates how a packet's destination TCP/UDP port number is to be compared. This object is only available if FrameType is ipv6(6)."
        },
        {
          "name": "Ipv6DestPort",
          "type": "uint16_t",
          "description": "The destination port number of the TCP or UDP protocol. If the Ipv6DestPortOp object in the same row is range(2), this object will be the starting port number of the port range. Valid range is 0-65535. This object is only available if FrameType is ipv6(6) and Ipv6DestPortOp is not any(0)."
        },
        {
          "name": "Ipv6DestPortRange",
          "type": "uint16_t",
          "description": "The destination port number of the TCP or UDP protocol. If the Ipv6DestPortOp object in the same row is range(2), this object will be the ending port number of the port range. Valid range is 0-65535. This object is only available if FrameType is ipv6(6) and Ipv6DestPortOp is range(2)."
        },
        {
          "name": "Ipv6FlagTtl",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how a IPv6 packet's Time-to-Live field (TTL) is to be compared. The value 0 means any TTL value is allowed (don't-care field), value 1 means TTL is not equal zero and value 2 means TTL is equal to zero. This object is only available if FrameType is ipv6(6)."
        },
        {
          "name": "Ipv6TcpFlagFin",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how a IPv6 TCP packet's 'No more data from sender' field (FIN) is to be compared. The value 0 means any FIN value is allowed (don't-care field), value 1 means FIN is not equal one (FIN field isn't set) and value 2 means FIN is equal to one (FIN field is set). This object is only available if FrameType is ipv6(6) and Ipv6NextHeader is tcp(6)."
        },
        {
          "name": "Ipv6TcpFlagSyn",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how a IPv6 TCP packet's 'Synchronize sequence numbers' field (SYN) is to be compared. The value 0 means any SYN value is allowed (don't-care field), value 1 means SYN is not equal one (FIN field isn't set) and value 2 means SYN is equal to one (FIN field is set). This object is only available if FrameType is ipv6(6) and Ipv6NextHeader is tcp(6)."
        },
        {
          "name": "Ipv6TcpFlagRst",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how a IPv6 TCP packet's 'Reset the connection' field (RST) is to be compared. The value 0 means any RST value is allowed (don't-care field), value 1 means RST is not equal one (FIN field isn't set) and value 2 means RST is equal to one (FIN field is set). This object is only available if FrameType is ipv6(6) and Ipv6NextHeader is tcp(6)."
        },
        {
          "name": "Ipv6TcpFlagPsh",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how a IPv6 TCP packet's 'Push Function' field (PSH) is to be compared. The value 0 means any PSH value is allowed (don't-care field), value 1 means PSH is not equal one (FIN field isn't set) and value 2 means PSH is equal to one (FIN field is set). This object is only available if FrameType is ipv6(6) and Ipv6NextHeader is tcp(6)."
        },
        {
          "name": "Ipv6TcpFlagAck",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how a IPv6 TCP packet's 'Acknowledgment field significant' field (ACK) is to be compared. The value 0 means any FIN value is allowed (don't-care field), value 1 means ACK is not equal one (FIN field isn't set) and value 2 means ACK is equal to one (FIN field is set). This object is only available if FrameType is ipv6(6) and Ipv6NextHeader is tcp(6)."
        },
        {
          "name": "Ipv6TcpFlagUrg",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how a IPv6 TCP packet's 'Urgent Pointer field significant' field (URG) is to be compared. The value 0 means any URG value is allowed (don't-care field), value 1 means URG is not equal one (FIN field isn't set) and value 2 means URG is equal to one (FIN field is set). This object is only available if FrameType is ipv6(6) and Ipv6NextHeader is tcp(6)."
        }
      ]
    },
    {
      "type-name": "vtss_appl_acl_config_interface_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "PolicyId",
          "type": "uint32_t",
          "description": "The policy ID."
        },
        {
          "name": "HitAction",
          "type": "vtss_appl_acl_hit_action_t",
          "description": "The hit action operation for this interface. egress(2) is not supported."
        },
        {
          "name": "RedirectPortList",
          "type": "vtss_port_list_stackable_t",
          "description": "The redirect port list for this interface."
        },
        {
          "name": "RateLimiterId",
          "type": "uint32_t",
          "description": "The rate limiter ID. 0 means to be disabled."
        },
        {
          "name": "EvcPolicerId",
          "type": "uint16_t",
          "description": "The EVC policer ID. 0 means to be disabled.",
          "depends-on-capability": "EvcPolicerSupported@vtss_appl_acl_capabilities_t"
        },
        {
          "name": "Mirror",
          "type": "vtss_bool_t",
          "description": "The mirror operation. Frames matching this interface rule are mirrored to the destination mirror port that is configured in the mirror modules.",
          "depends-on-capability": "MirrorSupported@vtss_appl_acl_capabilities_t"
        },
        {
          "name": "Logging",
          "type": "vtss_bool_t",
          "description": "Specify the logging operation of the interface. Notice that the logging message doesn't include the 4 bytes CRC information. The allowed values are: True - Frames matching the ACE are stored in the System Log. False - Frames matching the ACE are not logged. Note: The logging feature only works when the packet length is less than 1518(without VLAN tags) and the System Log memory size and logging rate is limited."
        },
        {
          "name": "Shutdown",
          "type": "vtss_bool_t",
          "description": "Specify the port shut down operation of the interface. The allowed values are: True - If a frame matches the interface rule, the ingress port will be disabled. False - Port shut down is disabled for the interface. Note: The shutdown feature only works when the packet length is less than 1518(without VLAN tags)."
        }
      ]
    },
    {
      "type-name": "vtss_appl_acl_config_rate_limiter_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "BitRateEnable",
          "type": "vtss_bool_t",
          "description": "Use bit rate policing instead of packet rate. True means bit rate is used and false means packet rate is used.",
          "depends-on-capability": "RateLimiterBitRateSupported@vtss_appl_acl_capabilities_t"
        },
        {
          "name": "BitRate",
          "type": "uint32_t",
          "description": "Bit rate in kbps.",
          "depends-on-capability": "RateLimiterBitRateSupported@vtss_appl_acl_capabilities_t"
        },
        {
          "name": "PacketRate",
          "type": "uint32_t",
          "description": "Packet rate in pps."
        }
      ]
    },
    {
      "type-name": "vtss_appl_acl_control_globals_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ClearAllHitCount",
          "type": "vtss_bool_t",
          "description": "Set true to clear hit counts of all ACEs and interfaces."
        }
      ]
    },
    {
      "type-name": "vtss_appl_acl_control_interface_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "State",
          "type": "vtss_bool_t",
          "description": "Specify the port status. True is to enable the port and false is to shutdown the port"
        }
      ]
    },
    {
      "type-name": "vtss_appl_acl_status_ace_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "CrossedThreshold",
          "type": "vtss_bool_t",
          "description": "The ACE event status. When the status value is true, it means the ACE status is crossed the hardware threshold."
        }
      ]
    },
    {
      "type-name": "vtss_appl_alarm_ctrl_entry_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Interval",
          "type": "uint32_t",
          "description": "Sampling interval"
        },
        {
          "name": "VarName",
          "type": "vtss_appl_rmon_alarm_if_t",
          "description": "The source data to be compared"
        },
        {
          "name": "SampleType",
          "type": "vtss_appl_alarm_sample_t",
          "description": "The source data to be computed with absolute value or delta value"
        },
        {
          "name": "StartupType",
          "type": "vtss_appl_alarm_t",
          "description": "Trigger rising or falling alarm when startup"
        },
        {
          "name": "Ifindex",
          "type": "vtss_ifindex_t",
          "description": "Interface index"
        },
        {
          "name": "RisingThreshold",
          "type": "int32_t",
          "description": "Rising threshold"
        },
        {
          "name": "FallingThreshold",
          "type": "int32_t",
          "description": "Falling threshold"
        },
        {
          "name": "RisingEventIndex",
          "type": "uint32_t",
          "description": "Rising event index"
        },
        {
          "name": "FallingEventIndex",
          "type": "uint32_t",
          "description": "Falling event index"
        }
      ]
    },
    {
      "type-name": "vtss_appl_arp_inspection_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AdminState",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the ARP Inspection global functionality."
        }
      ]
    },
    {
      "type-name": "vtss_appl_arp_inspection_entry_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Type",
          "type": "vtss_appl_arp_inspection_status_t",
          "description": "Either static(0) or dynamic(1) for the specific ARP entry."
        }
      ]
    },
    {
      "type-name": "vtss_appl_arp_inspection_port_config_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the ARP Inspection per-port functionality. Only when both Global Mode and Port Mode on a given port are enabled, ARP Inspection is enabled on this given port."
        },
        {
          "name": "CheckVlan",
          "type": "vtss_bool_t",
          "description": "Enable the ARP Inspection VLAN checking will log the inspected entries by referring to arpInspectionVlanConfigTable setting. Disable the ARP Inspection VLAN checking will log the inspected entries by referring to arpInspectionPortConfigTable setting."
        },
        {
          "name": "LogType",
          "type": "vtss_appl_arp_inspection_log_t",
          "description": "The capability to log the inspected entries per port basis. none(0) will log nothing. deny(1) will log the denied entries. permit(2) will log the permitted entries. all(3) will log all kinds of inspected entries."
        }
      ]
    },
    {
      "type-name": "vtss_appl_arp_inspection_status_event_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "CrossedMaximumEntries",
          "type": "vtss_bool_t",
          "description": "This is an ARP inspection event status. When the status value is true, it means the ARP inspection status is reached the maximum entries."
        }
      ]
    },
    {
      "type-name": "vtss_appl_auth_acct_agent_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Method",
          "type": "vtss_appl_auth_acct_method_t",
          "description": "Accounting method"
        },
        {
          "name": "CmdEnable",
          "type": "vtss_bool_t",
          "description": "Enable accounting of commands"
        },
        {
          "name": "CmdPrivLvl",
          "type": "uint8_t",
          "description": "Command privilege level. Log all commands with a privilege level higher than or equal to this level. Valid values are in the range 0 to 15"
        },
        {
          "name": "ExecEnable",
          "type": "vtss_bool_t",
          "description": "Enable exec (login) accounting"
        }
      ]
    },
    {
      "type-name": "vtss_appl_auth_author_agent_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Method",
          "type": "vtss_appl_auth_author_method_t",
          "description": "Authorization method"
        },
        {
          "name": "CmdEnable",
          "type": "vtss_bool_t",
          "description": "Enable authorization of commands"
        },
        {
          "name": "CmdPrivLvl",
          "type": "uint8_t",
          "description": "Command privilege level. Authorize all commands with a privilege level higher than or equal to this level. Valid values are in the range 0 to 15"
        },
        {
          "name": "CfgCmdEnable",
          "type": "vtss_bool_t",
          "description": "Also authorize configuration commands"
        }
      ]
    },
    {
      "type-name": "vtss_appl_auth_radius_global_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Timeout",
          "type": "uint32_t",
          "description": "Global timeout for for RADIUS servers. Can be overridden by individual host entries. (1 to 1000 seconds)"
        },
        {
          "name": "Retransmit",
          "type": "uint32_t",
          "description": "Global retransmit count for RADIUS servers. Can be overridden by individual host entries. (1 to 1000 times)"
        },
        {
          "name": "Deadtime",
          "type": "uint32_t",
          "description": "Global deadtime for RADIUS servers. (0 to 1440 minutes)"
        },
        {
          "name": "Key",
          "type": "char *",
          "description": "Global secret key for RADIUS servers. Can be overridden by individual host entries."
        },
        {
          "name": "NasIpv4Enable",
          "type": "vtss_bool_t",
          "description": "Enable Global NAS IPv4 address"
        },
        {
          "name": "NasIpv4Address",
          "type": "vtss_ipv4_t",
          "description": "Global NAS IPv4 address"
        },
        {
          "name": "NasIpv6Enable",
          "type": "vtss_bool_t",
          "description": "Enable Global NAS IPv6 address"
        },
        {
          "name": "NasIpv6Address",
          "type": "vtss_ipv6_t",
          "description": "Global NAS IPv6 address"
        },
        {
          "name": "NasIdentifier",
          "type": "char *",
          "description": "Global NAS Identifier"
        }
      ]
    },
    {
      "type-name": "vtss_appl_clock_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "TimeZoneAcronym",
          "type": "char *",
          "description": "This is a acronym to identify the time zone."
        },
        {
          "name": "TimeZoneOffset",
          "type": "int16_t",
          "description": "To set the system time zone with respect to UTC in minutes."
        },
        {
          "name": "SummerTimeMode",
          "type": "vtss_appl_clock_summertime_mode_t",
          "description": "This is a summer time mode.\n               Disabled: The daylight feature is disabled, \n               and no input validation is performed on remaining configurations parameters.\n               Recurring mode: Summer time configuration will repeat every year.\n               To enable this mode requires that the parameters Month, Week and Day are configured with valid\n               values (non zero). The parameters Year and Date must be set to 0, \n               signaling that they are not used.\n               Non recurring mode: Summer time configuration is done once. \n               To enable this feature requires that the following values are configured with valid values\n               (non zero): Year, Month and Date. The parameters Week and Day must be set to 0\n               signaling that they are not used."
        },
        {
          "name": "SummerTimeWeekStart",
          "type": "uint8_t",
          "description": "This is a summer time starting week.\n               This object needs to be set when summer time mode is recurring.\n               Object value 0 means unused object."
        },
        {
          "name": "SummerTimeDayStart",
          "type": "uint8_t",
          "description": "This is a summer time starting day.\n               where monday = 1, sunday = 7.\n               This object needs to be set when summer time mode is recurring.\n               Object value 0 means unused object."
        },
        {
          "name": "SummerTimeMonthStart",
          "type": "uint8_t",
          "description": "This is a summer time starting month.\n               This object needs to be set when summer time mode is not disabled."
        },
        {
          "name": "SummerTimeDateStart",
          "type": "uint8_t",
          "description": "This is a summer time starting date.\n               This object needs to be set when summer time mode is non recurring."
        },
        {
          "name": "SummerTimeYearStart",
          "type": "uint16_t",
          "description": "This is a summer time starting year.\n               This object needs to be set when summer time mode is non recurring.\n               Object value 0 means unused object."
        },
        {
          "name": "SummerTimeHourStart",
          "type": "uint8_t",
          "description": "This is a summer time starting hour.\n               This object needs to be set when summer time mode is not disabled."
        },
        {
          "name": "SummerTimeMinuteStart",
          "type": "uint8_t",
          "description": "This is a summer time starting minute.\n               This object needs to be set when summer time mode is not disabled."
        },
        {
          "name": "SummerTimeWeekEnd",
          "type": "uint8_t",
          "description": "This is a summer time ending week.\n               This object needs to be set when summer time mode is recurring.\n               Object value 0 means unused object."
        },
        {
          "name": "SummerTimeDayEnd",
          "type": "uint8_t",
          "description": "This is a summer time ending day.\n               This object needs to be set when summer time mode is recurring.\n               Object value 0 means unused object."
        },
        {
          "name": "SummerTimeMonthEnd",
          "type": "uint8_t",
          "description": "This is a summer time ending month.\n               This object needs to be set when summer time mode is not disabled."
        },
        {
          "name": "SummerTimeDateEnd",
          "type": "uint8_t",
          "description": "This is a summer time ending date.\n               This object needs to be set when summer time mode is non recurring.\n               Object value 0 means unused object."
        },
        {
          "name": "SummerTimeYearEnd",
          "type": "uint16_t",
          "description": "This is a summer time ending year.\n               This object needs to be set when summer time mode is non recurring.\n               Object value 0 means unused object."
        },
        {
          "name": "SummerTimeHourEnd",
          "type": "uint8_t",
          "description": "This is a summer time ending hour.\n               This object needs to be set when summer time mode is not disabled."
        },
        {
          "name": "SummerTimeMinuteEnd",
          "type": "uint8_t",
          "description": "This is a summer time ending minute.\n               This object needs to be set when summer time mode is not disabled."
        },
        {
          "name": "SummerTimeOffset",
          "type": "int16_t",
          "description": "The value of this object indicates\n               the number of minutes to add  or to subtract during summertime.\n               This object needs to be set when summer time mode is not disabled."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ddmi_config_globals_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_bool_t",
          "description": "Global operation mode of DDMI. true is to enable the functions of DDMI and false is to disable it."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ddmi_event_entry_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "State",
          "type": "vtss_appl_ddmi_event_state_t",
          "description": "Current Rx power in mV."
        },
        {
          "name": "Current",
          "type": "char *",
          "description": "The current value when the event occurs."
        },
        {
          "name": "HighAlarmThreshold",
          "type": "char *",
          "description": "The High alarm threshold when the event occurs."
        },
        {
          "name": "LowAlarmThreshold",
          "type": "char *",
          "description": "The Low alarm threshold when the event occurs."
        },
        {
          "name": "HighWarnThreshold",
          "type": "char *",
          "description": "The high warning threshold when the event occurs."
        },
        {
          "name": "LowWarnThreshold",
          "type": "char *",
          "description": "The low warning threshold when the event occurs."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ddmi_status_interface_entry_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "A0Supported",
          "type": "vtss_bool_t",
          "description": "Support transceiver status information or not. true is to supported and false is not supported."
        },
        {
          "name": "A0SfpDetected",
          "type": "vtss_bool_t",
          "description": "SFP module is detected or not. true is to detected and false is not detected."
        },
        {
          "name": "A0Vendor",
          "type": "char *",
          "description": "Vendor name."
        },
        {
          "name": "A0PartNumber",
          "type": "char *",
          "description": "Part number."
        },
        {
          "name": "A0SerialNumber",
          "type": "char *",
          "description": "Serial number."
        },
        {
          "name": "A0Revision",
          "type": "char *",
          "description": "Revision."
        },
        {
          "name": "A0DateCode",
          "type": "char *",
          "description": "Date Code."
        },
        {
          "name": "A0SfpType",
          "type": "vtss_appl_sfp_tranceiver_t",
          "description": "SFP type. none(0) means no SFP module. notSupported(1) means SFP module is not supported. sfp100Fx(2) means SFP 100BASE-FX. sfp100BaseLx(3) means SFP 100BASE-LX. sfp100BaseBx10(4) means SFP 100BASE-BX10. sfp100BaseT(5) means SFP 100BASE-T. sfp1000BaseBx10(6) means SFP 1000BASE-BX10. sfp1000BaseT(7) means SFP 1000BASE-T. sfp1000BaseCx(8) means SFP 1000BASE-CX. sfp1000BaseSx(9) means SFP 1000BASE-SX. sfp1000BaseLx(10) means SFP 1000BASE-LX. sfp1000BaseX(11) means SFP 1000BASE-X. sfp2G5(12) means SFP 2.5G. sfp5G(13) means SFP 5G. sfp10G(14) means SFP 10G."
        },
        {
          "name": "A2Supported",
          "type": "vtss_bool_t",
          "description": "Support DDMI status information or not. true is to supported and false is not supported."
        },
        {
          "name": "A2CurrentTemperature",
          "type": "char *",
          "description": "Current temperature in Celcius."
        },
        {
          "name": "A2TemperatureHighAlarmThreshold",
          "type": "char *",
          "description": "Temperature high alarm threshold in Celcius."
        },
        {
          "name": "A2TemperatureLowAlarmThreshold",
          "type": "char *",
          "description": "Temperature low alarm threshold in Celcius."
        },
        {
          "name": "A2TemperatureHighWarnThreshold",
          "type": "char *",
          "description": "Temperature high warning threshold in Celcius."
        },
        {
          "name": "A2TemperatureLowWarnThreshold",
          "type": "char *",
          "description": "Temperature low warning threshold in Celcius."
        },
        {
          "name": "A2CurrentVoltage",
          "type": "char *",
          "description": "Current voltage in Volt."
        },
        {
          "name": "A2VoltageHighAlarmThreshold",
          "type": "char *",
          "description": "Voltage high alarm threshold in Volt."
        },
        {
          "name": "A2VoltageLowAlarmThreshold",
          "type": "char *",
          "description": "Voltage low alarm threshold in Volt."
        },
        {
          "name": "A2VoltageHighWarnThreshold",
          "type": "char *",
          "description": "Voltage high warning threshold in Volt."
        },
        {
          "name": "A2VoltageLowWarnThreshold",
          "type": "char *",
          "description": "Voltage low warning threshold in Volt."
        },
        {
          "name": "A2CurrentTxBias",
          "type": "char *",
          "description": "Current Tx bias in mA."
        },
        {
          "name": "A2TxBiasHighAlarmThreshold",
          "type": "char *",
          "description": "Tx bias high alarm threshold in mA."
        },
        {
          "name": "A2TxBiasLowAlarmThreshold",
          "type": "char *",
          "description": "Tx bias low alarm threshold in mA."
        },
        {
          "name": "A2TxBiasHighWarnThreshold",
          "type": "char *",
          "description": "Tx bias high warning threshold in mA."
        },
        {
          "name": "A2TxBiasLowWarnThreshold",
          "type": "char *",
          "description": "Tx bias low warning threshold in mA."
        },
        {
          "name": "A2CurrentTxPower",
          "type": "char *",
          "description": "Current Tx power in mV."
        },
        {
          "name": "A2TxPowerHighAlarmThreshold",
          "type": "char *",
          "description": "Tx power high alarm threshold in mV."
        },
        {
          "name": "A2TxPowerLowAlarmThreshold",
          "type": "char *",
          "description": "Tx power low alarm threshold in mV."
        },
        {
          "name": "A2TxPowerHighWarnThreshold",
          "type": "char *",
          "description": "Tx power high warning threshold in mV."
        },
        {
          "name": "A2TxPowerLowWarnThreshold",
          "type": "char *",
          "description": "Tx power low warning threshold in mV."
        },
        {
          "name": "A2CurrentRxPower",
          "type": "char *",
          "description": "Current Rx power in mV."
        },
        {
          "name": "A2RxPowerHighAlarmThreshold",
          "type": "char *",
          "description": "Rx power high alarm threshold in mV."
        },
        {
          "name": "A2RxPowerLowAlarmThreshold",
          "type": "char *",
          "description": "Rx power low alarm threshold in mV."
        },
        {
          "name": "A2RxPowerHighWarnThreshold",
          "type": "char *",
          "description": "Rx power high warning threshold in mV."
        },
        {
          "name": "A2RxPowerLowWarnThreshold",
          "type": "char *",
          "description": "Rx power low warning threshold in mV."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp6c_interface_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Address",
          "type": "vtss_ipv6_t",
          "description": "The IPv6 address determined from DHCPv6 for this interface."
        },
        {
          "name": "ServerAddress",
          "type": "vtss_ipv6_t",
          "description": "The IPv6 address of the bounded DHCPv6 server for this interface."
        },
        {
          "name": "DnsServerAddress",
          "type": "vtss_ipv6_t",
          "description": "The DNS server address retrieved from DHCPv6."
        },
        {
          "name": "PreferredLifetime",
          "type": "uint64_t",
          "description": "The recorded Preferred-Lifetime for the DHCPv6 client interface.  From RFC-4862 and RFC-3315: It is the preferred lifetime for the IPv6 address, expressed in units of seconds.  When the preferred lifetime expires, the address becomes deprecated."
        },
        {
          "name": "ValidLifetime",
          "type": "uint64_t",
          "description": "The recorded Valid-Lifetime for the DHCPv6 client interface.  From RFC-4862 and RFC-3315: It is the valid lifetime for the IPv6 address, expressed in units of seconds.  The valid lifetime must be greater than or equal to the preferred lifetime.  When the valid lifetime expires, the address becomes invalid."
        },
        {
          "name": "T1",
          "type": "uint64_t",
          "description": "The recorded T1 for the DHCPv6 client interface.  From RFC-3315: It is the time at which the client contacts the server from which the address is obtained to extend the lifetimes of the non-temporary address assigned; T1 is a time duration relative to the current time expressed in units of seconds."
        },
        {
          "name": "T2",
          "type": "uint64_t",
          "description": "The recorded T2 for the DHCPv6 client interface.  From RFC-3315: It is the time at which the client contacts any available server to extend the lifetimes of the non-temporary address assigned; T2 is a time duration relative to the current time expressed in units of seconds."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp6c_intf_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "RapidCommit",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the rapid-commit capability in DHCPv6 message exchanges."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_relay_control_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ClearStatistics",
          "type": "vtss_bool_t",
          "description": "The action to clear statistics. true is to clear the statistics data. false, then, does nothing."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_relay_param_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_bool_t",
          "description": "Global mode of DHCP relay. true is to enable DHCP relay and false is to disable it."
        },
        {
          "name": "ServerIpAddress",
          "type": "vtss_ipv4_t",
          "description": "Server IP address. This IP address is for DHCP server where the DHCP relay will relay DHCP packets to."
        },
        {
          "name": "InformationMode",
          "type": "vtss_bool_t",
          "description": "Indicates the DHCP relay information mode option operation. Possible modes are - Enabled: Enable DHCP relay information mode operation. When DHCP relay information mode operation is enabled, the agent inserts specific information (option 82) into a DHCP message when forwarding to DHCP server and removes it from a DHCP message when transferring to DHCP client. It only works when DHCP relay operation mode is enabled. Disabled: Disable DHCP relay information mode operation."
        },
        {
          "name": "InformationPolicy",
          "type": "vtss_appl_dhcp_relay_information_policy_t",
          "description": "Indicates the DHCP relay information option policy. When DHCP relay information mode operation is enabled, if the agent receives a DHCP message that already contains relay agent information it will enforce the policy. The 'Replace' policy is invalid when relay information mode is disabled."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_server_config_globals_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_bool_t",
          "description": "Global mode of DHCP server. true is to enable the functions of DHCP server and false is to disable it."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_server_config_pool_entry_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "PoolType",
          "type": "vtss_appl_dhcp_server_pool_type_t",
          "description": "Type of pool. none(0) means the pool type is not defined yet. network(1) means the pool defines a pool of IP addresses to service more than one DHCP client. host(2) means the pool services for a specific DHCP client identified by client identifier or hardware address."
        },
        {
          "name": "Ipv4Address",
          "type": "vtss_ipv4_t",
          "description": "Network number of the subnet. If the pool type is of network, the IP address can be any general IP address. If the pool type is of host, the IP address must be a unicast IP address."
        },
        {
          "name": "SubnetMask",
          "type": "vtss_ipv4_t",
          "description": "Subnet Mask. DHCP option 1. Specify subnet mask of the DHCP address pool, excluding 0.0.0.0 and 255.255.255.255."
        },
        {
          "name": "SubnetBroadcast",
          "type": "vtss_ipv4_t",
          "description": "Broadcast IP address in the subnet. DHCP option 28. Specify the broadcast address in use on the client's subnet."
        },
        {
          "name": "LeaseDay",
          "type": "uint32_t",
          "description": "Number of days of lease time. DHCP option 51, 58 and 59. The value range is 0-365. Specify lease time that allows the client to request a lease time for the IP address. If all of LeaseDay, LeaseHour and LeaseMinute are 0's, then it means the lease time is infinite."
        },
        {
          "name": "LeaseHour",
          "type": "uint32_t",
          "description": "Number of hours of lease time. DHCP option 51, 58 and 59. The value range is 0-23. Specify lease time that allows the client to request a lease time for the IP address. If all of LeaseDay, LeaseHour and LeaseMinute are 0's, then it means the lease time is infinite."
        },
        {
          "name": "LeaseMinute",
          "type": "uint32_t",
          "description": "Number of minutes of lease time. DHCP option 51, 58 and 59. The value range is 0-59. Specify lease time that allows the client to request a lease time for the IP address. If all of LeaseDay, LeaseHour and LeaseMinute are 0's, then it means the lease time is infinite."
        },
        {
          "name": "DomainName",
          "type": "char *",
          "description": "Domain name. DHCP option 15. Specify domain name that client should use when resolving hostname via DNS."
        },
        {
          "name": "DefaultRouter1",
          "type": "vtss_ipv4_t",
          "description": "Default router 1."
        },
        {
          "name": "DefaultRouter2",
          "type": "vtss_ipv4_t",
          "description": "Default router 2."
        },
        {
          "name": "DefaultRouter3",
          "type": "vtss_ipv4_t",
          "description": "Default router 3."
        },
        {
          "name": "DefaultRouter4",
          "type": "vtss_ipv4_t",
          "description": "Default router 4."
        },
        {
          "name": "DnsServer1",
          "type": "vtss_ipv4_t",
          "description": "DNS server 1."
        },
        {
          "name": "DnsServer2",
          "type": "vtss_ipv4_t",
          "description": "DNS server 2."
        },
        {
          "name": "DnsServer3",
          "type": "vtss_ipv4_t",
          "description": "DNS server 3."
        },
        {
          "name": "DnsServer4",
          "type": "vtss_ipv4_t",
          "description": "DNS server 4."
        },
        {
          "name": "NtpServer1",
          "type": "vtss_ipv4_t",
          "description": "NTP server 1."
        },
        {
          "name": "NtpServer2",
          "type": "vtss_ipv4_t",
          "description": "NTP server 2."
        },
        {
          "name": "NtpServer3",
          "type": "vtss_ipv4_t",
          "description": "NTP server 3."
        },
        {
          "name": "NtpServer4",
          "type": "vtss_ipv4_t",
          "description": "NTP server 4."
        },
        {
          "name": "NetbiosNodeType",
          "type": "vtss_appl_dhcp_server_netbios_node_type_t",
          "description": "Type of NetBIOS node. DHCP option 46. Specify NetBIOS node type option to allow Netbios over TCP/IP clients which are configurable to be configured as described in RFC 1001/1002. nodeNone(0) means the node type is not defined yet. nodeB(1) means the node type is type of B. nodeP(2) means the node type is type of P. nodeM(3) means the node type is type of M. nodeH(4) means the node type is type of H."
        },
        {
          "name": "NetbiosScope",
          "type": "char *",
          "description": "NetBIOS scope. DHCP option 47. Specify the NetBIOS over TCP/IP scope parameter for the client as specified in RFC 1001/1002."
        },
        {
          "name": "NetbiosNameServer1",
          "type": "vtss_ipv4_t",
          "description": "NetBIOS name server 1."
        },
        {
          "name": "NetbiosNameServer2",
          "type": "vtss_ipv4_t",
          "description": "NetBIOS name server 2."
        },
        {
          "name": "NetbiosNameServer3",
          "type": "vtss_ipv4_t",
          "description": "NetBIOS name server 3."
        },
        {
          "name": "NetbiosNameServer4",
          "type": "vtss_ipv4_t",
          "description": "NetBIOS name server 4."
        },
        {
          "name": "NisDomainName",
          "type": "char *",
          "description": "NIS Domain Name. DHCP option 40. Specify the name of the client's NIS domain."
        },
        {
          "name": "NisServer1",
          "type": "vtss_ipv4_t",
          "description": "NIS server 1."
        },
        {
          "name": "NisServer2",
          "type": "vtss_ipv4_t",
          "description": "NIS server 2."
        },
        {
          "name": "NisServer3",
          "type": "vtss_ipv4_t",
          "description": "NIS server 3."
        },
        {
          "name": "NisServer4",
          "type": "vtss_ipv4_t",
          "description": "NIS server 4."
        },
        {
          "name": "ClientIdentifierType",
          "type": "vtss_appl_dhcp_server_client_identifier_type_t",
          "description": "Type of client identifier. DHCP option 61. Specify client's unique identifier to be used when the pool is the type of host. none(0) means the client identifier type is not defined yet. fqdn(1) means the client identifier type is type of FQDN (Fully Qualified Domain Name). mac(2) means the client identifier type is type of MAC address."
        },
        {
          "name": "ClientIdentifierFqdn",
          "type": "char *",
          "description": "Client's Fully Qualified Domain Name. DHCP option 61. Specify client's unique identifier to be used when the pool is the type of host. This takes effect only if ClientIdentifierType is defined fqdn(1)."
        },
        {
          "name": "ClientIdentifierMac",
          "type": "vtss_mac_t",
          "description": "Client's MAC address. DHCP option 61. Specify client's unique identifier to be used when the pool is the type of host. This takes effect only if ClientIdentifierType is defined as mac(2)."
        },
        {
          "name": "ClientHardwareAddress",
          "type": "vtss_mac_t",
          "description": "Client's hardware address. Specify client's hardware(MAC) address to be used when the pool is the type of host."
        },
        {
          "name": "ClientName",
          "type": "char *",
          "description": "Client name. DHCP option 12. Specify the name of client to be used when the pool is the type of host."
        },
        {
          "name": "VendorClassId1",
          "type": "char *",
          "description": "Vendor Class Identifier. DHCP option 60. Specify to be used by DHCP client to optionally identify the vendor type and configuration of a DHCP client. DHCP server will deliver the corresponding option 43 specific information to the client that sends option 60 vendor class identifier."
        },
        {
          "name": "VendorSpecificInfo1",
          "type": "char *",
          "description": "Vendor Specific Information. DHCP option 43. Specify vendor specific information corresponding to option 60 vendor class identifier. Therefore, the corresponding vendor class identifier must be defined before this specific information."
        },
        {
          "name": "VendorClassId2",
          "type": "char *",
          "description": "Vendor Class Identifier. DHCP option 60. Specify to be used by DHCP client to optionally identify the vendor type and configuration of a DHCP client. DHCP server will deliver the corresponding option 43 specific information to the client that sends option 60 vendor class identifier."
        },
        {
          "name": "VendorSpecificInfo2",
          "type": "char *",
          "description": "Vendor Specific Information. DHCP option 43. Specify vendor specific information corresponding to option 60 vendor class identifier. Therefore, the corresponding vendor class identifier must be defined before this specific information."
        },
        {
          "name": "VendorClassId3",
          "type": "char *",
          "description": "Vendor Class Identifier. DHCP option 60. Specify to be used by DHCP client to optionally identify the vendor type and configuration of a DHCP client. DHCP server will deliver the corresponding option 43 specific information to the client that sends option 60 vendor class identifier."
        },
        {
          "name": "VendorSpecificInfo3",
          "type": "char *",
          "description": "Vendor Specific Information. DHCP option 43. Specify vendor specific information corresponding to option 60 vendor class identifier. Therefore, the corresponding vendor class identifier must be defined before this specific information."
        },
        {
          "name": "VendorClassId4",
          "type": "char *",
          "description": "Vendor Class Identifier. DHCP option 60. Specify to be used by DHCP client to optionally identify the vendor type and configuration of a DHCP client. DHCP server will deliver the corresponding option 43 specific information to the client that sends option 60 vendor class identifier."
        },
        {
          "name": "VendorSpecificInfo4",
          "type": "char *",
          "description": "Vendor Specific Information. DHCP option 43. Specify vendor specific information corresponding to option 60 vendor class identifier. Therefore, the corresponding vendor class identifier must be defined before this specific information."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_server_config_vlan_entry_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_bool_t",
          "description": "VLAN mode of DHCP server. true is to enable DHCP server per VLAN and false is to disable it per VLAN."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_server_control_binding_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ClearByIp",
          "type": "vtss_ipv4_t",
          "description": "Clear binding with the IP address. If 0.0.0.0 then do nothing."
        },
        {
          "name": "ClearByType",
          "type": "vtss_appl_dhcp_server_binding_type_t",
          "description": "Clear binding by binding type. If none(0) then do nothing."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_server_control_statistics_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Clear",
          "type": "vtss_bool_t",
          "description": "Clear all statistics."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_server_status_binding_entry_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "State",
          "type": "vtss_appl_dhcp_server_binding_state_t",
          "description": "State of binding. none(0) means the binding is not in use. allocated(1) means the binding is allocated to the new DHCP client who send DHCPDISCOVER. committed(2) means the binding is committed as the DHCP process is completed successfully. expired(3) means the lease of the binding expired."
        },
        {
          "name": "Type",
          "type": "vtss_appl_dhcp_server_binding_type_t",
          "description": "Type of binding. none(0) means the binding is not in use. automatic(1) means the binding is mapped to network-type pool. manual(2) means the binding is mapped to host-type pool. expired(3) means the lease of the binding expired."
        },
        {
          "name": "PoolName",
          "type": "char *",
          "description": "Name of the pool that creates the binding."
        },
        {
          "name": "ServerId",
          "type": "vtss_ipv4_t",
          "description": "IP address of the DHCP server to service the binding."
        },
        {
          "name": "VlanId",
          "type": "uint16_t",
          "description": "The VLAN where the binding works on."
        },
        {
          "name": "SubnetMask",
          "type": "vtss_ipv4_t",
          "description": "Subnet mask of the DHCP client."
        },
        {
          "name": "ClientIdentifierType",
          "type": "vtss_appl_dhcp_server_client_identifier_type_t",
          "description": "Type of client identifier. DHCP option 61. Specify client's unique identifier to be used when the pool is the type of host. none(0) means the client identifier type is not defined yet. fqdn(1) means the client identifier type is type of FQDN (Fully Qualified Domain Name). mac(2) means the client identifier type is type of MAC address."
        },
        {
          "name": "ClientIdentifierFqdn",
          "type": "char *",
          "description": "Client's Fully Qualified Domain Name. DHCP option 61."
        },
        {
          "name": "ClientIdentifierMac",
          "type": "vtss_mac_t",
          "description": "Client's MAC address. DHCP option 61."
        },
        {
          "name": "MacAddress",
          "type": "vtss_mac_t",
          "description": "MAC address of the DHCP client."
        },
        {
          "name": "Lease",
          "type": "char *",
          "description": "Lease time of the binding."
        },
        {
          "name": "TimeToExpire",
          "type": "char *",
          "description": "remaining time to expire."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_server_status_declined_ip_entry_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Ipv4Address",
          "type": "vtss_ipv4_t",
          "description": "IPv4 address declined by DHCP client."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_snooping_assigned_ip_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "IfIndex",
          "type": "vtss_ifindex_t",
          "description": "Logical interface number of the physical port of the DHCP client."
        },
        {
          "name": "IpAddress",
          "type": "vtss_ipv4_t",
          "description": "IP address assigned to DHCP client by DHCP server."
        },
        {
          "name": "Netmask",
          "type": "vtss_ipv4_t",
          "description": "Netmask assigned to DHCP client by DHCP server."
        },
        {
          "name": "DhcpServerIp",
          "type": "vtss_ipv4_t",
          "description": "IP address of the DHCP server that assigns the IP address and netmask."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_snooping_clear_port_statistics_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Clear",
          "type": "vtss_bool_t",
          "description": "clear statistics per physical port."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_snooping_param_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_bool_t",
          "description": "Indicates the DHCP snooping mode operation. Possible modes are - true: Enable DHCP snooping mode operation. When DHCP snooping mode operation is enabled, the DHCP request messages will be forwarded to trusted ports and only allow reply packets from trusted ports. false: Disable DHCP snooping mode operation."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dhcp_snooping_port_config_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "TrustMode",
          "type": "vtss_bool_t",
          "description": "Indicates the DHCP snooping port mode. Possible port modes are - true: Configures the port as trusted source of the DHCP messages. false: Configures the port as untrusted source of the DHCP messages."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dns_name_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Setting",
          "type": "vtss_appl_dns_config_type_t",
          "description": "Default domain name administrative type. A default domain name is used as the suffix of the given name in DNS lookup. none(0) means no default domain name is used and thus no domain name suffix is appended in DNS lookup. static(1) means the default domain name will be manually set. dhcpv4(2) means default domain name will be determined by DHCPv4 discovery. dhcpv4Vlan(3) means default domain name will be determined by DHCPv4 discovery on a specific IP VLAN interface. dhcpv6(4) means default domain name will be determined by DHCPv6 discovery. dhcpv6Vlan(5) means default domain name will be determined by DHCPv6 discovery on a specific IP VLAN interface."
        },
        {
          "name": "StaticName",
          "type": "char *",
          "description": "The static default domain name. It will be a reference only when DomainNameSetting is static(1)."
        },
        {
          "name": "DhcpIfIndex",
          "type": "vtss_ifindex_t",
          "description": "The ifIndex of specific VLAN interface that default domain name will be retrieved from DHCP. It will be a reference only when DomainNameSetting is either dhcpv4Vlan(3) or dhcpv6Vlan(5)."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dns_proxy_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AdminState",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the DNS-Proxy feature."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dns_server_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Setting",
          "type": "vtss_appl_dns_config_type_t",
          "description": "Per precedence DNS server administrative type. The DNS server setting will be used in DNS lookup. none(0) denotes no DNS server is used and thus domain name lookup always fails. static(1) denotes the DNS server address will be manually set, in either IPv4 or IPv6 address form. dhcpv4(2) denotes DNS server address will be determined by DHCPv4 discovery. dhcpv4Vlan(3) denotes DNS server address will be determined by DHCPv4 discovery on a specifc IP VLAN interface. dhcpv6(4) denotes DNS server address will be determined by DHCPv6 discovery. dhcpv6Vlan(5) denotes DNS server address will be determined by DHCPv6 discovery on a specifc IP VLAN interface."
        },
        {
          "name": "StaticIpAddress",
          "type": "vtss_ip_addr_t",
          "description": "The static DNS server address. It will be a reference only when Setting is static(1)"
        },
        {
          "name": "StaticIfIndex",
          "type": "vtss_ifindex_t",
          "description": "The ifIndex of specific VLAN interface that DNS server address will be retrieved from DHCP and where the server resides. It will be a reference only when Setting is either dhcpv4Vlan(3) or dhcpv6Vlan(5)."
        }
      ]
    },
    {
      "type-name": "vtss_appl_dns_server_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ConfiguredType",
          "type": "vtss_appl_dns_config_type_t",
          "description": "Per precedence DNS server configured type.none(0) denotes no DNS server is used and thus domain name lookup always fails. static(1) denotes the DNS server address will be manually set, in either IPv4 or IPv6 address form. dhcpv4(2) denotes DNS server address will be determined by DHCPv4 discovery. dhcpv4Vlan(3) denotes DNS server address will be determined by DHCPv4 discovery on a specifc IP VLAN interface. dhcpv6(4) denotes DNS server address will be determined by DHCPv6 discovery. dhcpv6Vlan(5) denotes DNS server address will be determined by DHCPv6 discovery on a specifc IP VLAN interface."
        },
        {
          "name": "ReferenceIfIndex",
          "type": "vtss_ifindex_t",
          "description": "The ifIndex of specific VLAN interface that DNS server address will be retrieved from DHCP and where the server resides. It will be a reference only when Setting is either dhcpv4Vlan(3) or dhcpv6Vlan(5)."
        },
        {
          "name": "IpAddress",
          "type": "vtss_ip_addr_t",
          "description": "The DNS server address that will be used for domain name lookup."
        }
      ]
    },
    {
      "type-name": "vtss_appl_eee_port_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "MaxEgressQueues",
          "type": "uint8_t",
          "description": "Maximum number of supported egress port queues."
        },
        {
          "name": "EEE",
          "type": "vtss_bool_t",
          "description": "Indicates whether interface supports EEE(IEEE 802.3az). true means EEE supported. false means not supported."
        }
      ]
    },
    {
      "type-name": "vtss_appl_eee_port_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "EnableEEE",
          "type": "vtss_bool_t",
          "description": "Enable EEE (IEEE 802.3az) feature at a interface. true is to advertize EEE(IEEE 802.3az) capabilities to partner device.  false is to disable it."
        }
      ]
    },
    {
      "type-name": "vtss_appl_eee_port_queue_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "EgressQueueType",
          "type": "vtss_appl_eee_queue_type_t",
          "description": "Egress port queue is urgent queue or normal queue."
        }
      ]
    },
    {
      "type-name": "vtss_appl_eee_port_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "PartnerEEE",
          "type": "vtss_appl_eee_status_t",
          "description": "Indicates whether link partner advertising EEE(IEEE 802.3az) capabilities."
        },
        {
          "name": "RxPowerSave",
          "type": "vtss_appl_eee_status_t",
          "description": "Indicates whether interfcae rx path currently in power save state."
        }
      ]
    },
    {
      "type-name": "vtss_appl_eps_command_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Command",
          "type": "vtss_appl_eps_command_t",
          "description": "protection group command"
        }
      ]
    },
    {
      "type-name": "vtss_appl_eps_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Directional",
          "type": "vtss_appl_eps_directional_t",
          "description": "Protection is uni or bi directional. Only for 1+1."
        },
        {
          "name": "ApsEnable",
          "type": "vtss_bool_t",
          "description": "APS can be enabled or disabled. Only for 1+1."
        },
        {
          "name": "Revertive",
          "type": "vtss_bool_t",
          "description": "Revertive operation can enabled or disabled."
        },
        {
          "name": "RestoreTimer",
          "type": "uint32_t",
          "description": "Wait to restore timer in seconds - max. 720 - min. 1."
        },
        {
          "name": "HoldOffTimer",
          "type": "uint32_t",
          "description": "Hold off timer in 100 ms - max. 100 - 0 means no hold off"
        }
      ]
    },
    {
      "type-name": "vtss_appl_eps_create_param_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Architecture",
          "type": "vtss_appl_eps_architecture_t",
          "description": "The protection architecture. Cannot be changed after creation."
        },
        {
          "name": "WorkingFlow",
          "type": "vtss_ifindex_t",
          "description": "The working flow. Cannot be changed after creation."
        },
        {
          "name": "ProtectingFlow",
          "type": "vtss_ifindex_t",
          "description": "The protecting flow. Cannot be changed after creation."
        }
      ]
    },
    {
      "type-name": "vtss_appl_eps_state_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ProtectionState",
          "type": "vtss_appl_eps_prot_state_t",
          "description": "Protection state according to to G.8031 Annex A"
        },
        {
          "name": "WorkingState",
          "type": "vtss_appl_eps_defect_state_t",
          "description": "Working flow defect state"
        },
        {
          "name": "ProtectingState",
          "type": "vtss_appl_eps_defect_state_t",
          "description": "Protecting flow defect state"
        },
        {
          "name": "TransmittedApsRequest",
          "type": "vtss_appl_eps_request_t",
          "description": "Transmitted APS request"
        },
        {
          "name": "TransmittedApsReSignal",
          "type": "uint32_t",
          "description": "Transmitted APS requested signal"
        },
        {
          "name": "TransmittedApsBrSignal",
          "type": "uint32_t",
          "description": "Transmitted APS bridged signal"
        },
        {
          "name": "ReceivedApsRequest",
          "type": "vtss_appl_eps_request_t",
          "description": "Received APS request"
        },
        {
          "name": "ReceivedApsReSignal",
          "type": "uint32_t",
          "description": "Received APS requested signal"
        },
        {
          "name": "ReceivedApsBrSignal",
          "type": "uint32_t",
          "description": "Received APS bridged signal"
        },
        {
          "name": "DfopPm",
          "type": "vtss_bool_t",
          "description": "FOP Protection type Mismatch - unexpected B bit"
        },
        {
          "name": "DfopCm",
          "type": "vtss_bool_t",
          "description": "FOP Configuration Mismatch - APS received on working"
        },
        {
          "name": "DfopNr",
          "type": "vtss_bool_t",
          "description": "FOP Not expected Request - receiving request is not the expected (transmitted)"
        },
        {
          "name": "DfopNoAps",
          "type": "vtss_bool_t",
          "description": "FOP No APS received"
        }
      ]
    },
    {
      "type-name": "vtss_appl_erps_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "RingType",
          "type": "vtss_appl_erps_ring_type_t",
          "description": "Type of ring. Can only be set once for a ring instance."
        },
        {
          "name": "Port0",
          "type": "vtss_ifindex_t",
          "description": "ifindex of ring protection port 0. Can only be set once for a ring instance."
        },
        {
          "name": "Port1",
          "type": "vtss_ifindex_t",
          "description": "ifindex of ring protection Port 1. For interconnected sub-rings this value must be zero. Can only be set once for a ring instance."
        },
        {
          "name": "InterconnectMajorRingGroupIndex",
          "type": "uint32_t",
          "description": "For sub-ring: zero = not interconnected; > zero = index of major ring group. For major ring: zero = not interconnected; > zero = is interconnected (i.e flag-like semantics). Can only be set once for a ring instance."
        },
        {
          "name": "VirtualChannel",
          "type": "vtss_bool_t",
          "description": "Whether to use a virtual channel. Can only be set once for a ring instance."
        },
        {
          "name": "Port0SignalFailMepIndex",
          "type": "uint32_t",
          "description": "Index of SignalFail MEP for Port 0. Zero if not set. To clear an ERPS group's MEP association, set this to zero; it affects all MEP indices."
        },
        {
          "name": "Port0ApsMepIndex",
          "type": "uint32_t",
          "description": "Index of APS MEP for Port 0. Zero if not set."
        },
        {
          "name": "Port1SignalFailMepIndex",
          "type": "uint32_t",
          "description": "Index of SignalFail MEP for Port 1. Zero if not set. Must be zero for interconnected sub-rings."
        },
        {
          "name": "Port1ApsMepIndex",
          "type": "uint32_t",
          "description": "Index of APS MEP for Port 1. Zero if not set. Must be zero for interconnected sub-rings with virtual channel."
        },
        {
          "name": "HoldOffTime",
          "type": "uint32_t",
          "description": "Hold off time in ms. Value is rounded down to 100ms precision. Valid range is 0-10000 ms"
        },
        {
          "name": "WaitToRestoreTime",
          "type": "uint32_t",
          "description": "Wait-to-Restore time in ms. Valid range is 60000-720000 ms (1-12 minutes)."
        },
        {
          "name": "GuardTime",
          "type": "uint32_t",
          "description": "Guard time in ms. Valid range is 10-2000 ms."
        },
        {
          "name": "RplMode",
          "type": "vtss_appl_erps_rpl_mode_t",
          "description": "Ring Protection Link mode."
        },
        {
          "name": "RplPort",
          "type": "vtss_appl_erps_port_t",
          "description": "RPL port. Only valid if the ERPS group is RPL owner or neighbour."
        },
        {
          "name": "Revertive",
          "type": "vtss_bool_t",
          "description": "Revertive (true) or Non-revertive (false) mode."
        },
        {
          "name": "Version",
          "type": "vtss_appl_erps_version_t",
          "description": "ERPS protocol version."
        },
        {
          "name": "TopologyChange",
          "type": "vtss_bool_t",
          "description": "Whether to enable Topology Change propagation; only valid for an interconnected node."
        },
        {
          "name": "ProtectedVlans",
          "type": "vtss_vid_list_t",
          "description": "VLANs which is protected by this ring instance"
        }
      ]
    },
    {
      "type-name": "vtss_appl_erps_control_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Command",
          "type": "vtss_appl_erps_control_cmd_t",
          "description": "Control command to execute. Always returns none when read."
        },
        {
          "name": "Port",
          "type": "vtss_appl_erps_port_t",
          "description": "Ring port affected by control command. Only relevant for administrative commands. Always returns port0 when read."
        }
      ]
    },
    {
      "type-name": "vtss_appl_erps_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Active",
          "type": "vtss_bool_t",
          "description": "Specifies whether ERPS group is currently active or not."
        },
        {
          "name": "ProtectionState",
          "type": "vtss_appl_erps_protection_state_t",
          "description": "Specifies current ERPS group protection state."
        },
        {
          "name": "RplBlocked",
          "type": "vtss_bool_t",
          "description": "Specifies whether the RPL is currently blocked or not."
        },
        {
          "name": "WtrRemaining",
          "type": "uint32_t",
          "description": "Specifies the remaining wait-time before restoring ring."
        },
        {
          "name": "AdminCmd",
          "type": "vtss_appl_erps_admin_cmd_t",
          "description": "Specifies the currently active administrative command."
        },
        {
          "name": "FopAlarm",
          "type": "vtss_bool_t",
          "description": "Specifies whether the FailureOfProtocol alarm is currently active or not."
        },
        {
          "name": "TxActive",
          "type": "vtss_bool_t",
          "description": "Specifies whether R-APS transmission is currently active."
        },
        {
          "name": "TxRequestOrState",
          "type": "vtss_appl_erps_request_state_t",
          "description": "Specifies the currently transmitted request/state. Only relevant when Tx is active."
        },
        {
          "name": "TxRplBlocked",
          "type": "vtss_bool_t",
          "description": "Specifies the currently transmitted RPL Blocked flag. Only relevant when Tx is active."
        },
        {
          "name": "TxDoNotFlush",
          "type": "vtss_bool_t",
          "description": "Specifies the currently transmitted Do Not Flush flag. Only relevant when Tx is active."
        },
        {
          "name": "BlockedPortReference",
          "type": "vtss_appl_erps_port_t",
          "description": "Specifies the currently transmitted Blocked Port Reference. Only relevant when Tx is active."
        },
        {
          "name": "Port0Blocked",
          "type": "vtss_bool_t",
          "description": "Specifies whether ring Port 0 is blocked or not."
        },
        {
          "name": "Port0State",
          "type": "vtss_appl_erps_port_state_t",
          "description": "Specifies the state of ring Port 0."
        },
        {
          "name": "Port0RxActive",
          "type": "vtss_bool_t",
          "description": "Specifies if ring Port0 receives R-APS."
        },
        {
          "name": "Port0RxRequestOrState",
          "type": "vtss_appl_erps_request_state_t",
          "description": "Specifies the most recently received request/state on ring Port 0. Only relevant when Rx is active."
        },
        {
          "name": "Port0RxRplBlocked",
          "type": "vtss_bool_t",
          "description": "Specifies the most recently received RPL Blocked flag on ring Port 0. Only relevant when Rx is active."
        },
        {
          "name": "Port0RxDoNotFlush",
          "type": "vtss_bool_t",
          "description": "Specifies the most recently received Do Not Flush flag on ring Port 0. Only relevant when Rx is active."
        },
        {
          "name": "Port0RxBlockedPortReference",
          "type": "vtss_appl_erps_port_t",
          "description": "Specifies the most recently received Blocked Port Reference on ring Port 0. Only relevant when Rx is active."
        },
        {
          "name": "Port0RxNodeId",
          "type": "unsigned char *",
          "description": "Specifies the most recently received node ID on ring Port 0. Only relevant when Rx is active."
        },
        {
          "name": "Port1Blocked",
          "type": "vtss_bool_t",
          "description": "Specifies whether ring Port 1 is blocked or not."
        },
        {
          "name": "Port1State",
          "type": "vtss_appl_erps_port_state_t",
          "description": "Specifies the state of ring Port 1."
        },
        {
          "name": "Port1RxActive",
          "type": "vtss_bool_t",
          "description": "Specifies if ring Port1 receives R-APS."
        },
        {
          "name": "Port1RxRequestOrState",
          "type": "vtss_appl_erps_request_state_t",
          "description": "Specifies the most recently received request/state on ring Port 1. Only relevant when Rx is active."
        },
        {
          "name": "Port1RxRplBlocked",
          "type": "vtss_bool_t",
          "description": "Specifies the most recently received RPL Blocked flag on ring Port 1. Only relevant when Rx is active."
        },
        {
          "name": "Port1RxDoNotFlush",
          "type": "vtss_bool_t",
          "description": "Specifies the most recently received Do Not Flush flag on ring Port 1. Only relevant when Rx is active."
        },
        {
          "name": "Port1RxBlockedPortReference",
          "type": "vtss_appl_erps_port_t",
          "description": "Specifies the most recently received Blocked Port Reference on ring Port 1. Only relevant when Rx is active."
        },
        {
          "name": "Port1RxNodeId",
          "type": "unsigned char *",
          "description": "Specifies the most recently received node ID on ring Port 1. Only relevant when Rx is active."
        }
      ]
    },
    {
      "type-name": "vtss_appl_eth_link_oam_port_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Capability",
          "type": "vtss_bool_t",
          "description": "Indicates whether interface is Ethernet Link OAM capable or not."
        }
      ]
    },
    {
      "type-name": "vtss_appl_eth_link_oam_port_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AdminState",
          "type": "vtss_appl_eth_link_oam_control_t",
          "description": "Set administrative state for this interface. Enabling AdminState indicates that the Ethernet Link OAM will attempt to operate over this interface."
        },
        {
          "name": "Mode",
          "type": "vtss_appl_eth_link_oam_mode_t",
          "description": "Configure the mode of OAM operation for this interface. OAM on Ethernet interfaces may be Active mode or Passive mode. These two modes differ in that active mode provides additional capabilities to initiate monitoring activities with the remote OAM peer entity, while passive mode generally waits for the peer to initiate OA actions with it.  As an example, an active OAM entity can put the remote OAM entity in a loopback state, where a passive OAM entity cannot."
        },
        {
          "name": "MibRetrievalSupport",
          "type": "vtss_bool_t",
          "description": "Controls the MIB retrieval support for this interface. Enabling MIB retrieval support indicates that the OAM entity supports polling of various Link OAM based MIB variables contents."
        },
        {
          "name": "RemoteLoopbackSupport",
          "type": "vtss_bool_t",
          "description": "Controls the remote loopback support for this interface. Enabling loopback support indicates that the OAM entity can initiate and respond to loopback commands"
        },
        {
          "name": "LinkMonitorSupport",
          "type": "vtss_bool_t",
          "description": "Controls the link monitor support for this interface. Enabling link monitor support indicates that the OAM entity can initiate event notification that permits the inclusion of diagnostic information."
        }
      ]
    },
    {
      "type-name": "vtss_appl_eth_link_oam_port_peer_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_appl_eth_link_oam_mode_t",
          "description": "Indicates the remote OAM mode."
        },
        {
          "name": "MacAddress",
          "type": "vtss_mac_t",
          "description": "Indicates the remote MAC address."
        },
        {
          "name": "MultiplexerState",
          "type": "vtss_appl_eth_link_oam_mux_state_t",
          "description": "Indicates the remote OAM multiplexer states. When in forwarding state, the Device is forwarding non-OAMPDUs to the lower sublayer. Incase of discarding, the device discards all the non-OAMPDUs."
        },
        {
          "name": "ParserState",
          "type": "vtss_appl_eth_link_oam_parser_state_t",
          "description": "Indicates the remote OAM parser states. In forwarding state, forwarding non-OAMPDUs to higher sublayer. When in loopback, looping back non-OAMPDUs to the lower sublayer. In discarding state, discarding non-OAMPDUs"
        },
        {
          "name": "PduRevision",
          "type": "uint16_t",
          "description": "Indicates the remote PDU revision. The value of this field shall start at zero and be incremented each time something in the Information TLV changes. Upon reception of an Information TLV from a peer, an OAM client may use this field to decide if it needs to be processed."
        },
        {
          "name": "Oui",
          "type": "char *",
          "description": "Indicates the remote vendor organizationally unique identifier."
        },
        {
          "name": "Mtu",
          "type": "uint16_t",
          "description": "Indicates the largest OAMPDU, in octets, supported by the remote device."
        },
        {
          "name": "UniDirSupport",
          "type": "vtss_bool_t",
          "description": "Indicates whether remote device supports uni directional capability."
        },
        {
          "name": "MibRetrievalSupport",
          "type": "vtss_bool_t",
          "description": "Indicates whether remote device supports MIB retrieval functionality."
        },
        {
          "name": "RemoteLoopbackSupport",
          "type": "vtss_bool_t",
          "description": "Indicates whether remote device supports remote loopback functionality."
        },
        {
          "name": "LinkMonitorSupport",
          "type": "vtss_bool_t",
          "description": "Indicates whether remote device supports link monitor functionality. "
        }
      ]
    },
    {
      "type-name": "vtss_appl_eth_link_oam_port_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "PduControl",
          "type": "vtss_appl_eth_link_oam_pdu_control_t",
          "description": "Indicates the local PDU control as specified in table 57.7(IEEE Std 802.3ah). Four type of PDU controls are supported. RX_INFO: No OAM PDU transmission allowed, only revceive OAM PDUs LF_INFO: Information OAM PDUs with Link Fault bit of Flags field and without Information TLVs can be transmitted INFO: Only Information OAM PDU's can be transmitted ANY: Transmission of Information OAM PDUs with appropriate bits of Flags field set."
        },
        {
          "name": "DiscoveryState",
          "type": "vtss_appl_eth_link_oam_discovery_state_t",
          "description": "Link OAM discovery state indicates the current state of the discovery process, as defined with 57.5(IEEE Std 802.3ah) state machine."
        },
        {
          "name": "MultiplexerState",
          "type": "vtss_appl_eth_link_oam_mux_state_t",
          "description": "Indicates the OAM MUX states as specified in table 57.7 (IEEE Std 802.3ah)When in forwarding state, the Device is forwarding non-OAMPDUs to the lower sublayer. Incase of discarding, the device discards all the non-OAMPDUs."
        },
        {
          "name": "ParserState",
          "type": "vtss_appl_eth_link_oam_parser_state_t",
          "description": "Indicates the OAM parser states as specified in table 57.7(IEEE Std 802.3ah). In forwarding state, device is forwarding non-OAMPDUs to higher sublayer. When in loopback, device is looping back non-OAMPDUs to the lower sublayer. In discarding state, device is discarding non-OAMPDUs"
        },
        {
          "name": "PduRevision",
          "type": "uint16_t",
          "description": "Indicates the current revision of the Information TLV. The value of this field shall start at zero and be incremented each time something in the Information TLV changes. Upon reception of an Information TLV from a peer, an OAM client may use this field to decide if it needs to be processed."
        },
        {
          "name": "Oui",
          "type": "char *",
          "description": "Vendor Organizationally Unique Identifier."
        },
        {
          "name": "Mtu",
          "type": "uint16_t",
          "description": "Indicates the largest OAMPDU, in octets, supported by the device. This value is compared to the remotes maximum PDU size and the smaller of the two is used."
        },
        {
          "name": "UniDirSupport",
          "type": "vtss_bool_t",
          "description": "Indicates whether local device supports uni directional capability."
        }
      ]
    },
    {
      "type-name": "vtss_appl_eth_link_oam_remote_loopback_test_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "LoopbackTest",
          "type": "vtss_bool_t",
          "description": "During loopback testing local device will send test PDUs to peer device, Peer device looped back test PDUs to local device without altering any field of the frames."
        }
      ]
    },
    {
      "type-name": "vtss_appl_evc_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "PolicerMax",
          "type": "uint32_t",
          "description": "Maximum number of EVC policers."
        },
        {
          "name": "EvcMax",
          "type": "uint32_t",
          "description": "Maximum number of EVC rules."
        },
        {
          "name": "EceMax",
          "type": "uint32_t",
          "description": "Maximum number of ECE rules."
        },
        {
          "name": "HasPortDeiColoring",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports NNI port DEI coloring."
        },
        {
          "name": "HasPortInnerTag",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports NNI port inner tag classification."
        },
        {
          "name": "HasPortAddrMode",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports port address mode (SMAC/SIP or DMAC/DIP)."
        },
        {
          "name": "HasPortKey",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports port key type."
        },
        {
          "name": "HasPolicerColorBlind",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports color-blind policing."
        },
        {
          "name": "HasEvcPolicer",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports EVC policer mapping."
        },
        {
          "name": "HasEvcUniVid",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports EVC UNI VLAN ID."
        },
        {
          "name": "HasEvcItAdd",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports EVC inner tag adding."
        },
        {
          "name": "HasEvcMpls",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports EVC MPLS."
        },
        {
          "name": "HasEvcETree",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports E-Tree."
        },
        {
          "name": "HasEceAdvLookup",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE advanced lookup."
        },
        {
          "name": "HasEceDestMacType",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE DMAC type matching."
        },
        {
          "name": "HasEceDestMac",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE DMAC matching."
        },
        {
          "name": "HasEceSrcMac",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE SMAC matching."
        },
        {
          "name": "HasEceInnerTag",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE inner tag matching."
        },
        {
          "name": "HasEceEtype",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE Ethernet Type frame matching."
        },
        {
          "name": "HasEceLlc",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE LLC frame matching."
        },
        {
          "name": "HasEceSnap",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE SNAP frame matching."
        },
        {
          "name": "HasEceL2cp",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE LLC frame matching and forwarding."
        },
        {
          "name": "HasEceIpv4Fragment",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE IPv4 fragment matching."
        },
        {
          "name": "HasEceIpProto",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE IP protocol matching."
        },
        {
          "name": "HasEceSrcIp",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE source IP address matching."
        },
        {
          "name": "HasEceDestIp",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE destination IP address matching."
        },
        {
          "name": "HasEceSrcPort",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE source UDP/TCP port matching."
        },
        {
          "name": "HasEceDestPort",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE destination UDP/TCP port matching."
        },
        {
          "name": "HasEceRuleType",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE rule type."
        },
        {
          "name": "HasEceTxLookup",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE egress lookup type."
        },
        {
          "name": "HasEceOtAddVid",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE outer tag VID."
        },
        {
          "name": "HasEcePcpMode",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE PCP mode."
        },
        {
          "name": "HasEcePcpDeiPreserve",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE PCP/DEI preservation."
        },
        {
          "name": "HasEceDeiMode",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE DEI mode."
        },
        {
          "name": "HasEceItAdd",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE inner tag adding."
        },
        {
          "name": "HasEcePolicer",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE policer mapping."
        },
        {
          "name": "HasEceCos",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE CoS mapping."
        },
        {
          "name": "HasEceDp",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports ECE Drop Precedence mapping."
        },
        {
          "name": "HasEvcPortHqos",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports (EVC, port) HQoS ID mapping."
        },
        {
          "name": "HasEvcPortCounters",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports (EVC, port) counters."
        }
      ]
    },
    {
      "type-name": "vtss_appl_evc_control_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ClearStatistics",
          "type": "vtss_bool_t",
          "description": "Clear statistics by setting to true.",
          "depends-on-capability": "HasEvcPortCounters@vtss_appl_evc_capabilities_t"
        }
      ]
    },
    {
      "type-name": "vtss_appl_evc_ece_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "NextId",
          "type": "uint32_t",
          "description": "The ID of the next ECE."
        },
        {
          "name": "AdvLookup",
          "type": "vtss_bool_t",
          "description": "Enable advanced ingress lookup.",
          "depends-on-capability": "HasEceAdvLookup@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "UniPortList",
          "type": "vtss_port_list_stackable_t",
          "description": "List of UNI ports for the ECE."
        },
        {
          "name": "SrcMac",
          "type": "vtss_mac_t",
          "description": "The source MAC address to match.",
          "depends-on-capability": "HasEceSrcMac@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "SrcMacMask",
          "type": "vtss_mac_t",
          "description": "The source MAC address mask.",
          "depends-on-capability": "HasEceSrcMac@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "DestMacType",
          "type": "vtss_appl_vcap_dmac_type_t",
          "description": "The destination MAC address type to match.",
          "depends-on-capability": "HasEceDestMacType@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "DestMac",
          "type": "vtss_mac_t",
          "description": "The destination MAC address to match.",
          "depends-on-capability": "HasEceDestMac@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "DestMacMask",
          "type": "vtss_mac_t",
          "description": "The destination MAC address mask.",
          "depends-on-capability": "HasEceDestMac@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "OtMatchType",
          "type": "vtss_appl_vcap_vlan_tag_type_t",
          "description": "The outer tag type to match."
        },
        {
          "name": "OtMatchVid",
          "type": "uint32_t",
          "description": "The outer tag VLAN ID range to match. The minimum value is encoded in the 16 least significant bits. The maximum value is encoded in the 16 most significant bits."
        },
        {
          "name": "OtMatchPcp",
          "type": "vtss_appl_vcap_vlan_pri_type_t",
          "description": "The outer tag PCP to match."
        },
        {
          "name": "OtMatchDei",
          "type": "vtss_vcap_bit_t",
          "description": "The outer tag DEI to match."
        },
        {
          "name": "ItMatchType",
          "type": "vtss_appl_vcap_vlan_tag_type_t",
          "description": "The inner tag type to match.",
          "depends-on-capability": "HasEceInnerTag@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "ItMatchVid",
          "type": "uint32_t",
          "description": "The inner tag VLAN ID range to match. The minimum value is encoded in the 16 least significant bits. The maximum value is encoded in the 16 most significant bits.",
          "depends-on-capability": "HasEceInnerTag@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "ItMatchPcp",
          "type": "vtss_appl_vcap_vlan_pri_type_t",
          "description": "The inner tag PCP to match.",
          "depends-on-capability": "HasEceInnerTag@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "ItMatchDei",
          "type": "vtss_vcap_bit_t",
          "description": "The inner tag DEI to match.",
          "depends-on-capability": "HasEceInnerTag@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "FrameType",
          "type": "vtss_appl_evc_ece_type_t",
          "description": "The ECE frame type."
        },
        {
          "name": "Etype",
          "type": "uint16_t",
          "description": "The Ethernet Type to match.",
          "depends-on-capability": "HasEceEtype@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "EtypeMask",
          "type": "uint16_t",
          "description": "The Ethernet Type mask.",
          "depends-on-capability": "HasEceEtype@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "EtypeData",
          "type": "uint16_t",
          "description": "The Ethernet Type data to match.",
          "depends-on-capability": "HasEceEtype@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "EtypeDataMask",
          "type": "uint16_t",
          "description": "The Ethernet Type data mask.",
          "depends-on-capability": "HasEceEtype@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "LlcDsap",
          "type": "uint8_t",
          "description": "The LLC DSAP field to match.",
          "depends-on-capability": "HasEceLlc@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "LlcDsapMask",
          "type": "uint8_t",
          "description": "The LLC DSAP mask.",
          "depends-on-capability": "HasEceLlc@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "LlcSsap",
          "type": "uint8_t",
          "description": "The LLC SSAP field to match.",
          "depends-on-capability": "HasEceLlc@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "LlcSsapMask",
          "type": "uint8_t",
          "description": "The LLC SSAP mask.",
          "depends-on-capability": "HasEceLlc@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "LlcControl",
          "type": "uint8_t",
          "description": "The LLC Control field to match.",
          "depends-on-capability": "HasEceLlc@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "LlcControlMask",
          "type": "uint8_t",
          "description": "The LLC Control mask.",
          "depends-on-capability": "HasEceLlc@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "LlcPid",
          "type": "uint16_t",
          "description": "The LLC Protocol ID to match.",
          "depends-on-capability": "HasEceLlc@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "LlcPidMask",
          "type": "uint16_t",
          "description": "The LLC Protocol ID mask.",
          "depends-on-capability": "HasEceLlc@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "SnapOui",
          "type": "uint32_t",
          "description": "The SNAP OUI to match.",
          "depends-on-capability": "HasEceSnap@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "SnapOuiMask",
          "type": "uint32_t",
          "description": "The SNAP OUI mask.",
          "depends-on-capability": "HasEceSnap@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "SnapPid",
          "type": "uint16_t",
          "description": "The SNAP Protocol ID to match.",
          "depends-on-capability": "HasEceSnap@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "SnapPidMask",
          "type": "uint16_t",
          "description": "The SNAP Protocol ID mask.",
          "depends-on-capability": "HasEceSnap@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "L2cpType",
          "type": "vtss_appl_evc_l2cp_t",
          "description": "The L2CP type to match. The value 'none' is not valid for SET operations.",
          "depends-on-capability": "HasEceL2cp@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "Ipv4Dscp",
          "type": "uint32_t",
          "description": "The IPv4 DSCP range to match. The minimum value is encoded in the 16 least significant bits. The maximum value is encoded in the 16 most significant bits."
        },
        {
          "name": "Ipv4Proto",
          "type": "uint8_t",
          "description": "The IPv4 protocol number to match.",
          "depends-on-capability": "HasEceIpProto@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "Ipv4ProtoMask",
          "type": "uint8_t",
          "description": "The IPv4 protocol mask.",
          "depends-on-capability": "HasEceIpProto@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "Ipv4Fragment",
          "type": "vtss_vcap_bit_t",
          "description": "The IPv4 fragment match.",
          "depends-on-capability": "HasEceIpv4Fragment@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "Ipv4SrcIp",
          "type": "vtss_ipv4_t",
          "description": "The IPv4 source address.",
          "depends-on-capability": "HasEceSrcIp@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "Ipv4SrcIpMask",
          "type": "vtss_ipv4_t",
          "description": "The IPv4 source address mask.",
          "depends-on-capability": "HasEceSrcIp@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "Ipv4DestIp",
          "type": "vtss_ipv4_t",
          "description": "The IPv4 destination address.",
          "depends-on-capability": "HasEceDestIp@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "Ipv4DestIpMask",
          "type": "vtss_ipv4_t",
          "description": "The IPv4 destination address mask.",
          "depends-on-capability": "HasEceDestIp@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "Ipv4SrcPort",
          "type": "uint32_t",
          "description": "The IPv4 UDP/TCP source port range to match. The minimum value is encoded in the 16 least significant bits. The maximum value is encoded in the 16 most significant bits.",
          "depends-on-capability": "HasEceSrcPort@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "Ipv4DestPort",
          "type": "uint32_t",
          "description": "The IPv4 UDP/TCP destination port range to match. The minimum value is encoded in the 16 least significant bits. The maximum value is encoded in the 16 most significant bits.",
          "depends-on-capability": "HasEceDestPort@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "Ipv6Dscp",
          "type": "uint32_t",
          "description": "The IPv6 DSCP range to match. The minimum value is encoded in the 16 least significant bits. The maximum value is encoded in the 16 most significant bits."
        },
        {
          "name": "Ipv6Proto",
          "type": "uint8_t",
          "description": "The IPv6 protocol number to match.",
          "depends-on-capability": "HasEceIpProto@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "Ipv6ProtoMask",
          "type": "uint8_t",
          "description": "The IPv6 protocol mask.",
          "depends-on-capability": "HasEceIpProto@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "Ipv6SrcIp",
          "type": "vtss_ipv6_t",
          "description": "The IPv6 source address.",
          "depends-on-capability": "HasEceSrcIp@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "Ipv6SrcIpMask",
          "type": "vtss_ipv6_t",
          "description": "The IPv6 source address mask.",
          "depends-on-capability": "HasEceSrcIp@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "Ipv6DestIp",
          "type": "vtss_ipv6_t",
          "description": "The IPv6 destination address.",
          "depends-on-capability": "HasEceDestIp@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "Ipv6DestIpMask",
          "type": "vtss_ipv6_t",
          "description": "The IPv6 destination address mask.",
          "depends-on-capability": "HasEceDestIp@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "Ipv6SrcPort",
          "type": "uint32_t",
          "description": "The IPv6 UDP/TCP source port range to match. The minimum value is encoded in the 16 least significant bits. The maximum value is encoded in the 16 most significant bits.",
          "depends-on-capability": "HasEceSrcPort@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "Ipv6DestPort",
          "type": "uint32_t",
          "description": "The IPv6 UDP/TCP destination port range to match. The minimum value is encoded in the 16 least significant bits. The maximum value is encoded in the 16 most significant bits.",
          "depends-on-capability": "HasEceDestPort@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "Direction",
          "type": "vtss_ece_dir_t",
          "description": "The ECE direction."
        },
        {
          "name": "RuleType",
          "type": "vtss_appl_ece_rule_t",
          "description": "The ECE rule type.",
          "depends-on-capability": "HasEceRuleType@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "TxLookup",
          "type": "vtss_appl_ece_tx_lookup_t",
          "description": "The egress lookup key type.",
          "depends-on-capability": "HasEceTxLookup@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "PopTag",
          "type": "vtss_ece_pop_tag_t",
          "description": "The number of tags popped."
        },
        {
          "name": "OtAddEnable",
          "type": "vtss_bool_t",
          "description": "Enable outer tag pushing for NNI-to-UNI direction."
        },
        {
          "name": "OtAddVid",
          "type": "uint16_t",
          "description": "The VLAN ID pushed for NNI-to-UNI direction.",
          "depends-on-capability": "HasEceOtAddVid@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "OtAddPcpMode",
          "type": "vtss_appl_ece_pcp_mode_t",
          "description": "The PCP mode for the outer tag pushed.",
          "depends-on-capability": "HasEcePcpMode@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "OtAddPcpDeiPreserve",
          "type": "vtss_bool_t",
          "description": "Enable PCP/DEI preservation for the outer tag pushed.",
          "depends-on-capability": "HasEcePcpDeiPreserve@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "OtAddPcp",
          "type": "uint32_t",
          "description": "The PCP value for the outer tag pushed."
        },
        {
          "name": "OtAddDeiMode",
          "type": "vtss_appl_ece_dei_mode_t",
          "description": "The DEI mode for the outer tag pushed.",
          "depends-on-capability": "HasEceDeiMode@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "OtAddDei",
          "type": "uint8_t",
          "description": "The DEI value for the outer tag pushed."
        },
        {
          "name": "ItAddType",
          "type": "vtss_appl_evc_inner_tag_type_t",
          "description": "The tag type for the inner tag pushed.",
          "depends-on-capability": "HasEceItAdd@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "ItAddVid",
          "type": "uint16_t",
          "description": "The VLAN ID for the inner tag pushed.",
          "depends-on-capability": "HasEceItAdd@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "ItAddPcpMode",
          "type": "vtss_appl_ece_pcp_mode_t",
          "description": "The PCP mode for the inner tag pushed.",
          "depends-on-capability": "HasEcePcpMode@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "ItAddPcpDeiPreserve",
          "type": "vtss_bool_t",
          "description": "Enable PCP/DEI preservation for the inner tag pushed.",
          "depends-on-capability": "HasEcePcpDeiPreserve@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "ItAddPcp",
          "type": "uint32_t",
          "description": "The PCP value for the inner tag pushed.",
          "depends-on-capability": "HasEceItAdd@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "ItAddDeiMode",
          "type": "vtss_appl_ece_dei_mode_t",
          "description": "The DEI mode for the inner tag pushed.",
          "depends-on-capability": "HasEceDeiMode@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "ItAddDei",
          "type": "uint8_t",
          "description": "The DEI value for the inner tag pushed.",
          "depends-on-capability": "HasEceItAdd@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "EvcId",
          "type": "uint16_t",
          "description": "The EVC ID for the ECE."
        },
        {
          "name": "PolicerOp",
          "type": "vtss_appl_evc_policer_op_t",
          "description": "The policer operator for the ECE.",
          "depends-on-capability": "HasEcePolicer@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "PolicerId",
          "type": "uint16_t",
          "description": "The policer ID for the ECE.",
          "depends-on-capability": "HasEcePolicer@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "PolicyNo",
          "type": "uint32_t",
          "description": "The ACL policy number for the ECE."
        },
        {
          "name": "CosEnable",
          "type": "vtss_bool_t",
          "description": "Enable CoS assignment.",
          "depends-on-capability": "HasEceCos@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "Cos",
          "type": "uint32_t",
          "description": "The CoS value for the ECE.",
          "depends-on-capability": "HasEceCos@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "DpEnable",
          "type": "vtss_bool_t",
          "description": "Enable Drop Precendence assignment.",
          "depends-on-capability": "HasEceDp@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "Dp",
          "type": "uint8_t",
          "description": "The Drop Precedence value for the ECE.",
          "depends-on-capability": "HasEceDp@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "L2cpMode",
          "type": "vtss_appl_evc_l2cp_mode_t",
          "description": "The L2CP forward mode for the ECE.",
          "depends-on-capability": "HasEceL2cp@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "L2cpDmac",
          "type": "vtss_appl_evc_l2cp_dmac_t",
          "description": "The DMAC used for L2CP tunneling for the ECE.",
          "depends-on-capability": "HasEceL2cp@vtss_appl_evc_capabilities_t"
        }
      ]
    },
    {
      "type-name": "vtss_appl_evc_mpls_tp_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "PseudoWires",
          "type": "vtss_appl_evc_mpls_tp_pw_conf_t",
          "description": "MPLS-TP pseudo wires attached to EVC."
        }
      ]
    },
    {
      "type-name": "vtss_appl_evc_policer_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enable",
          "type": "vtss_bool_t",
          "description": "Enable or disable policer."
        },
        {
          "name": "PolicerType",
          "type": "vtss_policer_type_t",
          "description": "The EVC policer type."
        },
        {
          "name": "PolicerMode",
          "type": "vtss_appl_evc_policer_mode_t",
          "description": "The EVC policer mode. Color-blind policing is only supported if HasPolicerColorBlind is true."
        },
        {
          "name": "LineRate",
          "type": "vtss_bool_t",
          "description": "Enable or disable line rate policing."
        },
        {
          "name": "Cir",
          "type": "uint32_t",
          "description": "Committed Information Rate in kbps."
        },
        {
          "name": "Cbs",
          "type": "uint32_t",
          "description": "Committed Burst Size in bytes."
        },
        {
          "name": "Eir",
          "type": "uint32_t",
          "description": "Excess Information Rate in kbps."
        },
        {
          "name": "Ebs",
          "type": "uint32_t",
          "description": "Excess Burst Size in bytes."
        }
      ]
    },
    {
      "type-name": "vtss_appl_evc_port_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Key",
          "type": "vtss_vcap_key_type_t",
          "description": "The key type for the basic ingress lookup.",
          "depends-on-capability": "HasPortKey@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "KeyAdv",
          "type": "vtss_vcap_key_type_t",
          "description": "The key type for the advanced ingress lookup.",
          "depends-on-capability": "HasPortKey@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "AddrMode",
          "type": "vtss_bool_t",
          "description": "If false, the basic ingress lookup is based on SMAC/SIP. If true, the basic ingress lookup is based on DMAC/DIP.",
          "depends-on-capability": "HasPortAddrMode@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "AddrModeAdv",
          "type": "vtss_bool_t",
          "description": "If false, the advanced ingress lookup is based on SMAC/SIP. If true, the advanced ingress lookup is based on DMAC/DIP.",
          "depends-on-capability": "HasPortKey@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "DeiColoring",
          "type": "vtss_bool_t",
          "description": "If false, DEI coloring for the NNI port is enabled. If true, DEI coloring for the NNI port is disabled.",
          "depends-on-capability": "HasPortDeiColoring@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "InnerTag",
          "type": "vtss_bool_t",
          "description": "If false, the NNI port uses outer tag classification. If true, the NNI port uses inner tag classification.",
          "depends-on-capability": "HasPortInnerTag@vtss_appl_evc_capabilities_t"
        }
      ]
    },
    {
      "type-name": "vtss_appl_evc_port_l2cp_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "L2cpMode",
          "type": "vtss_appl_evc_port_l2cp_mode_t",
          "description": "The forwarding mode for the L2CP."
        }
      ]
    },
    {
      "type-name": "vtss_appl_event_entry_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "EventDescription",
          "type": "char *",
          "description": "Event description"
        },
        {
          "name": "EventCommunity",
          "type": "char *",
          "description": "The community when sending trap"
        },
        {
          "name": "EventType",
          "type": "vtss_appl_event_t",
          "description": "RMON event stored type"
        }
      ]
    },
    {
      "type-name": "vtss_appl_firmware_control_globals_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "SwapFirmware",
          "type": "vtss_bool_t",
          "description": "Swap firmware between active (primary) and alternative (backup). true is to swap the firmware. false is to do nothing."
        }
      ]
    },
    {
      "type-name": "vtss_appl_firmware_control_image_upload_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "DoUpload",
          "type": "vtss_bool_t",
          "description": "Action to do upload image or not. true is to do the upload operation. false is to do nothing. The upload operation may need longer time to upload the image, so the SNMP timeout time needs to be modified accordingly."
        },
        {
          "name": "ImageType",
          "type": "vtss_appl_firmware_upload_image_type_t",
          "description": "Type of image to upload. bootloader(0) is to upload bootloader. firmware(1) is to upload application firmware."
        },
        {
          "name": "Url",
          "type": "char *",
          "description": "The location of image to upload. It is a specific character string that constitutes a reference to a resource. Syntax: <protocol>://[<username>[:<password>]@]<host>[:<port>][/<path>]/<file_name> For example, tftp://10.10.10.10/new_image_path/new_image.dat, http://username:password@10.10.10.10:80/new_image_path/new_image.dat. A valid file name is a text string drawn from alphabet (A-Za-z), digits (0-9), dot (.), hyphen (-), under score(_). The maximum length is 63 and hyphen must not be first character. The file name content that only contains '.' is not allowed."
        }
      ]
    },
    {
      "type-name": "vtss_appl_firmware_status_image_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Type",
          "type": "vtss_appl_firmware_status_image_type_t",
          "description": "Image type of the status. bootloader(0) is for boot loader. activeFirmware(1) is for active (primary) firmware. alternativeFirmware(2) is for alternative (backup) firmware."
        },
        {
          "name": "Name",
          "type": "char *",
          "description": "Image name."
        },
        {
          "name": "Version",
          "type": "char *",
          "description": "Image version."
        },
        {
          "name": "BuiltDate",
          "type": "char *",
          "description": "The built date when the image is built."
        },
        {
          "name": "CodeRevision",
          "type": "char *",
          "description": "The code revesion which the image is built."
        }
      ]
    },
    {
      "type-name": "vtss_appl_firmware_status_image_upload_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Status",
          "type": "vtss_appl_firmware_upload_status_t",
          "description": "The status indicates the status of current upload operation. It is updated automatically. Modifying this flag does not take any effect. none(0) means no upload operation. success(1) means upload operation is successful. inProgress(2) means current upload operation is in progress. errIvalidIp(3) means upload operation is failed due to invalid IP address. errTftpFailed(4) means upload operation is failed due to failed TFTP operation. errBusy(5) means upload operation is failed due to other upload in processing. errMemoryInsufficient(6) means upload operation is failed due to memory insufficient. errInvalidImage(7) means upload operation is failed due to invalid image. errWriteFlash(8) means upload operation is failed due to failed writing flash. errSameImageExisted(9) means upload operation is failed because the upload image is the same as the one in flash. errUnknownImage(10) means upload operation is failed because the type of upload image is unknown. errFlashImageNotFound(11) means upload operation is failed because the location in flash to upload the image is not found. errFlashEntryNotFound(12) means upload operation is failed because the corresponding entry in flash to upload the image is not found. errCrc(13) means upload operation is failed due to incorrect CRC in the upload image. errImageSize(14) means upload operation is failed due to invalid image size. errEraseFlash(15) means upload operation is failed due to failed erasing flash. errIncorrectImageVersion(16) means upload operation is failed due to incorrect version of the upload image. errDownloadUrl(17) means upload operation is failed due to fail to download image from URL. errInvalidUrl(18) means upload operation is failed due to invalid URL. "
        }
      ]
    },
    {
      "type-name": "vtss_appl_glbl_cfg_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "nasMode",
          "type": "vtss_bool_t",
          "description": "Set to TRUE to globally enabled or disabled NAS for the switch. If globally disabled, all physical interfaces are allowed forwarding of frames."
        },
        {
          "name": "reauthenticationMode",
          "type": "vtss_bool_t",
          "description": "If set to TRUE, successfully authenticated supplicants/clients are re-authenticated after the interval specified by the Reauthentication Period. Re-authentication for 802.1X-enabled interfaces can be used to detect if a new device is plugged into a switch port or if a supplicant is no longer attached. For MAC-based ports, re-authentication is only useful, if the RADIUS server configuration has changed. It does not involve communication between the switch and the client, and therefore does not imply that a client is still present on a port (see Aging Period)."
        },
        {
          "name": "reauthenticationPeriod",
          "type": "uint16_t",
          "description": "Sets the period in seconds, after which a connected client must be re-authenticated. This is only active if the ReauthenticationMode is set to TRUE."
        },
        {
          "name": "eapolTimeout",
          "type": "uint16_t",
          "description": "Determines the time for re-transmission of Request Identity EAPOL frames. This has no effect for MAC-based ports."
        },
        {
          "name": "agingEnable",
          "type": "vtss_bool_t",
          "description": "Set to TRUE to enable PSEC aging. See agingPeriod."
        },
        {
          "name": "agingPeriod",
          "type": "uint32_t",
          "description": "Specific the PSEC aging period in seconds. In the period the CPU starts listening to frames from the given MAC address, and if none arrives before period end, the entry will be removed. Only valid if agingEnable is set to TRUE"
        },
        {
          "name": "holdEnable",
          "type": "vtss_bool_t",
          "description": "Set to TRUE to enable PSEC failure hold. See authFailureHoldTime"
        },
        {
          "name": "authFailureHoldTime",
          "type": "uint32_t",
          "description": "Time in seconds to wait before attempting to re-authenticate if re-authentication failed for a given client."
        },
        {
          "name": "radiusAssignedQosMode",
          "type": "vtss_bool_t",
          "description": "Set to true to enable RADIUS assigned QoS."
        },
        {
          "name": "radiusAssignedVlanMode",
          "type": "vtss_bool_t",
          "description": "Set to true to enable RADIUS assigned VLAN."
        },
        {
          "name": "guestVlanMode",
          "type": "vtss_bool_t",
          "description": "Set to true to enable Guest VLAN Mode."
        },
        {
          "name": "guestVlanId",
          "type": "vtss_vid_t",
          "description": "Guest VLAN ID to get assigned to an interface moved to Guest VLAN mode."
        },
        {
          "name": "maxReauthrequestsCount",
          "type": "uint32_t",
          "description": "Maximum re-authentication request count."
        },
        {
          "name": "guestVlanAllowEapols",
          "type": "vtss_bool_t",
          "description": "Set to TRUE to allow an interface to move to Guest VLAN even when EAPOL packets has been received at an interface."
        }
      ]
    },
    {
      "type-name": "vtss_appl_gvrp_config_globals_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_bool_t",
          "description": "Global enabling of GVRP protocol. TRUE - enable GVRP, FALSE - disable GVRP."
        },
        {
          "name": "JoinTime",
          "type": "int32_t",
          "description": "Join-time protocol parameter. Range [1,20] centi seconds."
        },
        {
          "name": "LeaveTime",
          "type": "int32_t",
          "description": "Leave-time protocol parameter. Range [60,300] centi seconds."
        },
        {
          "name": "LeaveAllTime",
          "type": "int32_t",
          "description": "Leave-all-time protocol parameter. Range [1000,5000] centi seconds."
        },
        {
          "name": "MaxVlans",
          "type": "int32_t",
          "description": "Maximum of VLANs simultaniously supported by GVRP. Range [1,4094]. Setting this attribute will fail, if GVRP is globally enabled *and* the new value is less than what is actually in use."
        }
      ]
    },
    {
      "type-name": "vtss_appl_gvrp_config_interface_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_bool_t",
          "description": "Per-port mode of GVRP. TRUE - enable GVRP on the port, FALSE - disable GVRP on the port."
        }
      ]
    },
    {
      "type-name": "vtss_appl_hqos_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "DwrrCount",
          "type": "uint8_t",
          "description": "Number of queues using DWRR."
        },
        {
          "name": "ShaperEnable",
          "type": "vtss_bool_t",
          "description": "Enable or disable shaper."
        },
        {
          "name": "ShaperRate",
          "type": "uint32_t",
          "description": "Shaper rate in kbps."
        },
        {
          "name": "MinRate",
          "type": "uint32_t",
          "description": "Minimum guaranteed bandwidth in kbps."
        }
      ]
    },
    {
      "type-name": "vtss_appl_hqos_port_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "SchMode",
          "type": "vtss_hqos_sch_mode_t",
          "description": "HQoS scheduling mode."
        }
      ]
    },
    {
      "type-name": "vtss_appl_hqos_queue_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ShaperEnable",
          "type": "vtss_bool_t",
          "description": "Enable or disable shaper."
        },
        {
          "name": "ShaperRate",
          "type": "uint32_t",
          "description": "Shaper rate in kbps."
        },
        {
          "name": "SchedulerWeight",
          "type": "uint8_t",
          "description": "Scheduler weight, 1-100."
        }
      ]
    },
    {
      "type-name": "vtss_appl_https_param_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_bool_t",
          "description": "Global mode of HTTPS. true is to enable the functions of HTTPS and false is to disable it."
        },
        {
          "name": "RedirectToHttps",
          "type": "vtss_bool_t",
          "description": "The flag is to enable/disable the automatic redirection from HTTP to HTTPS. true is to enable the redirection and false is to disable the redirection."
        }
      ]
    },
    {
      "type-name": "vtss_appl_icfg_control_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ReloadDefault",
          "type": "vtss_appl_icfg_reload_default_t",
          "description": "Reset system to default. none(0) is to do nothing. default(1) is to reset the whole system to default. defaultKeepIp(2) is to reset system to default, but keep IP address of VLAN 1."
        },
        {
          "name": "DeleteFile",
          "type": "char *",
          "description": "Delete file in flash. The format is flash:filename. Where 'default-config' is read-only and not allowed to be deleted."
        }
      ]
    },
    {
      "type-name": "vtss_appl_icfg_copy_config_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Copy",
          "type": "vtss_bool_t",
          "description": "Action to do copy or not. true is to do the copy operation. false is to do nothing"
        },
        {
          "name": "SourceConfigType",
          "type": "vtss_appl_icfg_config_type_t",
          "description": "Source configuration type. none(0) means no configuration file. runningConfig(1) means running configuration. startupConfig(2) means startup configuration file in flash. configFile(3) is the configuration file specified in SourceConfigFile."
        },
        {
          "name": "SourceConfigFile",
          "type": "char *",
          "description": "Source configuration file. If the configuration file is in flash then the format is flash:'filename'. If the configuration file is from tftp then the format is tftp://server[:port]/path-to-file."
        },
        {
          "name": "DestinationConfigType",
          "type": "vtss_appl_icfg_config_type_t",
          "description": "Source configuration type. none(0) means no configuration file. runningConfig(1) means running configuration. startupConfig(2) means startup configuration file in flash. configFile(3) is the configuration file specified in DestinationConfigFile."
        },
        {
          "name": "DestinationConfigFile",
          "type": "char *",
          "description": "Destination configuration file. If the configuration file is in flash then the format is flash:filename. If the configuration file is from tftp then the format is tftp://server[:port]/filename_with_path. Where 'default-config' is read-only and not allowed to be deleted."
        },
        {
          "name": "Merge",
          "type": "vtss_bool_t",
          "description": "This flag works only if DestinationConfigType is runningConfig(1). true is to merge the source configuration into the current running configuration. false is to replace the current running configuration with the source configuration."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "hasIpv4HostCapabilities",
          "type": "vtss_bool_t",
          "description": "The device has IPv4 host capabilities for management."
        },
        {
          "name": "hasIpv6HostCapabilities",
          "type": "vtss_bool_t",
          "description": "The device has IPv6 host capabilities for management."
        },
        {
          "name": "hasIpv4UnicastRoutingCapabilities",
          "type": "vtss_bool_t",
          "description": "The device has IPv4 unicast routing capabilities."
        },
        {
          "name": "hasIpv4UnicastHwRoutingCapabilities",
          "type": "vtss_bool_t",
          "description": "The device has IPv4 unicast hardware accelerated routing capabilities."
        },
        {
          "name": "hasIpv6UnicastRoutingCapabilities",
          "type": "vtss_bool_t",
          "description": "The device has IPv6 unicast routing capabilities."
        },
        {
          "name": "hasIpv6UnicastHwRoutingCapabilities",
          "type": "vtss_bool_t",
          "description": "The device has IPv6 unicast hardware accelerated routing capabilities."
        },
        {
          "name": "maxNumberOfIpInterfaces",
          "type": "uint32_t",
          "description": "Maximum number of IP interfaces supported by the device."
        },
        {
          "name": "maxNumberOfStaticRoutes",
          "type": "uint32_t",
          "description": "Maximum number of static configured IP routes (shared by IPv4 and IPv6)."
        },
        {
          "name": "numberOfLpmHardwareEntries",
          "type": "uint32_t",
          "description": "Number of hardware LPM (longest prefix match) entries."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_global_actions_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ipv4NeighbourTableClear",
          "type": "vtss_bool_t",
          "description": "Flush the entries in IPv4 ARP cache except for the permanent ones."
        },
        {
          "name": "ipv6NeighbourTableClear",
          "type": "vtss_bool_t",
          "description": "Erase all the NDP (Neighbor Discovery Protocol) entries registered in IPv6 neighbour cache."
        },
        {
          "name": "ipv4SystemStatisticsClear",
          "type": "uint8_t",
          "description": "Clear the system-wide IPv4 traffic statistics."
        },
        {
          "name": "ipv6SystemStatisticsClear",
          "type": "uint8_t",
          "description": "Clear the system-wide IPv6 traffic statistics."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_global_param_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "enableRouting",
          "type": "vtss_bool_t",
          "description": "Enable routing."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_if_ipv4_info_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "broadcast",
          "type": "vtss_ipv4_t",
          "description": "Broadcast address."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_if_ipv6_info_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "tentative",
          "type": "vtss_bool_t",
          "description": "An address whose uniqueness on a link is being verified, prior to its assignment to an interface. A tentative address is not considered assigned to an interface in the usual sense."
        },
        {
          "name": "duplicated",
          "type": "vtss_bool_t",
          "description": "Indicates the address duplication is detected by Duplicate Address Detection (DAD).\nIf the address is a link-local address formed from an interface identifier based on the hardware address, which is supposed to be uniquely assigned (e.g., EUI-64 for an Ethernet interface), IP operation on the interface should be disabled."
        },
        {
          "name": "detached",
          "type": "vtss_bool_t",
          "description": "Indicates this address is ready to be detached from the link (IPv6 network)."
        },
        {
          "name": "nodad",
          "type": "vtss_bool_t",
          "description": "Indicates this address does not perform Duplicate Address Detection (DAD)."
        },
        {
          "name": "autoconf",
          "type": "vtss_bool_t",
          "description": "Indicates this address is capable of being retrieved by stateless address autoconfiguration."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_if_status_dhcp4c_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "state",
          "type": "vtss_appl_ip_dhcp4c_state_t",
          "description": "State of the DHCP client."
        },
        {
          "name": "serverIp",
          "type": "vtss_ipv4_t",
          "description": "IP address of the DHCP server that has provided the DHCP offer."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_if_status_link_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "osInterfaceIndex",
          "type": "uint32_t",
          "description": "Interface index used by the operating system."
        },
        {
          "name": "mtu",
          "type": "uint32_t",
          "description": "MTU for the interface."
        },
        {
          "name": "macAddress",
          "type": "vtss_mac_t",
          "description": "MAC-address of the interface."
        },
        {
          "name": "up",
          "type": "vtss_bool_t",
          "description": "Indicates if the interface is up."
        },
        {
          "name": "broadcast",
          "type": "vtss_bool_t",
          "description": "Indicates if the interface is capable of transmitting broadcast traffic."
        },
        {
          "name": "loopback",
          "type": "vtss_bool_t",
          "description": "Indicates if the interface is a loop-back interface."
        },
        {
          "name": "running",
          "type": "vtss_bool_t",
          "description": "Interface is running (according to the operating system)."
        },
        {
          "name": "noarp",
          "type": "vtss_bool_t",
          "description": "Indicates if the interface will answer to ARP requests."
        },
        {
          "name": "promisc",
          "type": "vtss_bool_t",
          "description": "Indicates if the interface is in promisc mode."
        },
        {
          "name": "multicast",
          "type": "vtss_bool_t",
          "description": "Indicates if the interface supports multicast."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_ipv4_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "active",
          "type": "vtss_bool_t",
          "description": "Enable IPv4.\nIPv4 can only be enabled if either the DHCP client is enabled, or a valid address has been configured."
        },
        {
          "name": "enableDhcpClient",
          "type": "vtss_bool_t",
          "description": "Enable IPv4 DHCP client.\nNote: the DHCP client can only be enabled if there is no conflict in the values of: ipv4Address, prefixSize, and dhcpClientFallbackTimeout."
        },
        {
          "name": "ipv4Address",
          "type": "vtss_ipv4_t",
          "description": "IPv4 address.\nNote: Multiple interfaces may not have overlapping networks."
        },
        {
          "name": "prefixSize",
          "type": "uint32_t",
          "description": "Prefix size of the network.\nNote: Multiple interfaces may not have overlapping networks."
        },
        {
          "name": "dhcpClientFallbackTimeout",
          "type": "uint32_t",
          "description": "DHCP client fallback timer.\nIf DHCP is disabled then this object has no effect. If DHCP is enabled and the fallback timeout value is different from zero, then this timer will stop the DHCP process and assign the ipv4Address to the interface instead."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_ipv4_neighbour_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "macAddress",
          "type": "vtss_mac_t",
          "description": "MAC address associated with the IP address"
        },
        {
          "name": "interface",
          "type": "vtss_ifindex_t",
          "description": "Interface the neighbour can be reached on."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_ipv6_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "active",
          "type": "vtss_bool_t",
          "description": "Enable the static configured IPv6 address.\nThe static configured IPv6 address can only be configured if a valid address has been written into 'ipv6Address' and 'prefixSize'."
        },
        {
          "name": "ipv6Address",
          "type": "vtss_ipv6_t",
          "description": "Static configured IPv6 address."
        },
        {
          "name": "prefixSize",
          "type": "uint32_t",
          "description": "Prefix size of the network."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_ipv6_neighbour_status_key_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ipAddress",
          "type": "vtss_ipv6_t",
          "description": "IP address."
        },
        {
          "name": "interfaceQuery",
          "type": "int32_t",
          "description": "If 'ipAddress' is a link-local address, then the interface index where the host can be reached must be specified here, otherwise set this to zero."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_ipv6_neighbour_status_value_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "macAddress",
          "type": "vtss_mac_t",
          "description": "MAC address associated with the IP address"
        },
        {
          "name": "interface",
          "type": "vtss_ifindex_t",
          "description": "Interface the neighbour can be reached on."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_ipv6_route_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "networkAddress",
          "type": "vtss_ipv6_t",
          "description": "Network address."
        },
        {
          "name": "networkPrefixSize",
          "type": "int32_t",
          "description": "Network prefix size."
        },
        {
          "name": "nextHop",
          "type": "vtss_ipv6_t",
          "description": "Next-hop address."
        },
        {
          "name": "nextHopInterface",
          "type": "vtss_ifindex_t",
          "description": "If the next-hop address is a link-local address, then the interface of the link-local address must be specified here. Otherwise this value is not used."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_route_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "derivedNextHopInterface",
          "type": "vtss_ifindex_t",
          "description": "Next-hop interface."
        },
        {
          "name": "flagUp",
          "type": "vtss_bool_t",
          "description": "The route is up."
        },
        {
          "name": "flagHost",
          "type": "vtss_bool_t",
          "description": "The route is forwarding to this host (loop-back)."
        },
        {
          "name": "flagGateway",
          "type": "vtss_bool_t",
          "description": "The route is using a gateway as next-hop, of not set then an interface is used."
        },
        {
          "name": "ownerConf",
          "type": "vtss_bool_t",
          "description": "The route is installed as part of the user configuration."
        },
        {
          "name": "ownerDhcp",
          "type": "vtss_bool_t",
          "description": "The route is installed by a DHCP client."
        },
        {
          "name": "ownerDynamic",
          "type": "vtss_bool_t",
          "description": "The route is installed by a routing protocol."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_source_guard_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "StaticIpMask",
          "type": "vtss_bool_t",
          "description": "If FALSE, the IP mask of static binding table is only allowed to be configured as 255.255.255.255."
        },
        {
          "name": "StaticMacAddress",
          "type": "vtss_bool_t",
          "description": "If TRUE, the MAC address of static binding table is configurable."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_source_guard_control_translate_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "TranslateDynamicToStatic",
          "type": "vtss_bool_t",
          "description": "Translate all the current dynamic entries to static ones. Set it as TRUE to do the action."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_source_guard_dynamic_index_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "IfIndex",
          "type": "vtss_ifindex_t",
          "description": "Logical interface number of the physical port."
        },
        {
          "name": "VlanId",
          "type": "vtss_vid_t",
          "description": "The VLAN ID."
        },
        {
          "name": "IpAddress",
          "type": "vtss_ipv4_t",
          "description": "Learned IP address."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_source_guard_dynamic_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "MacAddress",
          "type": "vtss_mac_t",
          "description": "Learned MAC Address."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_source_guard_global_config_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_bool_t",
          "description": "Global mode of IP source guard. TRUE is to enable IP source guard and FALSE is to disable it."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_source_guard_port_config_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_bool_t",
          "description": "Port mode of IP source guard. TURE is to enable IP source guard on the port and FALSE is to disable it on the port."
        },
        {
          "name": "DynamicEntryCount",
          "type": "uint32_t",
          "description": "The dynamic entry count is the max number of dynamic entries allowed on the port."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_source_guard_static_config_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "MacAddress",
          "type": "vtss_mac_t",
          "description": "Assigned MAC Address.",
          "depends-on-capability": "StaticMacAddress@vtss_appl_ip_source_guard_capabilities_t"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ip_source_guard_static_index_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "IfIndex",
          "type": "vtss_ifindex_t",
          "description": "Logical interface number of the physical port."
        },
        {
          "name": "VlanId",
          "type": "vtss_vid_t",
          "description": "The VLAN ID."
        },
        {
          "name": "IpAddress",
          "type": "vtss_ipv4_t",
          "description": "Assigned IP address."
        },
        {
          "name": "IpMask",
          "type": "vtss_ipv4_t",
          "description": "Assigned network mask."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_mvr_global_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AdminState",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the IPMC MVR global functionality."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_mvr_grp_address_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "MemberPorts",
          "type": "vtss_port_list_stackable_t",
          "description": "It is used to denote the memberships of the registered multicast group address from MVR."
        },
        {
          "name": "HardwareSwitch",
          "type": "vtss_bool_t",
          "description": "It is used to denote whether the multicast traffic destined to the registered group address could be forwarding by switch hardware or not."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_mvr_grp_srclist_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "GroupFilterMode",
          "type": "vtss_appl_ipmc_sfm_mode_t",
          "description": "It is used to denote the source filtering mode of the specific registered multicast group address from MVR."
        },
        {
          "name": "FilterTimer",
          "type": "uint32_t",
          "description": "It is used to count down the timer for the specific multicast group's filtering mode transition."
        },
        {
          "name": "SourceType",
          "type": "vtss_appl_mvr_action_t",
          "description": "It is used to denote the filtering type of the specific source address in multicasting to the registered group address."
        },
        {
          "name": "SourceTimer",
          "type": "uint32_t",
          "description": "It is used to count down the timer for purging the specific source address from the registered multicast group's source list."
        },
        {
          "name": "HardwareFilter",
          "type": "vtss_bool_t",
          "description": "It is used to denote whether the traffic destined to the multicast group address from the specific source address could be forwarding by switch hardware or not."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_mvr_interface_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Name",
          "type": "char *",
          "description": "MVR Name is an optional attribute to indicate the name of the specific MVR VLAN that user could easily associate the MVR VLAN purpose with its name."
        },
        {
          "name": "IgmpQuerierAddress",
          "type": "vtss_ipv4_t",
          "description": "The static IPv4 source address of the specific MVR interface for seding IGMP Query message with respect to IGMP Querier election."
        },
        {
          "name": "Mode",
          "type": "vtss_appl_ipmc_mvr_intf_mode_t",
          "description": "In Dynamic mode, MVR allows dynamic MVR membership reports on source ports. In Compatible mode, MVR membership reports are forbidden on source ports."
        },
        {
          "name": "Tagging",
          "type": "vtss_appl_ipmc_intf_vtag_t",
          "description": "Specify whether the traversed IGMP/MLD control frames will be sent as Untagged or Tagged with MVR VID."
        },
        {
          "name": "Priority",
          "type": "uint8_t",
          "description": "Specify how the traversed IGMP/MLD control frames will be sent in prioritized manner in VLAN tag."
        },
        {
          "name": "LastListenerQueryInt",
          "type": "uint32_t",
          "description": "This setting Last Listener/Member Query Interval is used to control IGMP protocol stack for fast aging mechanism. It defines the maximum time to wait for IGMP/MLD report memberships on a port before removing the port from multicast group membership. The value is in units of tenths of a seconds. The range is from 0 to 31744."
        },
        {
          "name": "ChannelProfile",
          "type": "char *",
          "description": "The profile used for the channel filtering condition in the specific MVR VLAN. Profile selected for designated interface channel is not allowed to have overlapped permit group address by comparing with other MVR VLAN interface's channel."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_mvr_intf_ipv4_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "QuerierStatus",
          "type": "vtss_appl_ipmc_querier_states_t",
          "description": "The IGMP Querier status of the specific VLAN interface."
        },
        {
          "name": "ActiveQuerierAddress",
          "type": "vtss_ipv4_t",
          "description": "The active IGMP Querier address on the specific VLAN interface."
        },
        {
          "name": "QuerierUptime",
          "type": "uint32_t",
          "description": "It presents the in operation timer for the specific interface act as a IGMP Querier."
        },
        {
          "name": "QueryInterval",
          "type": "uint32_t",
          "description": "This setting is used to control IGMP protocol stack as stated in RFC-3376 8.2."
        },
        {
          "name": "StartupQueryCount",
          "type": "uint32_t",
          "description": "This setting is used to control IGMP protocol stack as stated in RFC-3376 8.7."
        },
        {
          "name": "QuerierExpiryTime",
          "type": "uint32_t",
          "description": "This setting is used to control IGMP protocol stack as stated in RFC-3376 8.5."
        },
        {
          "name": "CounterTxQuery",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific IGMP interface for transmitting IGMP Query control frames."
        },
        {
          "name": "CounterTxSpecificQuery",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific IGMP interface for transmitting IGMP Specific Query control frames."
        },
        {
          "name": "CounterRxQuery",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific IGMP interface for receiving IGMP Query control frames."
        },
        {
          "name": "CounterRxV1Join",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific IGMP interface for receiving IGMPv1 Join control frames."
        },
        {
          "name": "CounterRxV2Join",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific IGMP interface for receiving IGMPv2 Join control frames."
        },
        {
          "name": "CounterRxV2Leave",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific IGMP interface for receiving IGMPv2 Leave control frames."
        },
        {
          "name": "CounterRxV3Join",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific IGMP interface for receiving IGMPv3 Join control frames."
        },
        {
          "name": "CounterRxErrors",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific IGMP interface for receiving invalid IGMP control frames."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_mvr_intf_ipv6_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "QuerierStatus",
          "type": "vtss_appl_ipmc_querier_states_t",
          "description": "The MLD Querier status of the specific VLAN interface."
        },
        {
          "name": "ActiveQuerierAddress",
          "type": "vtss_ipv6_t",
          "description": "The active MLD Querier address on the specific VLAN interface."
        },
        {
          "name": "QuerierUptime",
          "type": "uint32_t",
          "description": "It presents the in operation timer for the specific interface act as a MLD Querier."
        },
        {
          "name": "QueryInterval",
          "type": "uint32_t",
          "description": "This setting is used to control MLD protocol stack as stated in RFC-3810 9.2."
        },
        {
          "name": "StartupQueryCount",
          "type": "uint32_t",
          "description": "This setting is used to control MLD protocol stack as stated in RFC-3810 9.7."
        },
        {
          "name": "QuerierExpiryTime",
          "type": "uint32_t",
          "description": "This setting is used to control MLD protocol stack as stated in RFC-3810 9.5."
        },
        {
          "name": "CounterTxQuery",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific MLD interface for transmitting MLD Query control frames."
        },
        {
          "name": "CounterTxSpecificQuery",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific MLD interface for transmitting MLD Specific Query control frames."
        },
        {
          "name": "CounterRxQuery",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific MLD interface for receiving MLD Query control frames."
        },
        {
          "name": "CounterRxV1Report",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific MLD interface for receiving MLDv1 Report control frames."
        },
        {
          "name": "CounterRxV1Done",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific MLD interface for receiving MLDv1 Done control frames."
        },
        {
          "name": "CounterRxV2Report",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific MLD interface for receiving MLDv2 Report control frames."
        },
        {
          "name": "CounterRxErrors",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific MLD interface for receiving invalid MLD control frames."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_mvr_intf_port_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Role",
          "type": "vtss_appl_ipmc_mvr_port_role_t",
          "description": "Configure a MVR port of the designated MVR VLAN as one of the following roles: Inactive, Source or Receiver. An inactive port does not participate MVR operations. Configure uplink ports that receive and send multicast data as a source port, and multicast subscribers cannot be directly connected to source ports. Configure a port as a receiver port if it is a subscriber port and should only receive multicast data, and a receiver port does not receive data unless it becomes a member of the multicast group by issuing IGMP/MLD control messages. Be Caution: MVR source ports are not recommended to be overlapped with management VLAN ports."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_mvr_port_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "DoImmediateLeave",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the MVR immediate leave functionality."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_profile_global_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AdminState",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the IPMC Profile global functionality."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_profile_ipv4_range_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "StartAddress",
          "type": "vtss_ipv4_t",
          "description": "The starting IPv4 address of the range that IPMC Profile performs checking."
        },
        {
          "name": "EndAddress",
          "type": "vtss_ipv4_t",
          "description": "The ending IPv4 address of the range that IPMC Profile performs checking."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_profile_ipv6_range_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "StartAddress",
          "type": "vtss_ipv6_t",
          "description": "The starting IPv6 address of the range that IPMC Profile performs checking."
        },
        {
          "name": "EndAddress",
          "type": "vtss_ipv6_t",
          "description": "The ending IPv6 address of the range that IPMC Profile performs checking."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_profile_precedence_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "RuleRange",
          "type": "char *",
          "description": "The name of the IPMC profile address range used as a rule."
        },
        {
          "name": "NextRuleRange",
          "type": "char *",
          "description": "The next rule's address range name that this IPMC Profile management entry performs checking."
        },
        {
          "name": "RuleAction",
          "type": "vtss_appl_ipmc_action_t",
          "description": "The filtering action while this IPMC Profile management entry performs checking. deny(0) will prohibit the IPMC control frames destined to protocol stack. permit(1) will pass the IPMC control frames destined to protocol stack."
        },
        {
          "name": "RuleLog",
          "type": "vtss_bool_t",
          "description": "Enable the IPMC Profile will log matched group address that is filtered by this rule with the corresponding action (deny or permit). Disable the IPMC Profile will not log any action for any group address whether or not to be filtered by this rule."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_profile_rule_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "NextRuleRange",
          "type": "char *",
          "description": "The next rule's address range name that this IPMC Profile management entry performs checking."
        },
        {
          "name": "RuleAction",
          "type": "vtss_appl_ipmc_action_t",
          "description": "The filtering action while this IPMC Profile management entry performs checking. deny(0) will prohibit the IPMC control frames destined to protocol stack. permit(1) will pass the IPMC control frames destined to protocol stack."
        },
        {
          "name": "RuleLog",
          "type": "vtss_bool_t",
          "description": "Enable the IPMC Profile will log matched group address that is filtered by this rule with the corresponding action (deny or permit). Disable the IPMC Profile will not log any action for any group address whether or not to be filtered by this rule."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_snp4_port_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AsRouterPort",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the IGMP static router port functionality."
        },
        {
          "name": "DoFastLeave",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the IGMP fast leave functionality."
        },
        {
          "name": "ThrottlingNumber",
          "type": "int32_t",
          "description": "The maximum number of groups to be registered on the specific port."
        },
        {
          "name": "FilteringProfile",
          "type": "char *",
          "description": "The profile used for IGMP filtering per-port basis."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_snp6_port_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AsRouterPort",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the MLD static router port functionality."
        },
        {
          "name": "DoFastLeave",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the MLD fast leave functionality."
        },
        {
          "name": "ThrottlingNumber",
          "type": "int32_t",
          "description": "The maximum number of groups to be registered on the specific port."
        },
        {
          "name": "FilteringProfile",
          "type": "char *",
          "description": "The profile used for MLD filtering per-port basis."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_snp_grp4_address_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "MemberPorts",
          "type": "vtss_port_list_stackable_t",
          "description": "It is used to denote the memberships of the registered multicast group address from IGMP snooping."
        },
        {
          "name": "HardwareSwitch",
          "type": "vtss_bool_t",
          "description": "It is used to denote whether the multicast traffic destined to the registered group address could be forwarding by switch hardware or not."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_snp_grp4_srclist_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "GroupFilterMode",
          "type": "vtss_appl_ipmc_sfm4_mode_t",
          "description": "It is used to denote the source filtering mode of the specific registered multicast group address from IGMP snooping."
        },
        {
          "name": "FilterTimer",
          "type": "uint32_t",
          "description": "It is used to count down the timer for the specific multicast group's filtering mode transition."
        },
        {
          "name": "SourceType",
          "type": "vtss_appl_ipmc_action4_t",
          "description": "It is used to denote the filtering type of the specific source address in multicasting to the registered group address."
        },
        {
          "name": "SourceTimer",
          "type": "uint32_t",
          "description": "It is used to count down the timer for purging the specific source address from the registered multicast group's source list."
        },
        {
          "name": "HardwareFilter",
          "type": "vtss_bool_t",
          "description": "It is used to denote whether the traffic destined to the multicast group address from the specific source address could be forwarding by switch hardware or not."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_snp_grp6_address_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "MemberPorts",
          "type": "vtss_port_list_stackable_t",
          "description": "It is used to denote the memberships of the registered multicast group address from MLD snooping."
        },
        {
          "name": "HardwareSwitch",
          "type": "vtss_bool_t",
          "description": "It is used to denote whether the multicast traffic destined to the registered group address could be forwarding by switch hardware or not."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_snp_grp6_srclist_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "GroupFilterMode",
          "type": "vtss_appl_ipmc_sfm6_mode_t",
          "description": "It is used to denote the source filtering mode of the specific registered multicast group address from MLD snooping."
        },
        {
          "name": "FilterTimer",
          "type": "uint32_t",
          "description": "It is used to count down the timer for the specific multicast group's filtering mode transition."
        },
        {
          "name": "SourceType",
          "type": "vtss_appl_ipmc_action6_t",
          "description": "It is used to denote the filtering type of the specific source address in multicasting to the registered group address."
        },
        {
          "name": "SourceTimer",
          "type": "uint32_t",
          "description": "It is used to count down the timer for purging the specific source address from the registered multicast group's source list."
        },
        {
          "name": "HardwareFilter",
          "type": "vtss_bool_t",
          "description": "It is used to denote whether the traffic destined to the multicast group address from the specific source address could be forwarding by switch hardware or not."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_snp_ipv4_global_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AdminState",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the IGMP snooping global functionality."
        },
        {
          "name": "UnregisteredFlooding",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the control for flooding unregistered IPv4 multicast traffic."
        },
        {
          "name": "SsmRangeAddress",
          "type": "vtss_ipv4_t",
          "description": "The address prefix value defined for IGMP SSM service model."
        },
        {
          "name": "SsmRangeMask",
          "type": "uint32_t",
          "description": "The address prefix length defined for IGMP SSM service model."
        },
        {
          "name": "Proxy",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the IGMP proxy functionality."
        },
        {
          "name": "LeaveProxy",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the IGMP leave-proxy functionality."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_snp_ipv4_interface_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AdminState",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the IGMP snooping per-VLAN functionality."
        },
        {
          "name": "QuerierElection",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the capability to run IGMP Querier election per-VLAN basis."
        },
        {
          "name": "QuerierAddress",
          "type": "vtss_ipv4_t",
          "description": "The static IPv4 source address of the specific IGMP interface for seding IGMP Query message with respect to IGMP Querier election."
        },
        {
          "name": "Compatibility",
          "type": "vtss_appl_ipmc_compati4_t",
          "description": "The compatibility control for IGMP snooping to run the corresponding protocol version."
        },
        {
          "name": "Priority",
          "type": "uint8_t",
          "description": "This setting is used for prioritizing the IGMP control frames to be sent for IGMP snooping."
        },
        {
          "name": "Rv",
          "type": "uint32_t",
          "description": "This setting Robustness Variable is used to control IGMP protocol stack as stated in RFC-3376 8.1."
        },
        {
          "name": "Qi",
          "type": "uint32_t",
          "description": "This setting Query Interval is used to control IGMP protocol stack as stated in RFC-3376 8.2."
        },
        {
          "name": "Qri",
          "type": "uint32_t",
          "description": "This setting Query Response Intervalis used to control IGMP protocol stack as stated in RFC-3376 8.3."
        },
        {
          "name": "Lmqi",
          "type": "uint32_t",
          "description": "This setting Last Member Query Interval is used to control IGMP protocol stack as stated in RFC-3376 8.8."
        },
        {
          "name": "Uri",
          "type": "uint32_t",
          "description": "This setting Unsolicited Report Interval is used to control IGMP protocol stack as stated in RFC-3376 8.11."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_snp_ipv4_intf_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "QuerierStatus",
          "type": "vtss_appl_ipmc_qry4_states_t",
          "description": "The IGMP Querier status of the specific VLAN interface."
        },
        {
          "name": "ActiveQuerierAddress",
          "type": "vtss_ipv4_t",
          "description": "The active IGMP Querier address on the specific VLAN interface."
        },
        {
          "name": "QuerierUptime",
          "type": "uint32_t",
          "description": "It presents the in operation timer for the specific interface act as a IGMP Querier."
        },
        {
          "name": "QueryInterval",
          "type": "uint32_t",
          "description": "This setting is used to control IGMP protocol stack as stated in RFC-3376 8.2."
        },
        {
          "name": "StartupQueryCount",
          "type": "uint32_t",
          "description": "This setting is used to control IGMP protocol stack as stated in RFC-3376 8.7."
        },
        {
          "name": "QuerierExpiryTime",
          "type": "uint32_t",
          "description": "This setting is used to control IGMP protocol stack as stated in RFC-3376 8.5."
        },
        {
          "name": "QuerierVersion",
          "type": "uint8_t",
          "description": "It presents the current IGMP version that the IGMP interface should behave in running IGMP protocol as a router."
        },
        {
          "name": "QuerierPresentTimeout",
          "type": "uint32_t",
          "description": "This setting is used to control IGMP protocol stack as stated in RFC-3376 8.12."
        },
        {
          "name": "HostVersion",
          "type": "uint8_t",
          "description": "It presents the current IGMP version that the IGMP interface should behave in running IGMP protocol as a host."
        },
        {
          "name": "HostPresentTimeout",
          "type": "uint32_t",
          "description": "This setting is used to control IGMP protocol stack as stated in RFC-3376 8.13."
        },
        {
          "name": "CounterTxQuery",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific IGMP interface for transmitting IGMP Query control frames."
        },
        {
          "name": "CounterTxSpecificQuery",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific IGMP interface for transmitting IGMP Specific Query control frames."
        },
        {
          "name": "CounterRxQuery",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific IGMP interface for receiving IGMP Query control frames."
        },
        {
          "name": "CounterRxV1Join",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific IGMP interface for receiving IGMPv1 Join control frames."
        },
        {
          "name": "CounterRxV2Join",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific IGMP interface for receiving IGMPv2 Join control frames."
        },
        {
          "name": "CounterRxV2Leave",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific IGMP interface for receiving IGMPv2 Leave control frames."
        },
        {
          "name": "CounterRxV3Join",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific IGMP interface for receiving IGMPv3 Join control frames."
        },
        {
          "name": "CounterRxErrors",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific IGMP interface for receiving invalid IGMP control frames."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_snp_ipv6_global_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AdminState",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the MLD snooping global functionality."
        },
        {
          "name": "UnregisteredFlooding",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the control for flooding unregistered IPv6 multicast traffic."
        },
        {
          "name": "SsmRangeAddress",
          "type": "vtss_ipv6_t",
          "description": "The address prefix value defined for MLD SSM service model."
        },
        {
          "name": "SsmRangeMask",
          "type": "uint32_t",
          "description": "The address prefix length defined for MLD SSM service model."
        },
        {
          "name": "Proxy",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the MLD proxy functionality."
        },
        {
          "name": "LeaveProxy",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the MLD leave-proxy functionality."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ipmc_snp_ipv6_intf_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "QuerierStatus",
          "type": "vtss_appl_ipmc_qry6_states_t",
          "description": "The MLD Querier status of the specific VLAN interface."
        },
        {
          "name": "ActiveQuerierAddress",
          "type": "vtss_ipv6_t",
          "description": "The active MLD Querier address on the specific VLAN interface."
        },
        {
          "name": "QuerierUptime",
          "type": "uint32_t",
          "description": "It presents the in operation timer for the specific interface act as a MLD Querier."
        },
        {
          "name": "QueryInterval",
          "type": "uint32_t",
          "description": "This setting is used to control MLD protocol stack as stated in RFC-3810 9.2."
        },
        {
          "name": "StartupQueryCount",
          "type": "uint32_t",
          "description": "This setting is used to control MLD protocol stack as stated in RFC-3810 9.7."
        },
        {
          "name": "QuerierExpiryTime",
          "type": "uint32_t",
          "description": "This setting is used to control MLD protocol stack as stated in RFC-3810 9.5."
        },
        {
          "name": "QuerierVersion",
          "type": "uint8_t",
          "description": "It presents the current MLD version that the MLD interface should behave in running MLD protocol as a router."
        },
        {
          "name": "QuerierPresentTimeout",
          "type": "uint32_t",
          "description": "This setting is used to control MLD protocol stack as stated in RFC-3810 9.12."
        },
        {
          "name": "HostVersion",
          "type": "uint8_t",
          "description": "It presents the current MLD version that the MLD interface should behave in running MLD protocol as a host."
        },
        {
          "name": "HostPresentTimeout",
          "type": "uint32_t",
          "description": "This setting is used to control MLD protocol stack as stated in RFC-3810 9.13."
        },
        {
          "name": "CounterTxQuery",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific MLD interface for transmitting MLD Query control frames."
        },
        {
          "name": "CounterTxSpecificQuery",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific MLD interface for transmitting MLD Specific Query control frames."
        },
        {
          "name": "CounterRxQuery",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific MLD interface for receiving MLD Query control frames."
        },
        {
          "name": "CounterRxV1Report",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific MLD interface for receiving MLDv1 Report control frames."
        },
        {
          "name": "CounterRxV1Done",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific MLD interface for receiving MLDv1 Done control frames."
        },
        {
          "name": "CounterRxV2Report",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific MLD interface for receiving MLDv2 Report control frames."
        },
        {
          "name": "CounterRxErrors",
          "type": "uint32_t",
          "description": "It presents the current packet count on the specific MLD interface for receiving invalid MLD control frames."
        }
      ]
    },
    {
      "type-name": "vtss_appl_led_power_reduction_led_full_brightness_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "MaintenanceDuration",
          "type": "uint16_t",
          "description": " The switch maintenance duration (in seconds). During switch maintenance LEDs will glow in full intensity after either a port has changed link state or the LED push button has been pushed."
        },
        {
          "name": "ErrorEnable",
          "type": "vtss_bool_t",
          "description": " Turned on LEDs at full brightness(100% intensity) when LED is blinking in red because of either software error or fatal occurred. true means LEDs will glow in full brightness, false means LEDs will not glow in full brightness."
        }
      ]
    },
    {
      "type-name": "vtss_appl_lldp_med_conf_network_policy_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ApplicationType",
          "type": "vtss_appl_lldp_med_application_type_t",
          "description": "The LLDP policy application type."
        },
        {
          "name": "Tagged",
          "type": "vtss_bool_t",
          "description": "The LLDP policy tagged flag. Defines if LLDP policy uses tagged VLAN."
        },
        {
          "name": "VlanId",
          "type": "uint16_t",
          "description": "The LLDP policy VLAN ID. Only valid when policy 'Tagged' is TRUE"
        },
        {
          "name": "L2Priority",
          "type": "uint8_t",
          "description": "The LLDP policy L2 priority."
        },
        {
          "name": "Dscp",
          "type": "uint8_t",
          "description": "The LLDP policy DSCP."
        }
      ]
    },
    {
      "type-name": "vtss_appl_lldp_med_network_policy_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ApplicationType",
          "type": "vtss_appl_lldp_med_application_type_t",
          "description": "The LLDP policy application type."
        },
        {
          "name": "UnknownPolicy",
          "type": "vtss_bool_t",
          "description": "Policy indicates that an Endpoint Device wants to explicitly advertise that                                       the policy is required by the device. Can be either Defined or Unknown\n                                       Unknown: The network policy for the specified application type is currently unknown.\n                                       Defined: The network policy is defined (known)."
        },
        {
          "name": "Tagged",
          "type": "vtss_bool_t",
          "description": "Defines if LLDP policy uses tagged VLAN."
        },
        {
          "name": "VlanId",
          "type": "uint16_t",
          "description": "The policy VLAN ID. Only valid when policy 'Tagged' is TRUE"
        },
        {
          "name": "L2Priority",
          "type": "uint8_t",
          "description": "Shows the LLDP neighbor's policy L2 priority."
        },
        {
          "name": "Dscp",
          "type": "uint8_t",
          "description": "LLDP policy DSCP."
        }
      ]
    },
    {
      "type-name": "vtss_appl_lldp_mgmt_addr_tlv_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "SystemMgmAddressSubtype",
          "type": "uint8_t",
          "description": "LLDP neighbor's management address subtype , section 9.5.9.3 IEEE802.1AB-2005."
        },
        {
          "name": "SystemMgmtAddress",
          "type": "char *",
          "description": "LLDP neighbor's management address string, section 9.5.9.4 IEEE802.1AB-2005."
        },
        {
          "name": "SystemMgmtInterfaceSubtype",
          "type": "int32_t",
          "description": "Interface numbering subtype, section 9.5.9.5 IEEE802.1AB-2005."
        },
        {
          "name": "SystemMgmtInterface",
          "type": "int32_t",
          "description": "Interface number, section 9.5.9.6 IEEE802.1AB-2005."
        },
        {
          "name": "SystemMgmtOid",
          "type": "vtss_snmp_oid_t",
          "description": "Object identifier, section 9.5.9.8 IEEE802.1AB-2005."
        }
      ]
    },
    {
      "type-name": "vtss_appl_loop_protect_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enabled",
          "type": "vtss_bool_t",
          "description": "Global enabled for loop protection on any port."
        },
        {
          "name": "TransmitInterval",
          "type": "uint32_t",
          "description": "Port transmission interval (seconds). Valid range: 1-10 seconds."
        },
        {
          "name": "ShutdownPeriod",
          "type": "uint32_t",
          "description": "Port shutdown period (seconds). Valid range: 0 to 604800 seconds."
        }
      ]
    },
    {
      "type-name": "vtss_appl_loop_protect_port_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enabled",
          "type": "vtss_bool_t",
          "description": "Enabled loop protection on port"
        },
        {
          "name": "Action",
          "type": "vtss_appl_loop_protect_action_t",
          "description": "Action if loop detected"
        },
        {
          "name": "Transmit",
          "type": "vtss_bool_t",
          "description": "Actively generate PDUs"
        }
      ]
    },
    {
      "type-name": "vtss_appl_loop_protect_port_info_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Disabled",
          "type": "vtss_bool_t",
          "description": "Whether a port is currently disabled"
        },
        {
          "name": "LoopDetected",
          "type": "vtss_bool_t",
          "description": "Whether a port has a loop detected"
        },
        {
          "name": "LoopCount",
          "type": "uint32_t",
          "description": "Number of times a loop has been detected on a port"
        },
        {
          "name": "LastLoop",
          "type": "uint64_t",
          "description": "Time of last loop condition"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mac_flush_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "FlushAll",
          "type": "vtss_bool_t",
          "description": "Flush all dynamic learned Mac addresses. Set the value to 'true' to perform the action. Read will always return 'false'."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mac_learn_mode_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "LearnMode",
          "type": "vtss_appl_mac_port_learn_mode_t",
          "description": "The learn mode of the port. Auto(0) means auto learning. Disable(1) means that learning is disabled. Secure(2) means that learning frames are discarded."
        },
        {
          "name": "ChangeAllowed",
          "type": "vtss_bool_t",
          "description": "If internal modules have changed the learned mode then the user is not allowed to change it from this interface. This entry tells you if the LearnMode can be changed (true) or not (false). This is a read only entry - write is ignored."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mac_stack_addr_entry_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "PortList",
          "type": "vtss_port_list_stackable_t",
          "description": "List of destination ports for which frames with this DMAC is forwarded to."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mac_stack_addr_entry_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "PortList",
          "type": "vtss_port_list_stackable_t",
          "description": "List of destination ports for which frames with this DMAC is forwarded to."
        },
        {
          "name": "Dynamic",
          "type": "uint8_t",
          "description": "The entry is dynamically learned (True) or statically added (False)"
        },
        {
          "name": "CopyToCpu",
          "type": "uint8_t",
          "description": "Copy this frame to the CPU (True) or not (False)"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mac_vid_learn_mode_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_bool_t",
          "description": "Learn mode of the VLAN, True = Enabled, False = Disabled"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_ais_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Protection",
          "type": "vtss_bool_t",
          "description": "The first three AIS frames are transmitted as fast as possible."
        },
        {
          "name": "rate",
          "type": "vtss_appl_mep_rate_t",
          "description": "AIS transmission rate"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_aps_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Prio",
          "type": "uint32_t",
          "description": "Priority of the transmitted APS PDU. Range 0 to 7"
        },
        {
          "name": "ApsType",
          "type": "vtss_appl_mep_aps_type_t",
          "description": "Type of APS"
        },
        {
          "name": "Cast",
          "type": "vtss_appl_mep_cast_t",
          "description": "Uni/multicast selection"
        },
        {
          "name": "RapsOctet",
          "type": "uint32_t",
          "description": "Last octet in the R-APS multicast DA"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_bfd_control_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Clear",
          "type": "vtss_bool_t",
          "description": "Clear the BFD statistics counters"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "instanceMax",
          "type": "uint32_t",
          "description": "Max number of MEP instance"
        },
        {
          "name": "peerMax",
          "type": "uint32_t",
          "description": "Max number of peer MEP"
        },
        {
          "name": "transactionMax",
          "type": "uint32_t",
          "description": "Max number of Link Trace transaction"
        },
        {
          "name": "replyMax",
          "type": "uint32_t",
          "description": "Max number of reply in a transaction"
        },
        {
          "name": "clientFlowsMax",
          "type": "uint32_t",
          "description": "Max number of client flows"
        },
        {
          "name": "macMength",
          "type": "uint32_t",
          "description": "MAC length"
        },
        {
          "name": "megCodeLength",
          "type": "uint32_t",
          "description": "MAX length of Both Maintenance Domain Name and MEG-ID include a NULL termination"
        },
        {
          "name": "dmIntervalMin",
          "type": "uint32_t",
          "description": "MIN DM transmission interval "
        },
        {
          "name": "dmIntervalMax",
          "type": "uint32_t",
          "description": "MAX DM transmission interval"
        },
        {
          "name": "dmLastnMin",
          "type": "uint32_t",
          "description": "MIN number of DM LastN for average calculation"
        },
        {
          "name": "dmLastnMax",
          "type": "uint32_t",
          "description": "MAX number of DM LastN for average calculation"
        },
        {
          "name": "lbmSizeMax",
          "type": "uint32_t",
          "description": "The maximum LBM frame size"
        },
        {
          "name": "lbmSizeMin",
          "type": "uint32_t",
          "description": "The minimum LBM frame size"
        },
        {
          "name": "tstSizeMax",
          "type": "uint32_t",
          "description": "The maximum TST frame size"
        },
        {
          "name": "tstSizeMin",
          "type": "uint32_t",
          "description": "The minimum TST frame size"
        },
        {
          "name": "tstRateMax",
          "type": "uint32_t",
          "description": "The maximum TST bit rate"
        },
        {
          "name": "clientPrioHighest",
          "type": "uint32_t",
          "description": "The highest possible client priority is requested"
        },
        {
          "name": "ituG8113dot2",
          "type": "vtss_bool_t",
          "description": "Indicates if ITU G8113.2 is supported on this system"
        },
        {
          "name": "voeSupport",
          "type": "vtss_bool_t",
          "description": "Indicates if VOE is supported on this system"
        },
        {
          "name": "lbToSendInfinite",
          "type": "uint32_t",
          "description": "Send LBM infinite - test behaviour"
        },
        {
          "name": "bfdAuthKeyMax",
          "type": "uint32_t",
          "description": "Maximum number of BFD authentication keys"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_cc_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Prio",
          "type": "uint32_t",
          "description": "Priority of the transmitted CCM. Range 0 to 7"
        },
        {
          "name": "Rate",
          "type": "vtss_appl_mep_rate_t",
          "description": "CCM transmission and expected reception rate"
        },
        {
          "name": "Tlv",
          "type": "vtss_bool_t",
          "description": "Enable/disable insertion of TLV in CCM PDU. OS, PS and IS TLV are inserted"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_appl_mep_mode_t",
          "description": "The instance mode. Cannot be changed after creation."
        },
        {
          "name": "Direction",
          "type": "vtss_appl_mep_direction_t",
          "description": "The instance direction. Cannot be changed after creation."
        },
        {
          "name": "Flow",
          "type": "vtss_ifindex_t",
          "description": "The flow instance (VLAN - EVC). Cannot be changed after creation."
        },
        {
          "name": "Port",
          "type": "vtss_ifindex_t",
          "description": "The instance residence port. Cannot be changed after creation."
        },
        {
          "name": "Level",
          "type": "uint32_t",
          "description": "The instance level"
        },
        {
          "name": "Vid",
          "type": "uint16_t",
          "description": "VID used for tagged Port domain OAM. Create a VLAN MEP instead - if possible"
        },
        {
          "name": "Voe",
          "type": "vtss_bool_t",
          "description": "Make the instance VOE based - if possible"
        },
        {
          "name": "Mac",
          "type": "vtss_mac_t",
          "description": "The instance unicast MAC. If 'all zero' the residence port MAC is used"
        },
        {
          "name": "Format",
          "type": "vtss_appl_mep_format_t",
          "description": "The MEG-ID format"
        },
        {
          "name": "Name",
          "type": "char *",
          "description": "IEEE Maintenance Domain Name (string)"
        },
        {
          "name": "Meg",
          "type": "char *",
          "description": "Unique MEG ID (string)"
        },
        {
          "name": "Mep",
          "type": "uint32_t",
          "description": "MEP id of this instance"
        },
        {
          "name": "EvcPag",
          "type": "uint32_t",
          "description": "EVC generated policy PAG value. This is used as IS2 key"
        },
        {
          "name": "EvcQos",
          "type": "uint32_t",
          "description": "EVC QoS value. Used for getting queue frame LM counters."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_dm_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enable",
          "type": "vtss_bool_t",
          "description": "Delay Measurement is enabled"
        },
        {
          "name": "Ended",
          "type": "vtss_appl_mep_ended_t",
          "description": "Dual/single ended selection. CCM or LMM/LMR based. Cannot be changed after creation."
        },
        {
          "name": "Prio",
          "type": "uint32_t",
          "description": "Priority of the transmitted DM PDU. Range 0 to 7"
        },
        {
          "name": "Cast",
          "type": "vtss_appl_mep_cast_t",
          "description": "Uni/Multicast selection"
        },
        {
          "name": "Mep",
          "type": "uint32_t",
          "description": "Peer MEP to receive DMM/1DM - only used if unicast"
        },
        {
          "name": "CalcWay",
          "type": "vtss_appl_mep_dm_calcway_t",
          "description": "Round trip or flow calculation way selection."
        },
        {
          "name": "Interval",
          "type": "uint32_t",
          "description": "Interval between 1DM/DMM in 10 ms. Range Capability dm_interval_min to dm_interval_max."
        },
        {
          "name": "LastN",
          "type": "uint32_t",
          "description": "The number of last N measurements used to calculate average delay and variation. Range Capability dm_lastn_min to dm_lastn_max."
        },
        {
          "name": "TimeUnit",
          "type": "vtss_appl_mep_dm_tunit_t",
          "description": "Calculation time unit."
        },
        {
          "name": "OverflowAct",
          "type": "vtss_appl_mep_dm_act_t",
          "description": "Action when internal total delay counter overflow."
        },
        {
          "name": "Synchronized",
          "type": "vtss_bool_t",
          "description": "Near-end and far-end is real-time synchronized. One-way DM calculation on receiving DMR."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_dm_control_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Clear",
          "type": "vtss_bool_t",
          "description": "Clear the DM results"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_dm_state_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "TxCounter",
          "type": "uint32_t",
          "description": "Transmitted DMM/1DM frames."
        },
        {
          "name": "RxCounter",
          "type": "uint32_t",
          "description": "Received DMM/1DM frames."
        },
        {
          "name": "RxTimeOutCounter",
          "type": "uint32_t",
          "description": "Received DMR time-out. After transmission of DMM, the DMR is expected to be received within 1 sec."
        },
        {
          "name": "RxErrorCounter",
          "type": "uint32_t",
          "description": "Received error counter. It is considered an error if a delay is negative or above 1 sec."
        },
        {
          "name": "InternalOverflowCounter",
          "type": "uint32_t",
          "description": "The internal total delay counter overflow counter."
        },
        {
          "name": "AverageDelay",
          "type": "uint32_t",
          "description": "The total average delay."
        },
        {
          "name": "AverageLastnDelay",
          "type": "uint32_t",
          "description": "The last N average delay."
        },
        {
          "name": "AverageDelayVariation",
          "type": "uint32_t",
          "description": "The total average delay variation."
        },
        {
          "name": "AverageLastnDelayVariation",
          "type": "uint32_t",
          "description": "The last N average delay variation."
        },
        {
          "name": "MinimumDelay",
          "type": "uint32_t",
          "description": "The minimum delay measured."
        },
        {
          "name": "MaximumDelay",
          "type": "uint32_t",
          "description": "The maximum delay measured."
        },
        {
          "name": "MinimumDelayVariation",
          "type": "uint32_t",
          "description": "The minimum delay variation measured."
        },
        {
          "name": "MaximumDelayVariation",
          "type": "uint32_t",
          "description": "The maximum delay variation measured."
        },
        {
          "name": "TimeUnit",
          "type": "vtss_appl_mep_dm_tunit_t",
          "description": "Calculation time unit."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_g8113_2_bfd_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enable",
          "type": "vtss_bool_t",
          "description": "CC/CV transmission and LOC detection is enabled if true."
        },
        {
          "name": "IsIndependent",
          "type": "vtss_bool_t",
          "description": "Independent mode if true, coordinated if false."
        },
        {
          "name": "CcOnly",
          "type": "vtss_bool_t",
          "description": "Only transmit CC frames (no CV frames) if true."
        },
        {
          "name": "TxAuthEnabled",
          "type": "vtss_bool_t",
          "description": "Authentication enabled for transmission of CC/CV frames to peer if true."
        },
        {
          "name": "RxAuthEnabled",
          "type": "vtss_bool_t",
          "description": "Authentication enabled for reception of CC/CV frames from peer if true."
        },
        {
          "name": "TxAuthKeyId",
          "type": "uint8_t",
          "description": "Authentication used for transmission of CC/CV frames to peer."
        },
        {
          "name": "CcPeriod",
          "type": "uint32_t",
          "description": "Desired CC transmission period in us, 1 us - 60 sec."
        },
        {
          "name": "RxFlow",
          "type": "uint32_t",
          "description": "Rx flow number (MPLS-TP link, MPLS-TP tunnel, MPLS-TP LSP or MPLS-TP Pseudo-Wire) for independent mode."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_lb_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Dei",
          "type": "vtss_bool_t",
          "description": "Drop Eligibility Indicator of transmitted LBM PDU"
        },
        {
          "name": "Prio",
          "type": "uint32_t",
          "description": "Priority of the transmitted LBM PDU. Range 0 to 7"
        },
        {
          "name": "Cast",
          "type": "vtss_appl_mep_cast_t",
          "description": "Uni/Multicast selection"
        },
        {
          "name": "Mep",
          "type": "uint32_t",
          "description": "Peer MEP to receive LBM - only used if unicast and 'mac' is 'all zero'."
        },
        {
          "name": "Mac",
          "type": "vtss_mac_t",
          "description": "Unicast MAC address to receive LBM - has to be used to send LBM to MIP."
        },
        {
          "name": "ToSend",
          "type": "uint32_t",
          "description": "Number of LBM to send. Capability lb_to_send_infinite => test behaviour. Requires VOE."
        },
        {
          "name": "Size",
          "type": "uint32_t",
          "description": "Size of LBM frame to send - Range Capability lbm_size_min to lbm_size_max"
        },
        {
          "name": "Interval",
          "type": "uint32_t",
          "description": "Frame interval.\nIf 'ToSend' != Capability lb_to_send_infinite then the 'Interval' is in 10 ms. Max 1 s.\nIf 'ToSend' == Capability lb_to_send_infinite then the 'Interval' is in 1 us. Max 10 ms."
        },
        {
          "name": "TimeToLive",
          "type": "uint8_t",
          "description": "Time To Live."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_lb_reply_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mac",
          "type": "vtss_mac_t",
          "description": "LBR source MAC - this is only relevant if not 'infinite' LBM and not MPLS loopback"
        },
        {
          "name": "LbrReceived",
          "type": "uint64_t",
          "description": "Number LBR received from MAC."
        },
        {
          "name": "OutOfOrder",
          "type": "uint64_t",
          "description": "The OOO counter."
        },
        {
          "name": "MepMipId",
          "type": "unsigned char *",
          "description": "Replying MEP/MIP ID - only relevant for loopback on MPLS"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_lck_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Rate",
          "type": "vtss_appl_mep_rate_t",
          "description": "LCK transmission rate"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_lm_avail_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enable",
          "type": "vtss_bool_t",
          "description": "Loss Measurement Availability is enabled"
        },
        {
          "name": "LosRatioThr",
          "type": "uint32_t",
          "description": "Availability frame loss ratio threshold in per mille."
        },
        {
          "name": "Interval",
          "type": "uint32_t",
          "description": "Availability interval - number of measurements with same availability in order to change Availability state."
        },
        {
          "name": "Maintenance",
          "type": "vtss_bool_t",
          "description": "Loss Measurement Availability Maintenance enable/disable"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_lm_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enable",
          "type": "vtss_bool_t",
          "description": "Loss Measurement is enabled"
        },
        {
          "name": "Ended",
          "type": "vtss_appl_mep_ended_t",
          "description": "Dual/single ended selection. CCM or LMM/LMR based. Cannot be changed after creation."
        },
        {
          "name": "Prio",
          "type": "uint32_t",
          "description": "Priority of the transmitted LM PDU. Range 0 to 7"
        },
        {
          "name": "rate",
          "type": "vtss_appl_mep_rate_t",
          "description": "LM PDU transmission rate"
        },
        {
          "name": "Cast",
          "type": "vtss_appl_mep_cast_t",
          "description": "Uni/Multicast selection - on CCM based LM only multicast is possible"
        },
        {
          "name": "FlrInterval",
          "type": "uint32_t",
          "description": "Frame loss ratio interval in number of measurements."
        },
        {
          "name": "FlowCount",
          "type": "vtss_bool_t",
          "description": "Traffic (service frames) are counted per flow - all priority in one"
        },
        {
          "name": "OamCount",
          "type": "vtss_appl_mep_oam_count",
          "description": "Loss Measurement can count OAM frames in different ways."
        },
        {
          "name": "LossTh",
          "type": "uint32_t",
          "description": "Frame loss threshold. The loss threshold count NearEndLosThCnt / FarEndLosThCnt is incremented if a loss measurement is above this threshold."
        },
        {
          "name": "LossCounterIntHolddownTimer",
          "type": "uint32_t",
          "description": "Holddown timer in seconds for JSON notification updates for NearEndLosCounterInt and FarEndLosCounterInt."
        },
        {
          "name": "LossThCntHolddownTimer",
          "type": "uint32_t",
          "description": "Holddown timer in seconds for JSON notification updates for NearEndLosThCnt and FarEndLosThCnt."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_lm_control_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Clear",
          "type": "vtss_bool_t",
          "description": "Clear the LM results"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_lm_hli_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enable",
          "type": "vtss_bool_t",
          "description": "Loss Measurement High Loss Interval is enabled"
        },
        {
          "name": "HiLosRatioThr",
          "type": "uint32_t",
          "description": "High Loss Interval frame loss ratio threshold in per mille."
        },
        {
          "name": "ConInterval",
          "type": "uint32_t",
          "description": "High Loss Interval consecutive interval (number of measurements)."
        },
        {
          "name": "CntHolddownTimer",
          "type": "uint32_t",
          "description": "Holddown timer in seconds for JSON notification updates for High Loss Interval NearEndCnt and FarEndCnt."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_lm_sdeg_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enable",
          "type": "vtss_bool_t",
          "description": "Loss Measurement Signal Degrade is enabled"
        },
        {
          "name": "TxMin",
          "type": "uint32_t",
          "description": "Minimum number of frames that must be transmitted in a measurement before frame loss ratio is tested against LosRatioThr."
        },
        {
          "name": "LosRatioThr",
          "type": "uint32_t",
          "description": "Signal Degraded frame loss ratio threshold in per mille."
        },
        {
          "name": "BadThr",
          "type": "uint32_t",
          "description": "Number of consecutive bad interval measurements required to set degrade state."
        },
        {
          "name": "GoodThr",
          "type": "uint32_t",
          "description": "Number of consecutive good interval measurements required to clear degrade state."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_lst_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enable",
          "type": "vtss_bool_t",
          "description": "The instance can enable Link State Tracking. When LST is enabled, Local SF or received 'isDown' in CCM Interface Status TLV, will bring down the residence port. Only valid in Up-MEP."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_lt_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Prio",
          "type": "uint32_t",
          "description": "Priority of the transmitted LTM PDU. Range 0 to 7"
        },
        {
          "name": "Mep",
          "type": "uint32_t",
          "description": "Target Peer Mep to receive LTM - only used if 'mac' is 'all zero'"
        },
        {
          "name": "Mac",
          "type": "vtss_mac_t",
          "description": "Unicast MAC address to receive LTM - has to be used to send LTM to MIP."
        },
        {
          "name": "TimeToLive",
          "type": "uint32_t",
          "description": "Time To Live."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_lt_reply_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_appl_mep_mode_t",
          "description": "The reply is done by a MEP or a MIP."
        },
        {
          "name": "Direction",
          "type": "vtss_appl_mep_direction_t",
          "description": "The reply is done by a UP or a Down instance."
        },
        {
          "name": "Ttl",
          "type": "uint8_t",
          "description": "The reply TTL value."
        },
        {
          "name": "Forwarded",
          "type": "vtss_bool_t",
          "description": "The LTM was forwarded."
        },
        {
          "name": "RelayAction",
          "type": "vtss_appl_mep_relay_act_t",
          "description": "The relay action."
        },
        {
          "name": "LastEgressMac",
          "type": "vtss_mac_t",
          "description": "The Last Egress MAC for this reply."
        },
        {
          "name": "NextEgressMac",
          "type": "vtss_mac_t",
          "description": "The Next Egress MAC of this reply."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_peer_cc_state_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "OsTlvOuiFirst",
          "type": "uint8_t",
          "description": "Last received OS TLV - The OUI content first nibble"
        },
        {
          "name": "OsTlvOuiSecond",
          "type": "uint8_t",
          "description": "Last received OS TLV - The OUI content second nibble"
        },
        {
          "name": "OsTlvOuiThird",
          "type": "uint8_t",
          "description": "Last received OS TLV - The OUI content third nibble"
        },
        {
          "name": "OsTlvSubType",
          "type": "uint8_t",
          "description": "Last received OS TLV - The Sub-Type content"
        },
        {
          "name": "OsTlvValue",
          "type": "uint8_t",
          "description": "Last received OS TLV - The Value content"
        },
        {
          "name": "IsTlvValue",
          "type": "uint8_t",
          "description": "Last received IS TLV - The Value content"
        },
        {
          "name": "PsTlvValue",
          "type": "uint8_t",
          "description": "Last received PS TLV - The Value content"
        },
        {
          "name": "OsTlvReceived",
          "type": "vtss_bool_t",
          "description": "Last received CCM PDU contained OS TLV"
        },
        {
          "name": "IsTlvReceived",
          "type": "vtss_bool_t",
          "description": "Last received CCM PDU contained IS TLV"
        },
        {
          "name": "PsTlvReceived",
          "type": "vtss_bool_t",
          "description": "Last received CCM PDU contained PS TLV"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_peer_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mac",
          "type": "vtss_mac_t",
          "description": "The peer unicast MAC"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_peer_state_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Cloc",
          "type": "vtss_bool_t",
          "description": "CCM LOC state from peer MEP"
        },
        {
          "name": "Crdi",
          "type": "vtss_bool_t",
          "description": "CCM RDI state from peer MEP"
        },
        {
          "name": "Cperiod",
          "type": "vtss_bool_t",
          "description": "CCM Period state from peer MEP"
        },
        {
          "name": "Cprio",
          "type": "vtss_bool_t",
          "description": "CCM Priority state from peer MEP"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_pm_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enable",
          "type": "vtss_bool_t",
          "description": "The instance can enable contribution of LM and DM results to the Performance Monitoring "
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_rt_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "TrafficClass",
          "type": "uint8_t",
          "description": "Traffic class value used in the transmitted RT request PDU. Range 0 to 7"
        },
        {
          "name": "SrcIdTlv",
          "type": "vtss_bool_t",
          "description": "Include Source ID TLV in the RT request"
        },
        {
          "name": "DstIdTlv",
          "type": "vtss_bool_t",
          "description": "Include Destination ID TLV in the RT request"
        },
        {
          "name": "PadTlvType",
          "type": "vtss_appl_mep_rt_pad_tlv_type_t",
          "description": "Pad TLV type"
        },
        {
          "name": "PadTlvLen",
          "type": "uint16_t",
          "description": "Pad TLV data length. Range 1 to 1024."
        },
        {
          "name": "Flags",
          "type": "uint8_t",
          "description": "Flags for RT request. Bit 0: V flag (Validate FEC stack), bit 1: T flag (Respond Only If TTL Expired), bit 2: R flag (Validate Reverse Path)"
        },
        {
          "name": "MaxTimeToLive",
          "type": "uint8_t",
          "description": "Max. Time To Live for RT request."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_rt_reply_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ReturnCode",
          "type": "vtss_appl_mep_rt_ret_code_t",
          "description": "Return code from reply."
        },
        {
          "name": "ReturnSubcode",
          "type": "uint8_t",
          "description": "Return subcode from reply."
        },
        {
          "name": "RttSec",
          "type": "uint32_t",
          "description": "Round Trip Time (seconds)."
        },
        {
          "name": "RttUsec",
          "type": "uint32_t",
          "description": "Round Trip Time (microseconds)."
        },
        {
          "name": "TsSentSec",
          "type": "uint32_t",
          "description": "Timestamp sent (sender, seconds)."
        },
        {
          "name": "TsSentUsec",
          "type": "uint32_t",
          "description": "Timestamp sent (sender, microseconds)."
        },
        {
          "name": "TsReceivedSec",
          "type": "uint32_t",
          "description": "Timestamp received (receiver, seconds)."
        },
        {
          "name": "TsReceivedUsec",
          "type": "uint32_t",
          "description": "Timestamp received (receiver, microseconds)."
        },
        {
          "name": "SrcGlobalId",
          "type": "uint32_t",
          "description": "Source global ID from received FEC or source ID TLV in RT reply."
        },
        {
          "name": "SrcNodeId",
          "type": "vtss_ipv4_t",
          "description": "Source node ID from received FEC or source ID TLV in RT reply."
        },
        {
          "name": "FecSrcValue",
          "type": "uint32_t",
          "description": "For a reply from a PW MEP this is the source AC-ID from the received FEC in the RT reply. For a Tunnel MEP or LSP MIP bit 31:16 is the source tunnel number and bit 15:0 is the LSP number from the received FEC in the RT reply."
        },
        {
          "name": "RxIfNum",
          "type": "uint32_t",
          "description": "Receiver local interface index from reply."
        },
        {
          "name": "RxLabelCnt",
          "type": "uint32_t",
          "description": "Number of valid label values RxLabel1, RxLabel2 etc."
        },
        {
          "name": "RxLabel1",
          "type": "uint32_t",
          "description": "1st MPLS label (top label) of Label Stack of RT request as seen by receiver."
        },
        {
          "name": "RxLabel2",
          "type": "uint32_t",
          "description": "2nd MPLS label of Label Stack of RT request as seen by receiver."
        },
        {
          "name": "RxLabel3",
          "type": "uint32_t",
          "description": "3rd MPLS label of Label Stack of RT request as seen by receiver."
        },
        {
          "name": "RxLabel4",
          "type": "uint32_t",
          "description": "4th MPLS label of Label Stack of RT request as seen by receiver."
        },
        {
          "name": "RxLabel5",
          "type": "uint32_t",
          "description": "5th MPLS label of Label Stack of RT request as seen by receiver."
        },
        {
          "name": "RxLabel6",
          "type": "uint32_t",
          "description": "6th MPLS label of Label Stack of RT request as seen by receiver."
        },
        {
          "name": "RxLabel7",
          "type": "uint32_t",
          "description": "7th MPLS label of Label Stack of RT request as seen by receiver."
        },
        {
          "name": "RxLabel8",
          "type": "uint32_t",
          "description": "8th MPLS label of Label Stack of RT request as seen by receiver."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_state_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Clevel",
          "type": "vtss_bool_t",
          "description": "Incorrect CCM level received"
        },
        {
          "name": "Cmeg",
          "type": "vtss_bool_t",
          "description": "Incorrect CCM MEG id received"
        },
        {
          "name": "Cmep",
          "type": "vtss_bool_t",
          "description": "Incorrect CCM MEP id received"
        },
        {
          "name": "Cssf",
          "type": "vtss_bool_t",
          "description": "SSF state"
        },
        {
          "name": "Cais",
          "type": "vtss_bool_t",
          "description": "AIS state. AIS is received."
        },
        {
          "name": "Clck",
          "type": "vtss_bool_t",
          "description": "Locked State. LCK is received."
        },
        {
          "name": "Atsf",
          "type": "vtss_bool_t",
          "description": "Trail Signal fail consequent action is calculated"
        },
        {
          "name": "Atsd",
          "type": "vtss_bool_t",
          "description": "Trail Signal degrade consequent action is calculated"
        },
        {
          "name": "Ablk",
          "type": "vtss_bool_t",
          "description": "Block consequent action is calculated"
        },
        {
          "name": "Cloop",
          "type": "vtss_bool_t",
          "description": "Loop is detected. CCM is received with own MEP ID and SMAC."
        },
        {
          "name": "Cconfig",
          "type": "vtss_bool_t",
          "description": "Configuration error detected. CCM is received with own MEP ID."
        },
        {
          "name": "Cdeg",
          "type": "vtss_bool_t",
          "description": "Signal Degraded."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_syslog_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enable",
          "type": "vtss_bool_t",
          "description": "The instance can enable generation of syslog entries "
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_tst_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "TxEnable",
          "type": "vtss_bool_t",
          "description": "Enable/disable transmission of TST PDU."
        },
        {
          "name": "RxEnable",
          "type": "vtss_bool_t",
          "description": "Enable/disable reception and analyse of TST PDU."
        },
        {
          "name": "Dei",
          "type": "vtss_bool_t",
          "description": "Drop Eligibility Indicator of transmitted TST PDU"
        },
        {
          "name": "Prio",
          "type": "uint32_t",
          "description": "Priority of the transmitted TST PDU. Range 0 to 7"
        },
        {
          "name": "Mep",
          "type": "uint32_t",
          "description": "Peer MEP to receive TST"
        },
        {
          "name": "Rate",
          "type": "uint32_t",
          "description": "The transmission rate in Kbps - Range 1 to Capability tst_rate_max."
        },
        {
          "name": "Size",
          "type": "uint32_t",
          "description": "Size of TST frame to send - Range Capability tst_size_min to tst_size_max."
        },
        {
          "name": "Pattern",
          "type": "vtss_appl_mep_pattern_t",
          "description": "Pattern in TST frame Data TLV."
        },
        {
          "name": "Sequence",
          "type": "vtss_bool_t",
          "description": "Sequence number will be inserted - not checked in receiver on Caracal and Jaguar."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mep_tst_control_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Clear",
          "type": "vtss_bool_t",
          "description": "Clear the TST results"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mirror_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "SessionCountMax",
          "type": "int32_t",
          "description": "The maximum number of sessions."
        },
        {
          "name": "SessionSourceCountMax",
          "type": "int32_t",
          "description": "The maximum number of Mirror and RMirror source sessions."
        },
        {
          "name": "RMirrorSuport",
          "type": "vtss_bool_t",
          "description": "Indicate if RMirror feature is supported or not. true means supported. false means not supported."
        },
        {
          "name": "InternalReflectorPortSupport",
          "type": "vtss_bool_t",
          "description": "Indicate if Internal reflector port is supported or not. true means supported. false means not supported."
        },
        {
          "name": "CpuMirrorSupport",
          "type": "vtss_bool_t",
          "description": "Indicate if mirroring CPU traffic is supported or not. true means supported. false means not supported."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mirror_config_session_entry_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_bool_t",
          "description": "Controls whether this session is enabled or disabled. true is to enable the function. false is to disable it.\nMultiple criteria must be fulfilled in order to be able to enable a session.The criteria depend on the 'SessionType'."
        },
        {
          "name": "Type",
          "type": "vtss_appl_mirror_session_type_t",
          "description": "Session type in Mirror. 'mirror' means to do the Mirror function on the device.\n'rMirrorSource' means the device acts as source node for monitor flow.\n'rMirrorDestination' means the device acts as end node for monitor flow.\n"
        },
        {
          "name": "RMirrorVlan",
          "type": "uint16_t",
          "description": "The VLAN ID points out where the monitor packet will copy to. The remote Mirror VLAN ID. Only used for RMirror types.\nRMirror source session:\n  The mirrored traffic is copied onto this VLAN ID.\n  Traffic will flood to all ports that are members of the remote Mirror VLAN ID.\nRMirror destination session:\n  The #destination_port_list contains the port(s) that the Mirror VLAN will be copied to\n  in addition to ports that are already configured (through the VLAN module) to be members   of this VLAN."
        },
        {
          "name": "ReflectorPort",
          "type": "vtss_ifindex_t",
          "description": "A reflector port is a port that the administrator may have to specify in case the device does not have internal (unused) ports available. Whether this is the case or not for this device can be derived from Mirror capabilities. When 'ReflectorPort' is used, it must be specified when an RMirror source session is enabled. In this case, the reflector port will be shut down for normal front port usage, because the switch needs a port where it can loop frames in order to get mirrored traffic copied onto a particular VLAN ID (the 'RMirrorVlan')."
        },
        {
          "name": "StripInnerTag",
          "type": "vtss_bool_t",
          "description": "This configuration is used to strip the original VLAN ID of the mirrored traffic or not. When it is set to TRUE, the the original VLAN ID of the mirrored traffic will be stripped, otherwise the original VLAN ID will be carried to destination interface. It may have to specify in case  the device does not have internal (unused) ports available. Whether this is the case or not for this device can be derived from Mirror capabilities."
        },
        {
          "name": "SourceVlans",
          "type": "vtss_vid_list_t",
          "description": "Source VLAN list.\nAll traffic in the VLANs specified in this list will get mirrored onto either the destination port (Mirror session) or the destination VLAN (RMirror source session). It's a bit-mask that indicates the VLANs. A '1' indicates the VLAN ID is selected, a '0' indicates that the VLAN ID isn't selected. "
        },
        {
          "name": "SourcePortListRx",
          "type": "vtss_port_list_stackable_t",
          "description": "A bit-mask that controls whether a given port is enabled for mirroring of incoming traffic. A '1' indicates that the port is included, whereas a '0' indicates it isn't. Only source sessions (Mirror and RMirror Source) use this value. "
        },
        {
          "name": "SourcePortListTx",
          "type": "vtss_port_list_stackable_t",
          "description": "A bit-mask that controls whether a given port is enabled for mirroring of outgoing traffic. A '1' indicates that the port is included, whereas a '0' indicates it isn't. Only source sessions (Mirror and RMirror Source) use this value. "
        },
        {
          "name": "CpuRx",
          "type": "vtss_bool_t",
          "description": "Controls whether mirroring of traffic received by the internal CPU is enabled or disabled.  It is supported or not can be derived from Mirror capabilities.Only source sessions (Mirror and RMirror Source) use this value. "
        },
        {
          "name": "CpuTx",
          "type": "vtss_bool_t",
          "description": "Controls whether mirroring of traffic transmitted by the internal CPU is enabled or disabled.  It is supported or not can be derived from Mirror capabilities.Only source sessions (Mirror and RMirror Source) use this value. "
        },
        {
          "name": "DestinationPortList",
          "type": "vtss_port_list_stackable_t",
          "description": "Destination port list implemented as a bit-mask, where a '1' indicates that the port is included and a '0' indicates that it isn't. Only used in plain Mirror sessions and RMirror destination sessions.\nMirror session:\n  At most one bit may be set in this mask.\nRMirror destination session:\n  Zero or more bits may be set in this mask."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mplstp_control_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Clear",
          "type": "vtss_bool_t",
          "description": "Clear statistics counters"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mplstp_global_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "tunnelMode",
          "type": "vtss_appl_mplstp_tunnel_mode_t",
          "description": "Tunnel Mode"
        },
        {
          "name": "globalId",
          "type": "uint32_t",
          "description": "Global ID (for OAM)"
        },
        {
          "name": "nodeId",
          "type": "vtss_ipv4_t",
          "description": "Node ID (for OAM)"
        },
        {
          "name": "iccCarrierCode",
          "type": "char *",
          "description": "ITU-T M.1400 Carrier Code (ICC)."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mplstp_link_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "OamActive",
          "type": "vtss_bool_t",
          "description": "Specifies whether Oam is currently active or not on this Link."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mplstp_link_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Port",
          "type": "vtss_ifindex_t",
          "description": "Physical port interface index."
        },
        {
          "name": "MACAddressNextHop",
          "type": "vtss_mac_t",
          "description": "MAC address of peer (next hop) MPLS node."
        },
        {
          "name": "MACAddress",
          "type": "vtss_mac_t",
          "description": "MAC address of this MPLS interface."
        },
        {
          "name": "VLANTagType",
          "type": "vtss_appl_mplstp_tagtype_t",
          "description": "VLAN tag type."
        },
        {
          "name": "VLANId",
          "type": "uint16_t",
          "description": "VLAN ID, if tag_type isn't untagged."
        },
        {
          "name": "VLANpcp",
          "type": "uint32_t",
          "description": "VLAN PCP; only relevant if tagged."
        },
        {
          "name": "VLANdei",
          "type": "uint8_t",
          "description": "VLAN DEI; only relevant if tagged."
        },
        {
          "name": "SrcNodeId",
          "type": "vtss_ipv4_t",
          "description": "Source node ID (for OAM)."
        },
        {
          "name": "SrcGlobalId",
          "type": "uint32_t",
          "description": "Source global ID (for OAM)."
        },
        {
          "name": "DstNodeId",
          "type": "vtss_ipv4_t",
          "description": "Destination node ID (for OAM)."
        },
        {
          "name": "DstGlobalId",
          "type": "uint32_t",
          "description": "Destination global ID (for OAM)."
        },
        {
          "name": "DstIfNum",
          "type": "uint32_t",
          "description": "Destination interface number (for OAM)."
        },
        {
          "name": "SrcNodeIdValid",
          "type": "vtss_bool_t",
          "description": "Source node ID valid (for OAM)."
        },
        {
          "name": "SrcGlobalIdValid",
          "type": "vtss_bool_t",
          "description": "Source global ID valid (for OAM)."
        },
        {
          "name": "DstGlobalIdValid",
          "type": "vtss_bool_t",
          "description": "Destination global ID valid (for OAM)."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mplstp_lsp_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "OamActive",
          "type": "vtss_bool_t",
          "description": "Specifies whether Oam is currently active or not on this LSP."
        },
        {
          "name": "State",
          "type": "vtss_appl_mplstp_state_t",
          "description": "Specifies current MPLS-TP LSP state."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mplstp_lsp_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "XcName",
          "type": "char *",
          "description": "LSP cross-connect name."
        },
        {
          "name": "SrcNodeId",
          "type": "vtss_ipv4_t",
          "description": "Source node ID (for OAM)."
        },
        {
          "name": "SrcNodeIdIsDefined",
          "type": "vtss_bool_t",
          "description": "Indicates if Source node ID (for OAM) is defined."
        },
        {
          "name": "SrcGlobalId",
          "type": "uint32_t",
          "description": "Source global ID (for OAM)."
        },
        {
          "name": "SrcGlobalIdIsDefined",
          "type": "vtss_bool_t",
          "description": "Indicates if Source global ID (for OAM) is defined."
        },
        {
          "name": "SrcTunnelTpNum",
          "type": "uint16_t",
          "description": "Source tunnel ID number (for OAM)."
        },
        {
          "name": "DstNodeId",
          "type": "vtss_ipv4_t",
          "description": "Destination node ID (for OAM)."
        },
        {
          "name": "DstGlobalId",
          "type": "uint32_t",
          "description": "Destination global ID (for OAM)."
        },
        {
          "name": "DstGlobalIdIsDefined",
          "type": "vtss_bool_t",
          "description": "Indicates if Destination global ID (for OAM) is defined."
        },
        {
          "name": "DstTunnelTpNum",
          "type": "uint16_t",
          "description": "Destination tunnel ID number (for OAM)."
        },
        {
          "name": "SrcLspNumber",
          "type": "uint16_t",
          "description": "Source LSP number (for OAM)."
        },
        {
          "name": "DstLspNumber",
          "type": "uint16_t",
          "description": "Destination LSP number (for OAM)."
        },
        {
          "name": "ForwardIngressLabel",
          "type": "uint32_t",
          "description": "Ingress MPLS label value or VTSS_APPL_MPLSTP_LABEL_NONE."
        },
        {
          "name": "ForwardEgressLabel",
          "type": "uint32_t",
          "description": "Egress MPLS label value or VTSS_APPL_MPLSTP_LABEL_NONE."
        },
        {
          "name": "ForwardAttachInterface",
          "type": "vtss_ifindex_t",
          "description": "Egress MPLS link interface or MPLS tunnel interface for forward part of LSP cross-connect."
        },
        {
          "name": "ForwardInCosMapId",
          "type": "uint8_t",
          "description": "Ingress Class of Service Map ID or 0 for forward part of LSP cross-connect."
        },
        {
          "name": "ForwardOutCosMapId",
          "type": "uint8_t",
          "description": "Egress Class of Service Map ID or 0 for forward part of LSP cross-connect."
        },
        {
          "name": "ForwardIsLLsp",
          "type": "vtss_bool_t",
          "description": "TRUE for L-LSP, FALSE for E-LSP. Note that for L-LSP, the Ingress Class of Service Map only maps the ingress Traffic Class to Drop Precedence. The Class of Service is given by the vtssMplsConfigLspForwardLLspCos field."
        },
        {
          "name": "ForwardHQoSId",
          "type": "uint16_t",
          "description": "HQoS Id for forward direction (1..256) or 0 for none"
        },
        {
          "name": "ForwardLLspCos",
          "type": "uint8_t",
          "description": "Ingress Class of Service for L-LSP (ForwardIsLLsp == TRUE)"
        },
        {
          "name": "ReverseIngressLabel",
          "type": "uint32_t",
          "description": "Ingress MPLS label value or VTSS_APPL_MPLSTP_LABEL_NONE."
        },
        {
          "name": "ReverseEgressLabel",
          "type": "uint32_t",
          "description": "Egress MPLS label value or VTSS_APPL_MPLSTP_LABEL_NONE."
        },
        {
          "name": "ReverseAttachInterface",
          "type": "vtss_ifindex_t",
          "description": "Egress MPLS link interface or MPLS tunnel endpoint interface for reverse part of LSP cross-connect."
        },
        {
          "name": "ReverseInCosMapId",
          "type": "uint8_t",
          "description": "Ingress Class of Service Map ID or 0 for reverse part of LSP cross-connect."
        },
        {
          "name": "ReverseOutCosMapId",
          "type": "uint8_t",
          "description": "Egress Class of Service Map ID or 0 for reverse part of LSP cross-connect."
        },
        {
          "name": "ReverseIsLLsp",
          "type": "vtss_bool_t",
          "description": "TRUE for L-LSP, FALSE for E-LSP. Note that for L-LSP, the Ingress Class of Service Map only maps the ingress Traffic Class to Drop Precedence. The Class of Service is given by the vtssMplsConfigLspReverseLLspCos field."
        },
        {
          "name": "ReverseLLspCos",
          "type": "uint8_t",
          "description": "Ingress Class of Service for L-LSP (ReverseIsLLsp == TRUE)"
        },
        {
          "name": "ReverseHQoSId",
          "type": "uint16_t",
          "description": "HQoS Id for reverse direction (1..256) or 0 for none"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mplstp_pw_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "OamActive",
          "type": "vtss_bool_t",
          "description": "Specifies whether Oam is currently active or not on this Pseudo Wire."
        },
        {
          "name": "State",
          "type": "vtss_appl_mplstp_state_t",
          "description": "Specifies current MPLS-TP Pseudo Wire state."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mplstp_pw_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "InLabel",
          "type": "uint32_t",
          "description": "PW local/ingress MPLS label value or VTSS_APPL_MPLSTP_LABEL_NONE."
        },
        {
          "name": "OutLabel",
          "type": "uint32_t",
          "description": "PW remote/egress MPLS label value or VTSS_APPL_MPLSTP_LABEL_NONE."
        },
        {
          "name": "ControlWord",
          "type": "uint32_t",
          "description": "PW control word value to use on egress."
        },
        {
          "name": "UseControlWord",
          "type": "vtss_bool_t",
          "description": "TRUE: Use control word on egress and ingress, FALSE: Do not use."
        },
        {
          "name": "TunnelMode",
          "type": "vtss_appl_mplstp_tunnel_mode_t",
          "description": "DiffServ tunnel modes for Traffic Class and TTL."
        },
        {
          "name": "TrafficClass",
          "type": "uint8_t",
          "description": "Traffic class used on egress unless overruled by uniform tunnel mode."
        },
        {
          "name": "Ttl",
          "type": "uint8_t",
          "description": "Time-to-live used on egress unless overruled by uniform tunnel mode."
        },
        {
          "name": "InCosMapId",
          "type": "uint8_t",
          "description": "Ingress Class of Service Map ID or 0 no mapping."
        },
        {
          "name": "OutCosMapId",
          "type": "uint8_t",
          "description": "Egress Class of Service Map ID or 0 for no mapping."
        },
        {
          "name": "IsLLsp",
          "type": "vtss_bool_t",
          "description": "TRUE for L-LSP, FALSE for E-LSP. Note that for L-LSP, the Ingress Class of Service Map only maps the ingress Traffic Class to Drop Precedence. The Class of Service is given by the LLspCos field."
        },
        {
          "name": "LLspCos",
          "type": "uint8_t",
          "description": "Ingress Class of Service for L-LSP (IsLLsp == TRUE)"
        },
        {
          "name": "AttachInterface",
          "type": "vtss_ifindex_t",
          "description": "MPLS link interface or MPLS tunnel endpoint number that PW is attached to."
        },
        {
          "name": "StitchPwInterface",
          "type": "vtss_ifindex_t",
          "description": "MPLS PW interface index to stitch this PW with, 0 for no stitch."
        },
        {
          "name": "VccvType",
          "type": "vtss_appl_mplstp_oam_vccv_t",
          "description": "MPLS PW OAM Vccv type."
        },
        {
          "name": "HQoSId",
          "type": "uint16_t",
          "description": "HQoS Id (1..256) or 0 for none. Will only take effect for stitched PWs."
        },
        {
          "name": "SrcNodeId",
          "type": "vtss_ipv4_t",
          "description": "Source node ID (for OAM)."
        },
        {
          "name": "SrcNodeIdIsDefined",
          "type": "vtss_bool_t",
          "description": "Indicates if Source node ID (for OAM) is defined."
        },
        {
          "name": "SrcGlobalId",
          "type": "uint32_t",
          "description": "Source global ID (for OAM)."
        },
        {
          "name": "SrcGlobalIdIsDefined",
          "type": "vtss_bool_t",
          "description": "Indicates if Source global ID (for OAM) is defined."
        },
        {
          "name": "DstNodeId",
          "type": "vtss_ipv4_t",
          "description": "Destination node ID (for OAM)."
        },
        {
          "name": "DstGlobalId",
          "type": "uint32_t",
          "description": "Destination global ID (for OAM)."
        },
        {
          "name": "DstGlobalIdIsDefined",
          "type": "vtss_bool_t",
          "description": "Indicates if Destination global ID (for OAM) is defined."
        },
        {
          "name": "SrcAcId",
          "type": "uint32_t",
          "description": "Source AC_ID (for OAM)."
        },
        {
          "name": "DstAcId",
          "type": "uint32_t",
          "description": "Destination AC_ID (for OAM)."
        },
        {
          "name": "SrcAgiValue",
          "type": "unsigned char *",
          "description": "Source AGI Value (for OAM)."
        },
        {
          "name": "DstAgiValue",
          "type": "unsigned char *",
          "description": "Destination AGI Value (for OAM).."
        },
        {
          "name": "SrcAgiType",
          "type": "uint8_t",
          "description": "Source AGI Type (for OAM)."
        },
        {
          "name": "SrcAgiLength",
          "type": "uint8_t",
          "description": "Source AGI Length 0-7 (for OAM)."
        },
        {
          "name": "DstAgiType",
          "type": "uint8_t",
          "description": "Destination AGI Type (for OAM)."
        },
        {
          "name": "DstAgiLength",
          "type": "uint8_t",
          "description": "Destination AGI Length 0-7 (for OAM)."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mplstp_tunnel_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "OamActive",
          "type": "vtss_bool_t",
          "description": "Specifies whether Oam is currently active or not on this Tunnel."
        },
        {
          "name": "State",
          "type": "vtss_appl_mplstp_state_t",
          "description": "Specifies current MPLS-TP Tunnel state."
        },
        {
          "name": "IngressLabel",
          "type": "uint32_t",
          "description": "Current MPLS-TP Tunnel ingress MPLS label value or VTSS_APPL_MPLSTP_LABEL_NONE."
        },
        {
          "name": "EgressLabel",
          "type": "uint32_t",
          "description": "Current MPLS-TP Tunnel egress MPLS label value or VTSS_APPL_MPLSTP_LABEL_NONE."
        },
        {
          "name": "WorkingActive",
          "type": "vtss_bool_t",
          "description": "TRUE if working tunnel is active in a protection setup, FALSE if protection tunnel is active. Always TRUE for non-protection case."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mplstp_tunnel_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "TunnelName",
          "type": "char *",
          "description": "Tunnel name."
        },
        {
          "name": "TunnelMode",
          "type": "vtss_appl_mplstp_tunnel_mode_t",
          "description": "DiffServ tunnel modes for Traffic Class and TTL."
        },
        {
          "name": "SrcNodeId",
          "type": "vtss_ipv4_t",
          "description": "Source node ID (for OAM)."
        },
        {
          "name": "SrcGlobalId",
          "type": "uint32_t",
          "description": "Source global ID (for OAM)."
        },
        {
          "name": "DstNodeId",
          "type": "vtss_ipv4_t",
          "description": "Destination node ID (for OAM)."
        },
        {
          "name": "DstGlobalId",
          "type": "uint32_t",
          "description": "Destination global ID (for OAM)."
        },
        {
          "name": "DstTunnelTpNum",
          "type": "uint32_t",
          "description": "Destination tunnel ID number (for OAM)."
        },
        {
          "name": "SrcTunnelTpNum",
          "type": "uint16_t",
          "description": "Source tunnel ID number (if SPME, for OAM)."
        },
        {
          "name": "SrcLspNum",
          "type": "uint16_t",
          "description": "Source LSP number (if SPME, for OAM)."
        },
        {
          "name": "DstLspNum",
          "type": "uint16_t",
          "description": "Destination LSP number (if SPME, for OAM)."
        },
        {
          "name": "IsSpme",
          "type": "vtss_bool_t",
          "description": "TRUE if tunnel endpoint is an SPME (OAM)."
        },
        {
          "name": "SrcNodeIsValid",
          "type": "vtss_bool_t",
          "description": "Source node ID valid (for OAM)."
        },
        {
          "name": "SrcGlobalIdValid",
          "type": "vtss_bool_t",
          "description": "Source global ID valid (for OAM)."
        },
        {
          "name": "DstGlobalIdValid",
          "type": "vtss_bool_t",
          "description": "Destination global ID valid (for OAM)."
        },
        {
          "name": "IngressLabel",
          "type": "uint32_t",
          "description": "Ingress MPLS label value or VTSS_APPL_MPLSTP_LABEL_NONE."
        },
        {
          "name": "EgressLabel",
          "type": "uint32_t",
          "description": "Egress MPLS label value or VTSS_APPL_MPLSTP_LABEL_NONE."
        },
        {
          "name": "AttachInterface",
          "type": "vtss_ifindex_t",
          "description": "MPLS link interface or MPLS tunnel endpoint interface that tunnel endpoint is attached to."
        },
        {
          "name": "TrafficClass",
          "type": "uint8_t",
          "description": "Traffic class used on egress unless overruled by uniform tunnel mode."
        },
        {
          "name": "Ttl",
          "type": "uint8_t",
          "description": "Time-to-live used on egress unless overruled by uniform tunnel mode."
        },
        {
          "name": "InCosMapId",
          "type": "uint8_t",
          "description": "Ingress Class of Service Map ID or 0 for no mapping."
        },
        {
          "name": "OutCosMapId",
          "type": "uint8_t",
          "description": "Egress Class of Service Map ID or 0 for no mapping."
        },
        {
          "name": "IsLLsp",
          "type": "vtss_bool_t",
          "description": "TRUE for L-LSP, FALSE for E-LSP. Note that for L-LSP, the Ingress Class of Service Map only maps the ingress Traffic Class to Drop Precedence. The Class of Service is given by the vtssMplsConfigTunnelLLspCos field."
        },
        {
          "name": "LLspCos",
          "type": "uint8_t",
          "description": "Ingress Class of Service for L-LSP (vtssMplsConfigTunnelIsLLsp == TRUE)"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mstp_bridge_param_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "BridgeMaxAge",
          "type": "uint32_t",
          "description": "Bridge Max Age, IEEE-802.1D-2004 sect 13.23.4"
        },
        {
          "name": "BridgeHelloTime",
          "type": "uint32_t",
          "description": "Bridge Hello Time, 13.25.7 of IEEE-802.1Q-2005. Fixed value of two seconds by the standard, but this implementation allow a compatibility range from 1 to 2 seconds, in stipulated in 802.1Q-2005"
        },
        {
          "name": "BridgeForwardDelay",
          "type": "uint32_t",
          "description": "Bridge Forward Delay, IEEE-802.1D-2004 sect 17.20"
        },
        {
          "name": "ForceVersion",
          "type": "vtss_appl_mstp_forceversion_t",
          "description": "value of the Force Protocol Version parameter - 13.6.2 of IEEE-802.1Q-2005"
        },
        {
          "name": "TxHoldCount",
          "type": "uint32_t",
          "description": "TxHoldCount - 17.13.12 of IEEE Std 802.1D"
        },
        {
          "name": "MaxHops",
          "type": "uint8_t",
          "description": "MaxHops - 13.22.1 of IEEE-802.1Q-2005"
        },
        {
          "name": "BpduFiltering",
          "type": "vtss_bool_t",
          "description": "BPDU filtering for edge ports. Control whether a port explicitly configured as Edge will transmit and receive BPDUs"
        },
        {
          "name": "BpduGuard",
          "type": "vtss_bool_t",
          "description": "BPDU guard for edge ports. Control whether a port explicitly configured as Edge will disable itself upon reception of a BPDU. The port will enter the error-disabled state, and will be removed from the active topology. "
        },
        {
          "name": "ErrorRecoveryDelay",
          "type": "uint32_t",
          "description": "The number of seconds until a STP inconsistent port is recovered. Valid values are zero (recovery disabled) or between 30 and 86400 (24 hours)"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mstp_bridge_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "BridgeId",
          "type": "unsigned char *",
          "description": "Bridge Identifier of this bridge"
        },
        {
          "name": "TimeSinceTopologyChange",
          "type": "uint32_t",
          "description": "The count in seconds of the time elapsed since the Topology Change flag was last True"
        },
        {
          "name": "TopologyChangeCount",
          "type": "uint32_t",
          "description": "The count of the times the Topology Change flag parameter for the Bridge has been set since the Bridge was powered on or initialized"
        },
        {
          "name": "TopologyChange",
          "type": "vtss_bool_t",
          "description": "Topology Change Flag current status"
        },
        {
          "name": "DesignatedRoot",
          "type": "unsigned char *",
          "description": "Designated Root Bridge"
        },
        {
          "name": "RootPathCost",
          "type": "uint32_t",
          "description": "Root Path Cost"
        },
        {
          "name": "RootPort",
          "type": "uint32_t",
          "description": "Root Port"
        },
        {
          "name": "MaxAge",
          "type": "uint32_t",
          "description": "Max Age, IEEE-802.1D-2004 sect 13.23.7"
        },
        {
          "name": "ForwardDelay",
          "type": "uint32_t",
          "description": "Forward Delay, IEEE-802.1D-2004 sect 13.23.7"
        },
        {
          "name": "BridgeMaxAge",
          "type": "uint32_t",
          "description": "Bridge Max Age, IEEE-802.1D-2004 sect 13.23.4"
        },
        {
          "name": "BridgeHelloTime",
          "type": "uint32_t",
          "description": "Bridge Hello Time, IEEE-802.1D-2004 sect 13.23.4"
        },
        {
          "name": "BridgeForwardDelay",
          "type": "uint32_t",
          "description": "Bridge Forward Delay, IEEE-802.1D-2004 sect 13.23.4"
        },
        {
          "name": "TxHoldCount",
          "type": "uint32_t",
          "description": "Hold Time / Transmission Limit, IEEE-802.1D-2004 sect 13.22"
        },
        {
          "name": "ForceVersion",
          "type": "vtss_appl_mstp_forceversion_t",
          "description": "Value of the Force Protocol Version parameter - IEEE-802.1D-2004 sect 17.16.1"
        },
        {
          "name": "CistRegionalRoot",
          "type": "unsigned char *",
          "description": "CIST Regional Root Identifier (13.16.4)"
        },
        {
          "name": "CistInternalPathCost",
          "type": "uint32_t",
          "description": "CIST Path Cost"
        },
        {
          "name": "MaxHops",
          "type": "uint8_t",
          "description": "MaxHops (13.22.1)"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mstp_port_config_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enable",
          "type": "vtss_bool_t",
          "description": "Control whether port is controlled by xSTP. If disabled, the port forwarding state follow the MAC state"
        },
        {
          "name": "AdminEdgePort",
          "type": "vtss_bool_t",
          "description": "adminEdgePort parameter - 18.3.3 of IEEE Std 802.1D"
        },
        {
          "name": "AdminAutoEdgePort",
          "type": "vtss_bool_t",
          "description": "adminAutoEdgePort parameter - 17.13.3 of IEEE Std 802.1D"
        },
        {
          "name": "adminPointToPointMAC",
          "type": "vtss_appl_mstp_p2p_t",
          "description": "adminPointToPointMAC parameter - 6.4.3 of IEEE Std 802.1D"
        },
        {
          "name": "RestrictedRole",
          "type": "vtss_bool_t",
          "description": "restrictedRole parameter - 13.25.14 of IEEE Std 802.1Q-2005"
        },
        {
          "name": "RestrictedTcn",
          "type": "vtss_bool_t",
          "description": "restrictedRole parameter - 13.25.15 of IEEE Std 802.1Q-2005"
        },
        {
          "name": "BpduGuard",
          "type": "vtss_bool_t",
          "description": "If enabled, causes the port to disable itself upon receiving valid BPDU's. Contrary to the similar bridge setting, the port Edge status does not effect this setting. A port entering error-disabled state due to this setting is subject to the bridge ErrorRecoveryDelay setting as well"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mstp_port_mgmt_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enabled",
          "type": "vtss_bool_t",
          "description": "Whether port is controlled by xSTP"
        },
        {
          "name": "Active",
          "type": "vtss_bool_t",
          "description": "Whether port is active"
        },
        {
          "name": "ParentPort",
          "type": "uint32_t",
          "description": "Parent port if physical port is aggregated. (Otherwise 0xffff)"
        },
        {
          "name": "UpTime",
          "type": "uint32_t",
          "description": "seconds of the time elapsed since the Port was last reset or initialized"
        },
        {
          "name": "PortState",
          "type": "vtss_appl_mstp_portstate_t",
          "description": "Current state of the Port"
        },
        {
          "name": "PortId",
          "type": "unsigned char *",
          "description": "Unique Port identifier comprising two parts, the Port Number and the Port Priority field"
        },
        {
          "name": "PathCost",
          "type": "uint32_t",
          "description": "Path Cost (17.16.5 of IEEE Std 802.1D)"
        },
        {
          "name": "DesignatedRoot",
          "type": "unsigned char *",
          "description": "Designated Root"
        },
        {
          "name": "DesignatedCost",
          "type": "uint32_t",
          "description": "Designated Cost"
        },
        {
          "name": "DesignatedBridge",
          "type": "unsigned char *",
          "description": "Designated Bridge"
        },
        {
          "name": "DesignatedPort",
          "type": "unsigned char *",
          "description": "Designated Port"
        },
        {
          "name": "TcAck",
          "type": "vtss_bool_t",
          "description": "Topology Change Acknowledge"
        },
        {
          "name": "HelloTime",
          "type": "uint32_t",
          "description": "Hello Time"
        },
        {
          "name": "AdminEdgePort",
          "type": "vtss_bool_t",
          "description": "adminEdgePort (18.3.3 of IEEE Std 802.1D)"
        },
        {
          "name": "OperEdgePort",
          "type": "vtss_bool_t",
          "description": "operEdgePort (18.3.4 of IEEE Std 802.1D)"
        },
        {
          "name": "AutoEdgePort",
          "type": "vtss_bool_t",
          "description": "autoEdgePort (17.13.3 of IEEE Std 802.1D)"
        },
        {
          "name": "MacOperational",
          "type": "vtss_bool_t",
          "description": "Current state of the MAC Operational parameter (6.4.2 of IEEE Std 802.1D,)"
        },
        {
          "name": "AdminPointToPointMAC",
          "type": "vtss_appl_mstp_p2p_t",
          "description": "Current state of the adminPointToPointMAC parameter (6.4.3 of IEEE Std 802.1D)"
        },
        {
          "name": "OperPointToPointMAC",
          "type": "vtss_bool_t",
          "description": "Current state of the operPointToPointMAC parameter (6.4.3 of IEEE Std 802.1D)"
        },
        {
          "name": "RestrictedRole",
          "type": "vtss_bool_t",
          "description": "Current state of the restrictedRole parameter for the Port (13.25.14)"
        },
        {
          "name": "RestrictedTcn",
          "type": "vtss_bool_t",
          "description": "Current state of the restrictedTcn parameter for the Port (13.25.15)"
        },
        {
          "name": "PortRole",
          "type": "char *",
          "description": "Current Port Role"
        },
        {
          "name": "Disputed",
          "type": "vtss_bool_t",
          "description": "Current value of the disputed variable for the CIST Port"
        }
      ]
    },
    {
      "type-name": "vtss_appl_mvrp_config_global_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_bool_t",
          "description": "Global mode of MVRP. TRUE - enable MVRP, FALSE - disable MVRP."
        },
        {
          "name": "JoinTime",
          "type": "int32_t",
          "description": "Join-time protocol parameter. Range [1, 20]cs."
        },
        {
          "name": "LeaveTime",
          "type": "int32_t",
          "description": "Leave-time protocol parameter. Range [60, 300]cs."
        },
        {
          "name": "LeaveAllTime",
          "type": "int32_t",
          "description": "Leave-all-time protocol parameter. Range [1000, 5000] cs."
        },
        {
          "name": "ManagedVlans",
          "type": "vtss_vid_list_t",
          "description": "MVRP-managed VLANs."
        }
      ]
    },
    {
      "type-name": "vtss_appl_mvrp_config_interface_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_bool_t",
          "description": "Per-interface mode of MVRP. TRUE - enable MVRP on the interface, FALSE - disable MVRP on the interface."
        }
      ]
    },
    {
      "type-name": "vtss_appl_nas_client_info_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "VlanId",
          "type": "vtss_vid_t",
          "description": "VLAN ID."
        },
        {
          "name": "Mac",
          "type": "vtss_mac_t",
          "description": "Binary version of MacAddrStr."
        },
        {
          "name": "Identity",
          "type": "char *",
          "description": "Identity string."
        }
      ]
    },
    {
      "type-name": "vtss_appl_nas_interface_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "status",
          "type": "vtss_appl_nas_port_status_t",
          "description": "dot1x port status."
        },
        {
          "name": "qosClass",
          "type": "uint32_t",
          "description": "QoS class for this port. If vaule is 4294967295 then it means that the QoS is not overridden."
        },
        {
          "name": "vlanType",
          "type": "vtss_appl_nas_vlan_type_t",
          "description": "VLAN Type for this port."
        },
        {
          "name": "vlanId",
          "type": "vtss_vid_t",
          "description": "VLAN Id for this port."
        }
      ]
    },
    {
      "type-name": "vtss_appl_nas_port_cfg_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "adminState",
          "type": "vtss_appl_nas_port_control_t",
          "description": "Administrative State.\nTypeNone       : Forces an interface to be disabled.\nforceAuthorized : Forces an interface to grant access to all clients, 802.1X-aware or not.\nauto           : Requires an 802.1X-aware client to be authorized by the authentication server. Clients that are not 802.1X-aware will be denied access.\nunauthorized   : Forces an interface to deny access to all clients, 802.1X-aware or not.\nmacBased       : The switch authenticates on behalf of the client, using the client MAC-address as the username and password and MD5 EAP method.\ndot1xSingle    : At most one supplicant is allowed to authenticate, and it authenticates using normal 802.1X frames.\ndot1xmulti     : One or more supplicants are allowed to authenticate individually using an 802.1X variant, where EAPOL frames sent from the switch are directed towards the supplicants MAC address instead of using the multi-cast BPDU MAC address. Unauthenticated supplicants will not get access."
        },
        {
          "name": "RadiusAssignedQosState",
          "type": "vtss_bool_t",
          "description": "Set to TRUE to enable RADIUS-assigned QoS for this interface."
        },
        {
          "name": "RadiusAssignedVlanState",
          "type": "vtss_bool_t",
          "description": "Set to TRUE to enable RADIUS-assigned VLAN for this interface."
        },
        {
          "name": "GuestVlanState",
          "type": "vtss_bool_t",
          "description": "Set to TRUE to enable Guest-VLAN for this interface."
        }
      ]
    },
    {
      "type-name": "vtss_appl_pm_control_globals_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "DeleteLmStatisticsAll",
          "type": "vtss_bool_t",
          "description": "Clear all the LM statistics."
        },
        {
          "name": "DeleteDmStatisticsAll",
          "type": "vtss_bool_t",
          "description": "Clear all the DM statistics."
        },
        {
          "name": "DeleteEvcStatisticsAll",
          "type": "vtss_bool_t",
          "description": "Clear all the EVC statistics."
        }
      ]
    },
    {
      "type-name": "vtss_appl_pm_evc_stats_data_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "EvcInstance",
          "type": "uint16_t",
          "description": "The EVC instance for the performance monitor data sets."
        },
        {
          "name": "PortType",
          "type": "vtss_appl_pm_evc_port_type_t",
          "description": "The port type for the EVC."
        },
        {
          "name": "Port",
          "type": "vtss_ifindex_t",
          "description": "The interface ID for the EVC."
        },
        {
          "name": "Cos",
          "type": "uint32_t",
          "description": "The COS queue ID on the interface, '4294967295' indicates the port is NNI port."
        },
        {
          "name": "GreenRxFrames",
          "type": "uint64_t",
          "description": "The number of green frames received."
        },
        {
          "name": "GreenTxFrames",
          "type": "uint64_t",
          "description": "The number of green frames transmitted."
        },
        {
          "name": "GreenRxBytes",
          "type": "uint64_t",
          "description": "The number of green bytes received."
        },
        {
          "name": "GreenTxBytes",
          "type": "uint64_t",
          "description": "The number of green bytes transmitted."
        },
        {
          "name": "YellowRxFrames",
          "type": "uint64_t",
          "description": "The number of yellow frames received."
        },
        {
          "name": "YellowTxFrames",
          "type": "uint64_t",
          "description": "The number of yellow frames transmitted."
        },
        {
          "name": "YellowRxBytes",
          "type": "uint64_t",
          "description": "The number of yellow bytes received."
        },
        {
          "name": "YellowTxBytes",
          "type": "uint64_t",
          "description": "The number of yellow bytes transmitted."
        },
        {
          "name": "RedRxFrames",
          "type": "uint64_t",
          "description": "The number of red frames received."
        },
        {
          "name": "RedRxBytes",
          "type": "uint64_t",
          "description": "The number of red bytes received."
        },
        {
          "name": "DiscardedRxFrames",
          "type": "uint64_t",
          "description": "The number of frames discarded in the ingress queue system."
        },
        {
          "name": "DiscardedTxFrames",
          "type": "uint64_t",
          "description": "The number of frames discarded in the egress queue system."
        },
        {
          "name": "DiscardedRxBytes",
          "type": "uint64_t",
          "description": "The number of bytes discarded in the ingress queue system."
        },
        {
          "name": "DiscardedTxBytes",
          "type": "uint64_t",
          "description": "The number of bytes discarded in the egress queue system."
        }
      ]
    },
    {
      "type-name": "vtss_appl_pm_global_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "LmAdminState",
          "type": "vtss_bool_t",
          "description": "Administrative control for PM's LM function, TRUE is to enable monitoring LM and FALSE is to disable it."
        },
        {
          "name": "LmStorageState",
          "type": "vtss_bool_t",
          "description": "Administrative control for storing PM's LM result, TRUE is to enable storing LM statistics and FALSE is to disable it."
        },
        {
          "name": "LmInterval",
          "type": "uint8_t",
          "description": "Interval for tracking LM, in minute. The configurable value ranges from 1 to 60."
        },
        {
          "name": "DmAdminState",
          "type": "vtss_bool_t",
          "description": "Administrative control for PM's DM function, TRUE is to enable monitoring DM and FALSE is to disable it."
        },
        {
          "name": "DmStorageState",
          "type": "vtss_bool_t",
          "description": "Administrative control for storing PM's DM result, TRUE is to enable storing DM statistics and FALSE is to disable it."
        },
        {
          "name": "DmInterval",
          "type": "uint8_t",
          "description": "Interval for tracking DM, in minute. The configurable value ranges from 1 to 60."
        },
        {
          "name": "DmBinStorageState",
          "type": "vtss_bool_t",
          "description": "Administrative control for storing PM's DM bucket result, TRUE is to enable storing DM bucket statistics and FALSE is to disable it."
        },
        {
          "name": "EvcAdminState",
          "type": "vtss_bool_t",
          "description": "Administrative control for PM's EVC monitoring function, TRUE is to enable monitoring EVC and FALSE is to disable it."
        },
        {
          "name": "EvcStorageState",
          "type": "vtss_bool_t",
          "description": "Administrative control for storing PM's EVC monitoring result, TRUE is to enable storing EVC statistics and FALSE is to disable it."
        },
        {
          "name": "EvcMeasureInterval",
          "type": "uint8_t",
          "description": "Interval for tracking EVC, in minute. The configurable value ranges from 1 to 60."
        }
      ]
    },
    {
      "type-name": "vtss_appl_pm_mep_info_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "MepInstance",
          "type": "uint16_t",
          "description": "The MEP instance for the performance monitor data sets."
        },
        {
          "name": "ResidencePort",
          "type": "vtss_ifindex_t",
          "description": "The residence port for the MEP."
        },
        {
          "name": "MepId",
          "type": "uint16_t",
          "description": "Two bytes CCM MEP ID in the transmitted CCM."
        },
        {
          "name": "MepMacAddress",
          "type": "vtss_mac_t",
          "description": "MAC address of this MEP which can be used by other MEP when unicast is selected."
        },
        {
          "name": "MepPeerMepId",
          "type": "uint16_t",
          "description": "An expected MEP identifier in the received CCM."
        },
        {
          "name": "MepPeerMacAddress",
          "type": "vtss_mac_t",
          "description": "MAC address to be used when unicast is selected with the peer MEP. Also, this MAC is used to create HW checking of receiving CCM PDU from this MEP."
        },
        {
          "name": "MepDirection",
          "type": "vtss_appl_mep_direction_t",
          "description": "Upstream or downstream that needs to be monitored."
        },
        {
          "name": "MepLevel",
          "type": "uint8_t",
          "description": "The MEG level of this MEP."
        },
        {
          "name": "MepFlowInstance",
          "type": "vtss_ifindex_t",
          "description": "The MEP is related to this flow depends on 'MepDomain'."
        },
        {
          "name": "MepTaggedVid",
          "type": "uint16_t",
          "description": "An outer C/S-tag or the subscriber VID that identifies the subscriber flow in EVC where the MIP is active."
        },
        {
          "name": "Priority",
          "type": "uint32_t",
          "description": "The priority to be inserted as PCP bits in TAG (if any)."
        }
      ]
    },
    {
      "type-name": "vtss_appl_pm_transfer_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AdminState",
          "type": "vtss_bool_t",
          "description": "Administrative control for PM's transfer function, TRUE is to enable sending PM's monitoring result and FALSE is to disable it."
        },
        {
          "name": "ServerUrl",
          "type": "char *",
          "description": "The URL for the server directory that keeps PM's monitoring result."
        },
        {
          "name": "IntervalMode",
          "type": "vtss_appl_pm_transfer_mode_t",
          "description": "Transfer mode, based on selected interval type, for sending PM results. When 'all' is set, PM result from all available intervals will be sent. When 'new' is set, PM result from new intervals since last transfer will be sent. When 'fixAmount' is set, PM result from a fixed number of intervals will be sent."
        },
        {
          "name": "FixedNumberOfInterval",
          "type": "uint8_t",
          "description": "PM result from this fixed number of intervals will be sent. It is working only when 'IntervalMode' is 'fixAmount'. The configurable value ranges from 1 to 96."
        },
        {
          "name": "RetryIncompletedTransfer",
          "type": "vtss_bool_t",
          "description": "Administrative control to retry sending PM result from last incompleted transmission, TRUE is to enable retrying the incompleted PM result transfer and FALSE is to disable it."
        }
      ]
    },
    {
      "type-name": "vtss_appl_pm_transfer_schedule_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enabled",
          "type": "vtss_bool_t",
          "description": "Administrative control for managing the transfer schedule, TRUE is to enable specific time for transfer schedule and FALSE is to disable it."
        }
      ]
    },
    {
      "type-name": "vtss_appl_port_mib_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Shutdown",
          "type": "vtss_bool_t",
          "description": "Controls whether interface is shutdown or powered up. Set to TRUE in order to power down the interface."
        },
        {
          "name": "Speed",
          "type": "vtss_appl_port_speed_t",
          "description": "Controls the port speed and duplex."
        },
        {
          "name": "AdvertiseDisabled",
          "type": "uint8_t",
          "description": "In auto mode, bitmask that allows features not                                        to be advertised.\n                                        Bit 0: Disable half duplex advertising.\n                                       Bit 1: Disable full duplex advertising.\n                                       Bit 4: Disable 1G advertising.\n                                       Bit 6: Disable 100M advertising.\n                                       Bit 7: Disable 10M advertising.\n                                       When not in auto mode, the value shall be zero."
        },
        {
          "name": "MediaType",
          "type": "vtss_appl_port_media_t",
          "description": "Controls the port media type."
        },
        {
          "name": "FC",
          "type": "vtss_appl_port_fc_t",
          "description": "Controls the port flow control mode."
        },
        {
          "name": "MTU",
          "type": "uint32_t",
          "description": "Controls the port's Maximum Transmission Unit."
        },
        {
          "name": "ExcessiveRestart",
          "type": "vtss_bool_t",
          "description": "TRUE to restart half-duplex back-off algorithm after 16 collisions. FALSE to discard frame after 16 collisions"
        },
        {
          "name": "PFC",
          "type": "uint8_t",
          "description": "802.1Qbb Priority Flow Control bitmask, one bit for each prioritet.E.g. 0x01 = prio 0, 0x80 = prio 7, 0xFF = prio 0-7"
        }
      ]
    },
    {
      "type-name": "vtss_appl_port_mib_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Link",
          "type": "vtss_bool_t",
          "description": "Shows whether interface has link."
        },
        {
          "name": "Fdx",
          "type": "vtss_bool_t",
          "description": "Shows whether interface is running in full duplex."
        },
        {
          "name": "Fiber",
          "type": "vtss_bool_t",
          "description": "Shows whether interface is a fiber link (fiber SFP or cu SFP)."
        },
        {
          "name": "Speed",
          "type": "vtss_port_speed_t",
          "description": "Shows the current interface speed."
        },
        {
          "name": "SFPType",
          "type": "vtss_appl_sfp_tranceiver_t",
          "description": "Shows the current interface SFP type."
        },
        {
          "name": "SFPVendorName",
          "type": "char *",
          "description": "Shows the SFP vendor name."
        },
        {
          "name": "SFPVendorPN",
          "type": "char *",
          "description": "Shows the SFP vendor Product Number."
        },
        {
          "name": "SFPVendorRev",
          "type": "char *",
          "description": "Shows the SFP vendor Revision."
        },
        {
          "name": "LossOfSignal",
          "type": "vtss_bool_t",
          "description": "SFP Loss Of Signal."
        },
        {
          "name": "TxFault",
          "type": "vtss_bool_t",
          "description": "SFP Transmit Fault."
        },
        {
          "name": "Present",
          "type": "vtss_bool_t",
          "description": "SFP module present."
        }
      ]
    },
    {
      "type-name": "vtss_appl_port_power_saving_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "LinkPartner",
          "type": "vtss_bool_t",
          "description": "Indicate whether interface is capable for detecting link partner or not. true means interface is capable to detect link partner, false means interface is not capable to detect link partner."
        },
        {
          "name": "ShortReach",
          "type": "vtss_bool_t",
          "description": "Indicates whether interface is able to determine the cable length connected to partner port. true means interface is capable to determine the cable length, false means interface is not capable to determine the cable length."
        }
      ]
    },
    {
      "type-name": "vtss_appl_port_power_saving_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "LinkPartner",
          "type": "vtss_bool_t",
          "description": "Save port power if there is no link partner connected to the port. true is to enable port power saving when there is no link partner connected, false is to disable it."
        },
        {
          "name": "ShortReach",
          "type": "vtss_bool_t",
          "description": "Save port power if port is connected to link partner through short cable. true is to enable port power saving when link partner connected through short cable, false is to disable it."
        }
      ]
    },
    {
      "type-name": "vtss_appl_port_power_saving_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "NoLinkPartner",
          "type": "vtss_appl_power_saving_status_t",
          "description": "Indicate whether port is saving power due to no link partner connected."
        },
        {
          "name": "ShortCable",
          "type": "vtss_appl_power_saving_status_t",
          "description": "Indicate whether port is saving power due to link partner connected through short cable."
        }
      ]
    },
    {
      "type-name": "vtss_appl_port_veriphy_result_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "VeriPhyStatusPairA",
          "type": "vtss_phy_veriphy_status_t",
          "description": "VeriPhy status for the cable pair\n                                            0  - Cable is Correctly terminated pair\n                                      1  - Open pair\n                                                               2  - Shorted pair\n                                                            4  - Abnormal termination\n                                                    8  - Cross-pair short to pair A\n                                              9  - Cross-pair short to pair B\n                                              10 - Cross-pair short to pair C\n                                              11 - Cross-pair short to pair D\n                                              12 - Abnormal cross-pair coupling - pair A\n                                   13 - Abnormal cross-pair coupling - pair B\n                                   14 - Abnormal cross-pair coupling - pair C\n                                   15 - Abnormal cross-pair coupling - pair D"
        },
        {
          "name": "VeriPhyStatusPairB",
          "type": "vtss_phy_veriphy_status_t",
          "description": "VeriPhy status for the cable pair\n                                            0  - Cable is Correctly terminated pair\n                                      1  - Open pair\n                                                               2  - Shorted pair\n                                                            4  - Abnormal termination\n                                                    8  - Cross-pair short to pair A\n                                              9  - Cross-pair short to pair B\n                                              10 - Cross-pair short to pair C\n                                              11 - Cross-pair short to pair D\n                                              12 - Abnormal cross-pair coupling - pair A\n                                   13 - Abnormal cross-pair coupling - pair B\n                                   14 - Abnormal cross-pair coupling - pair C\n                                   15 - Abnormal cross-pair coupling - pair D"
        },
        {
          "name": "VeriPhyStatusPairC",
          "type": "vtss_phy_veriphy_status_t",
          "description": "VeriPhy status for the cable pair\n                                            0  - Cable is Correctly terminated pair\n                                      1  - Open pair\n                                                               2  - Shorted pair\n                                                            4  - Abnormal termination\n                                                    8  - Cross-pair short to pair A\n                                              9  - Cross-pair short to pair B\n                                              10 - Cross-pair short to pair C\n                                              11 - Cross-pair short to pair D\n                                              12 - Abnormal cross-pair coupling - pair A\n                                   13 - Abnormal cross-pair coupling - pair B\n                                   14 - Abnormal cross-pair coupling - pair C\n                                   15 - Abnormal cross-pair coupling - pair D"
        },
        {
          "name": "VeriPhyStatusPairD",
          "type": "vtss_phy_veriphy_status_t",
          "description": "VeriPhy status for the cable pair\n                                            0  - Cable is Correctly terminated pair\n                                      1  - Open pair\n                                                               2  - Shorted pair\n                                                            4  - Abnormal termination\n                                                    8  - Cross-pair short to pair A\n                                              9  - Cross-pair short to pair B\n                                              10 - Cross-pair short to pair C\n                                              11 - Cross-pair short to pair D\n                                              12 - Abnormal cross-pair coupling - pair A\n                                   13 - Abnormal cross-pair coupling - pair B\n                                   14 - Abnormal cross-pair coupling - pair C\n                                   15 - Abnormal cross-pair coupling - pair D"
        },
        {
          "name": "VeriPhyLengthStatusPairA",
          "type": "uint8_t",
          "description": "VeriPhy status cable length i meters for the cable pair.                                  When VeriPhy is completed, the cable diagnostics results is shown in the VeriPhy status table. Note that VeriPHY is only accurate for cables of length 7 - 140 meters.\n                                  The resolution is 3 meters"
        },
        {
          "name": "VeriPhyLengthStatusPairB",
          "type": "uint8_t",
          "description": "VeriPhy status cable length i meters for the cable pair.                                  When VeriPhy is completed, the cable diagnostics results is shown in the VeriPhy status table. Note that VeriPHY is only accurate for cables of length 7 - 140 meters.\n                                  The resolution is 3 meters"
        },
        {
          "name": "VeriPhyLengthStatusPairC",
          "type": "uint8_t",
          "description": "VeriPhy status cable length i meters for the cable pair.                                  When VeriPhy is completed, the cable diagnostics results is shown in the VeriPhy status table. Note that VeriPHY is only accurate for cables of length 7 - 140 meters.\n                                  The resolution is 3 meters"
        },
        {
          "name": "VeriPhyLengthStatusPairD",
          "type": "uint8_t",
          "description": "VeriPhy status cable length i meters for the cable pair.                                  When VeriPhy is completed, the cable diagnostics results is shown in the VeriPhy status table. Note that VeriPHY is only accurate for cables of length 7 - 140 meters.\n                                  The resolution is 3 meters"
        }
      ]
    },
    {
      "type-name": "vtss_appl_psec_limit_glbl_cfg_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "enabled",
          "type": "vtss_bool_t",
          "description": "Globally enable/disable aging of secured entries. This doesn't affect aging of addresses secured by other modules."
        },
        {
          "name": "enableAging",
          "type": "vtss_bool_t",
          "description": "If aging is globally enabled, this is the aging period in seconds. Valid range is [10; 10000000] seconds(max is around 115 days)."
        },
        {
          "name": "agingPeriodSecs",
          "type": "uint32_t",
          "description": "If aging is globally enabled, this is the aging period in seconds. Valid range is [10; 10000000] seconds(max is around 115 days)."
        }
      ]
    },
    {
      "type-name": "vtss_appl_psec_limit_port_cfg_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "enabled",
          "type": "vtss_bool_t",
          "description": "Controls whether Port Security Limit Control is enabled for this port."
        },
        {
          "name": "limit",
          "type": "uint32_t",
          "description": "Maximum number of MAC addresses allowed on this port.Valid values = [PSEC_LIMIT_MIN; PSEC_LIMIT_MAX]."
        },
        {
          "name": "Action",
          "type": "vtss_appl_psec_limit_action_t",
          "description": "Action to take if number of MAC addresses exceeds the limit. NONE(0) Do nothing, except disallowing further clients. TRAP(1) Send an SNMP trap notification. SHUTDOWN(2) Shut-down the port. TRAP_AND_SHUTDOWN(3) Send an SNMP trap notification and shut-down the port."
        }
      ]
    },
    {
      "type-name": "vtss_appl_psec_port_statistics_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AgeOrHold",
          "type": "char *",
          "description": "Down-counter used in block and ageing process."
        },
        {
          "name": "creationTime",
          "type": "char *",
          "description": "Time when this entry was orignally added."
        },
        {
          "name": "state",
          "type": "vtss_appl_psec_state_t",
          "description": "Current State of a entry, expected state can be either FORWARDING or BLOCKED."
        },
        {
          "name": "macId",
          "type": "vtss_mac_t",
          "description": "The MAC address that this is all about."
        },
        {
          "name": "VlanId",
          "type": "uint16_t",
          "description": "The VID that this is all about."
        }
      ]
    },
    {
      "type-name": "vtss_appl_psec_port_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Users",
          "type": "uint32_t",
          "description": "Bit masks to indicate what users currently use port security on this port. Where bit 0 - port security limit, bit 1 - 802.1x, bit 2 - voice VLAN."
        },
        {
          "name": "LimitReached",
          "type": "vtss_bool_t",
          "description": "TRUE if the limit is reached on the port, FALSE otherwise."
        },
        {
          "name": "Shutdown",
          "type": "vtss_bool_t",
          "description": "TRUE if the port is shut down, FALSE otherwise."
        },
        {
          "name": "MacCount",
          "type": "uint32_t",
          "description": "Number of MAC addresses currently assigned to this port. The number does NOT include the number of entries that are held due to a H/W failure or S/W failure."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_clock_config_default_ds_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "deviceType",
          "type": "vtss_appl_ptp_device_type_t",
          "description": "The PTP clock type."
        },
        {
          "name": "twoStepFlag",
          "type": "vtss_bool_t",
          "description": "Determines whether clock uses follow-up packets."
        },
        {
          "name": "priority1",
          "type": "uint8_t",
          "description": "The priority1 value."
        },
        {
          "name": "priority2",
          "type": "uint8_t",
          "description": "The priority2 value."
        },
        {
          "name": "oneWay",
          "type": "vtss_bool_t",
          "description": "Determines whether clock uses sync packets only."
        },
        {
          "name": "domainNumber",
          "type": "uint8_t",
          "description": "The domain number."
        },
        {
          "name": "protocol",
          "type": "vtss_appl_ptp_protocol_t",
          "description": "The protocol to be used for the encapsulation of the PTP packets."
        },
        {
          "name": "vlanTagEnable",
          "type": "vtss_bool_t",
          "description": "Determines whether clock uses sync packets only."
        },
        {
          "name": "vid",
          "type": "uint16_t",
          "description": "The VLAN id (if VLAN tagging is enabled)."
        },
        {
          "name": "pcp",
          "type": "uint8_t",
          "description": "The PCP value (if VLAN tagging is enabled)."
        },
        {
          "name": "mep",
          "type": "int32_t",
          "description": "The mep instance number (if protocol is OAM)."
        },
        {
          "name": "clkDom",
          "type": "uint32_t",
          "description": "Clock domain used."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_clock_parent_ds_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "parentPortIdentityClockIdentity",
          "type": "unsigned char *",
          "description": "This is the 8 byte unique clock identity of the parent port."
        },
        {
          "name": "parentPortIdentityPortNumber",
          "type": "uint16_t",
          "description": "This is the port number on the parent associated with the parent clock."
        },
        {
          "name": "parentStats",
          "type": "vtss_bool_t",
          "description": "Parents stats (always false)."
        },
        {
          "name": "observedParentOffsetScaledLogVar",
          "type": "uint16_t",
          "description": "This field is optional and is not computed (as signaled by parentStats being false)."
        },
        {
          "name": "observedParentClockPhaseChangeRate",
          "type": "int32_t",
          "description": "This field is optional and is not computed (as signaled by parentStats being false)."
        },
        {
          "name": "grmstrIdentity",
          "type": "unsigned char *",
          "description": "This is the 8 byte unique clock identity of the grand master clock."
        },
        {
          "name": "grmstrClkQualClockClass",
          "type": "uint8_t",
          "description": "This is the clock class of the clock quality structure of the grand master clock."
        },
        {
          "name": "gmstrClkQualClockAccuracy",
          "type": "uint8_t",
          "description": "This is the clock accuracy of the clock quality structure of the grand master clock."
        },
        {
          "name": "gmstrClkQualOffsetScaledLogVar",
          "type": "uint16_t",
          "description": "This is the offsetScaledLogVariance field of the clock quality structure of the grand master clock."
        },
        {
          "name": "gmstrPriority1",
          "type": "uint8_t",
          "description": "Grandmaster Priority1 value."
        },
        {
          "name": "gmstrPriority2",
          "type": "uint8_t",
          "description": "Grandmaster Priority2 value."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_clock_servo_config_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "display",
          "type": "vtss_bool_t",
          "description": "Indicates whether output shall be sent to the debug terminal."
        },
        {
          "name": "pEnable",
          "type": "vtss_bool_t",
          "description": "Indicates whether P-value of servo algorithm shall be used."
        },
        {
          "name": "iEnable",
          "type": "vtss_bool_t",
          "description": "Indicates whether I-value of servo algorithm shall be used."
        },
        {
          "name": "dEnable",
          "type": "vtss_bool_t",
          "description": "Indicates whether D-value of servo algorithm shall be used."
        },
        {
          "name": "pval",
          "type": "uint32_t",
          "description": "P-value of the offset filter."
        },
        {
          "name": "ival",
          "type": "uint32_t",
          "description": "I-value of the offset filter."
        },
        {
          "name": "dval",
          "type": "uint32_t",
          "description": "D-value of the offset filter."
        },
        {
          "name": "srvOption",
          "type": "vtss_appl_ptp_srv_clock_option_t",
          "description": "D-value of the offset filter."
        },
        {
          "name": "synceThreshold",
          "type": "uint32_t",
          "description": "SyncE Threshold"
        },
        {
          "name": "synceAp",
          "type": "uint32_t",
          "description": "SyncE Ap"
        },
        {
          "name": "hoFilter",
          "type": "int32_t",
          "description": "Holdoff low pass filter constant."
        },
        {
          "name": "stableAdjThreshold",
          "type": "uint64_t",
          "description": "Threshold at which offset is assumed to be stable."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_clock_slave_ds_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "slavePort",
          "type": "uint16_t",
          "description": "0 => no slave port, 1..n => selected slave port."
        },
        {
          "name": "slaveState",
          "type": "vtss_appl_ptp_slave_clock_state_t",
          "description": "The slaves state."
        },
        {
          "name": "holdoverStable",
          "type": "uint8_t",
          "description": "True if the stabilization period has expired."
        },
        {
          "name": "holdoverAdj",
          "type": "int64_t",
          "description": "The calculated holdover offset (ppb*10)."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_clock_timeproperties_ds_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "currentUtcOffset",
          "type": "int16_t",
          "description": "The current UTC time offset."
        },
        {
          "name": "currentUtcOffsetValid",
          "type": "vtss_bool_t",
          "description": "Indicates whether the current UTC time offset value is valid."
        },
        {
          "name": "leap59",
          "type": "vtss_bool_t",
          "description": "Indicates that the last minute of the day has only 59 seconds."
        },
        {
          "name": "leap61",
          "type": "vtss_bool_t",
          "description": "Indicates that the last minute of the day has 61 seconds."
        },
        {
          "name": "timeTraceable",
          "type": "vtss_bool_t",
          "description": "Indicates that time is traceable to a primary reference."
        },
        {
          "name": "frequencyTraceable",
          "type": "vtss_bool_t",
          "description": "Indicates that frequency is traceable to a primary reference."
        },
        {
          "name": "ptpTimescale",
          "type": "vtss_bool_t",
          "description": "Indicates whether timescale of the grandmaster clock is PTP."
        },
        {
          "name": "timeSource",
          "type": "uint8_t",
          "description": "Source of time used by the grandmaster clock."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_config_port_ds_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "enabled",
          "type": "uint8_t",
          "description": "Defines whether port is enabled."
        },
        {
          "name": "logAnnounceInterval",
          "type": "int16_t",
          "description": "Interval between announce message transmissions."
        },
        {
          "name": "announceReceiptTimeout",
          "type": "uint8_t",
          "description": "The timeout for receiving announce messages on the port."
        },
        {
          "name": "logSyncInterval",
          "type": "int16_t",
          "description": "The interval for issuing sync meesages in the master."
        },
        {
          "name": "delayMechanism",
          "type": "uint8_t",
          "description": "The delay mechanism used for the port."
        },
        {
          "name": "logMinPdelayReqInterval",
          "type": "int16_t",
          "description": "The value of logMinPdelayReqInterval"
        },
        {
          "name": "delayAsymmetry",
          "type": "int64_t",
          "description": "The value for the communication path asymmetry."
        },
        {
          "name": "ingressLatency",
          "type": "int64_t",
          "description": "Ingress delay for port."
        },
        {
          "name": "egressLatency",
          "type": "int64_t",
          "description": "Egress delay for port."
        },
        {
          "name": "portInternal",
          "type": "vtss_bool_t",
          "description": "Defines whether port is enabled as an internal interface."
        },
        {
          "name": "versionNumber",
          "type": "uint16_t",
          "description": "The version of PTP being used by the port."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_ext_clock_mode_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "onePpsMode",
          "type": "vtss_appl_ptp_ext_clock_1pps_t",
          "description": "The mode of the PPS pin."
        },
        {
          "name": "externalEnable",
          "type": "vtss_bool_t",
          "description": "External enable of PPS output."
        },
        {
          "name": "adjustMethod",
          "type": "vtss_appl_ptp_preferred_adj_t",
          "description": "The adjustment method of the PPS external output.\n   0: LTC Frequency\n   1: SyncE DPLL\n   2: Oscillator\n   3: LTC Phase"
        },
        {
          "name": "clockFrequency",
          "type": "uint32_t",
          "description": "The frequency in hertz (Hz) of the PPS external output."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_status_port_ds_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "portState",
          "type": "uint8_t",
          "description": "-"
        },
        {
          "name": "logMinDelayReqInterval",
          "type": "int16_t",
          "description": "-"
        },
        {
          "name": "peerMeanPathDelay",
          "type": "int64_t",
          "description": "-"
        },
        {
          "name": "peerDelayOk",
          "type": "vtss_bool_t",
          "description": "-"
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_system_time_sync_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "mode",
          "type": "vtss_appl_ptp_system_time_sync_mode_t",
          "description": "Mode of the System time <-> ptp time synchronization."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_unicast_master_table_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "slaveMac",
          "type": "vtss_mac_t",
          "description": "-"
        },
        {
          "name": "port",
          "type": "uint16_t",
          "description": "Port on the master that slave is connected to."
        },
        {
          "name": "annLogMsgPeriod",
          "type": "int16_t",
          "description": "The granted Announce interval."
        },
        {
          "name": "ann",
          "type": "vtss_bool_t",
          "description": "True if sending announce messages."
        },
        {
          "name": "logMsgPeriod",
          "type": "int16_t",
          "description": "The granted sync interval."
        },
        {
          "name": "sync",
          "type": "vtss_bool_t",
          "description": "True if sending sync messages."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_unicast_slave_config_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "duration",
          "type": "uint32_t",
          "description": "Number of seconds for which the Announce/Sync messages are requested."
        },
        {
          "name": "ipAddress",
          "type": "vtss_ipv4_t",
          "description": "IPv4 address of requested master clock."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ptp_unicast_slave_table_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "masterIp",
          "type": "vtss_ipv4_t",
          "description": "This is the IP address of the master."
        },
        {
          "name": "masterMac",
          "type": "vtss_mac_t",
          "description": "This is the MAC address of the master."
        },
        {
          "name": "sourcePortIdentityClockIdentity",
          "type": "unsigned char *",
          "description": "This is the 8 byte unique clock identity of the source port."
        },
        {
          "name": "sourcePortIdentityPortNumber",
          "type": "uint16_t",
          "description": "This is port number of the port used on the source."
        },
        {
          "name": "port",
          "type": "uint16_t",
          "description": "The port (on the slave) connected to the master."
        },
        {
          "name": "logMsgPeriod",
          "type": "int16_t",
          "description": "The granted sync interval."
        },
        {
          "name": "commState",
          "type": "uint8_t",
          "description": "Communication state."
        },
        {
          "name": "confMasterIp",
          "type": "vtss_ipv4_t",
          "description": "Copy of the destination ip address."
        }
      ]
    },
    {
      "type-name": "vtss_appl_pvlan_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "HasVlanMembershipMgmt",
          "type": "vtss_bool_t",
          "description": "The capability to support PVLAN membership configuration by the device."
        },
        {
          "name": "VlanIdMax",
          "type": "uint32_t",
          "description": "The maximum VLAN ID of PVLAN membership configuration supported by the device."
        },
        {
          "name": "VlanIdMin",
          "type": "uint32_t",
          "description": "The minimum VLAN ID of PVLAN membership configuration supported by the device."
        }
      ]
    },
    {
      "type-name": "vtss_appl_pvlan_isolation_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enabled",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the Private VLAN isolation functionality."
        }
      ]
    },
    {
      "type-name": "vtss_appl_pvlan_membership_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "PortList",
          "type": "vtss_port_list_stackable_t",
          "description": "It is used to denote the memberships of the specific Private VLAN configuration."
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ClassMin",
          "type": "uint32_t",
          "description": "Minimum allowed QoS class."
        },
        {
          "name": "ClassMax",
          "type": "uint32_t",
          "description": "Maximum allowed QoS class."
        },
        {
          "name": "DplMin",
          "type": "uint8_t",
          "description": "Minimum allowed drop precedence level."
        },
        {
          "name": "DplMax",
          "type": "uint8_t",
          "description": "Maximum allowed drop precedence level."
        },
        {
          "name": "WredGroupMin",
          "type": "uint32_t",
          "description": "Minimum allowed WRED group number."
        },
        {
          "name": "WredGroupMax",
          "type": "uint32_t",
          "description": "Maximum allowed WRED group number."
        },
        {
          "name": "WredDplMin",
          "type": "uint8_t",
          "description": "Minimum allowed WRED drop precedence level."
        },
        {
          "name": "WredDplMax",
          "type": "uint8_t",
          "description": "Maximum allowed WRED drop precedence level."
        },
        {
          "name": "QceIdMin",
          "type": "uint32_t",
          "description": "Minimum allowed QCE Id."
        },
        {
          "name": "QceIdMax",
          "type": "uint32_t",
          "description": "Maximum allowed QCE Id."
        },
        {
          "name": "PortPolicerBitRateMin",
          "type": "uint32_t",
          "description": "Minimum supported bit rate in kbps for port policers using bit rate mode."
        },
        {
          "name": "PortPolicerBitRateMax",
          "type": "uint32_t",
          "description": "Maximum supported bit rate in kbps for port policers using bit rate mode.\nIf zero, the port policers does not support bit rate mode."
        },
        {
          "name": "PortPolicerBitBurstMin",
          "type": "uint32_t",
          "description": "Minimum supported burst size in bytes for port policers using bit rate mode."
        },
        {
          "name": "PortPolicerBitBurstMax",
          "type": "uint32_t",
          "description": "Maximum supported burst size in bytes for port policers using bit rate mode."
        },
        {
          "name": "PortPolicerFrameRateMin",
          "type": "uint32_t",
          "description": "Minimum supported frame rate in fps for port policers using frame rate mode."
        },
        {
          "name": "PortPolicerFrameRateMax",
          "type": "uint32_t",
          "description": "Maximum supported frame rate in fps for port policers using frame rate mode.\nIf zero, the port policers does not support frame rate mode."
        },
        {
          "name": "PortPolicerFrameBurstMin",
          "type": "uint32_t",
          "description": "Minimum supported burst size in frames for port policers using frame rate mode."
        },
        {
          "name": "PortPolicerFrameBurstMax",
          "type": "uint32_t",
          "description": "Maximum supported burst size in frames for port policers using frame rate mode."
        },
        {
          "name": "QueuePolicerBitRateMin",
          "type": "uint32_t",
          "description": "Minimum supported bit rate in kbps for queue policers using bit rate mode."
        },
        {
          "name": "QueuePolicerBitRateMax",
          "type": "uint32_t",
          "description": "Maximum supported bit rate in kbps for queue policers using bit rate mode.\nIf zero, the queue policers does not support bit rate mode."
        },
        {
          "name": "QueuePolicerBitBurstMin",
          "type": "uint32_t",
          "description": "Minimum supported burst size in bytes for queue policers using bit rate mode."
        },
        {
          "name": "QueuePolicerBitBurstMax",
          "type": "uint32_t",
          "description": "Maximum supported burst size in bytes for queue policers using bit rate mode."
        },
        {
          "name": "QueuePolicerFrameRateMin",
          "type": "uint32_t",
          "description": "Minimum supported frame rate in fps for queue policers using frame rate mode."
        },
        {
          "name": "QueuePolicerFrameRateMax",
          "type": "uint32_t",
          "description": "Maximum supported frame rate in fps for queue policers using frame rate mode.\nIf zero, the port policers does not support frame rate mode."
        },
        {
          "name": "QueuePolicerFrameBurstMin",
          "type": "uint32_t",
          "description": "Minimum supported burst size in frames for queue policers using frame rate mode."
        },
        {
          "name": "QueuePolicerFrameBurstMax",
          "type": "uint32_t",
          "description": "Maximum supported burst size in frames for queue policers using frame rate mode."
        },
        {
          "name": "PortShaperBitRateMin",
          "type": "uint32_t",
          "description": "Minimum supported bit rate in kbps for port shapers using bit rate mode."
        },
        {
          "name": "PortShaperBitRateMax",
          "type": "uint32_t",
          "description": "Maximum supported bit rate in kbps for port shapers using bit rate mode.\nIf zero, the port shapers does not support bit rate mode."
        },
        {
          "name": "PortShaperBitBurstMin",
          "type": "uint32_t",
          "description": "Minimum supported burst size in bytes for port shapers using bit rate mode."
        },
        {
          "name": "PortShaperBitBurstMax",
          "type": "uint32_t",
          "description": "Maximum supported burst size in bytes for port shapers using bit rate mode."
        },
        {
          "name": "PortShaperFrameRateMin",
          "type": "uint32_t",
          "description": "Minimum supported frame rate in fps for port shapers using frame rate mode."
        },
        {
          "name": "PortShaperFrameRateMax",
          "type": "uint32_t",
          "description": "Maximum supported frame rate in fps for port shapers using frame rate mode.\nIf zero, the port shapers does not support frame rate mode."
        },
        {
          "name": "PortShaperFrameBurstMin",
          "type": "uint32_t",
          "description": "Minimum supported burst size in frames for port shapers using frame rate mode."
        },
        {
          "name": "PortShaperFrameBurstMax",
          "type": "uint32_t",
          "description": "Maximum supported burst size in frames for port shapers using frame rate mode."
        },
        {
          "name": "QueueShaperBitRateMin",
          "type": "uint32_t",
          "description": "Minimum supported bit rate in kbps for queue shapers using bit rate mode."
        },
        {
          "name": "QueueShaperBitRateMax",
          "type": "uint32_t",
          "description": "Maximum supported bit rate in kbps for queue shapers using bit rate mode.\nIf zero, the queue shapers does not support bit rate mode."
        },
        {
          "name": "QueueShaperBitBurstMin",
          "type": "uint32_t",
          "description": "Minimum supported burst size in bytes for queue shapers using bit rate mode."
        },
        {
          "name": "QueueShaperBitBurstMax",
          "type": "uint32_t",
          "description": "Maximum supported burst size in bytes for queue shapers using bit rate mode."
        },
        {
          "name": "QueueShaperFrameRateMin",
          "type": "uint32_t",
          "description": "Minimum supported frame rate in fps for queue shapers using frame rate mode."
        },
        {
          "name": "QueueShaperFrameRateMax",
          "type": "uint32_t",
          "description": "Maximum supported frame rate in fps for queue shapers using frame rate mode.\nIf zero, the port shapers does not support frame rate mode."
        },
        {
          "name": "QueueShaperFrameBurstMin",
          "type": "uint32_t",
          "description": "Minimum supported burst size in frames for queue shapers using frame rate mode."
        },
        {
          "name": "QueueShaperFrameBurstMax",
          "type": "uint32_t",
          "description": "Maximum supported burst size in frames for queue shapers using frame rate mode."
        },
        {
          "name": "GlobalStormBitRateMin",
          "type": "uint32_t",
          "description": "Minimum supported bit rate in kbps for global storm policers using bit rate mode."
        },
        {
          "name": "GlobalStormBitRateMax",
          "type": "uint32_t",
          "description": "Maximum supported bit rate in kbps for global storm policers using bit rate mode.\nIf zero, the global storm policers does not support bit rate mode."
        },
        {
          "name": "GlobalStormBitBurstMin",
          "type": "uint32_t",
          "description": "Minimum supported burst size in bytes for global storm policers using bit rate mode."
        },
        {
          "name": "GlobalStormBitBurstMax",
          "type": "uint32_t",
          "description": "Maximum supported burst size in bytes for global storm policers using bit rate mode."
        },
        {
          "name": "GlobalStormFrameRateMin",
          "type": "uint32_t",
          "description": "Minimum supported frame rate in fps for global storm policers using frame rate mode."
        },
        {
          "name": "GlobalStormFrameRateMax",
          "type": "uint32_t",
          "description": "Maximum supported frame rate in fps for global storm policers using frame rate mode.\nIf zero, the global storm policers does not support frame rate mode."
        },
        {
          "name": "GlobalStormFrameBurstMin",
          "type": "uint32_t",
          "description": "Minimum supported burst size in frames for global storm policers using frame rate mode."
        },
        {
          "name": "GlobalStormFrameBurstMax",
          "type": "uint32_t",
          "description": "Maximum supported burst size in frames for global storm policers using frame rate mode."
        },
        {
          "name": "PortStormBitRateMin",
          "type": "uint32_t",
          "description": "Minimum supported bit rate in kbps for port storm policers using bit rate mode."
        },
        {
          "name": "PortStormBitRateMax",
          "type": "uint32_t",
          "description": "Maximum supported bit rate in kbps for port storm policers using bit rate mode.\nIf zero, the port storm policers does not support bit rate mode."
        },
        {
          "name": "PortStormBitBurstMin",
          "type": "uint32_t",
          "description": "Minimum supported burst size in bytes for port storm policers using bit rate mode."
        },
        {
          "name": "PortStormBitBurstMax",
          "type": "uint32_t",
          "description": "Maximum supported burst size in bytes for port storm policers using bit rate mode."
        },
        {
          "name": "PortStormFrameRateMin",
          "type": "uint32_t",
          "description": "Minimum supported frame rate in fps for port storm policers using frame rate mode."
        },
        {
          "name": "PortStormFrameRateMax",
          "type": "uint32_t",
          "description": "Maximum supported frame rate in fps for port storm policers using frame rate mode.\nIf zero, the port storm policers does not support frame rate mode."
        },
        {
          "name": "PortStormFrameBurstMin",
          "type": "uint32_t",
          "description": "Minimum supported burst size in frames for port storm policers using frame rate mode."
        },
        {
          "name": "PortStormFrameBurstMax",
          "type": "uint32_t",
          "description": "Maximum supported burst size in frames for port storm policers using frame rate mode."
        },
        {
          "name": "DwrrCountMask",
          "type": "uint32_t",
          "description": "A bitmask used to show allowed values of DwrrCount (zero is always allowed).\nExample:\n  00100000 (0x20): Allowed values are 0 and 6\n  11111110 (0xFE): Allowed values are 0 and 2..8"
        },
        {
          "name": "HasGlobalStormPolicers",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports global storm policers."
        },
        {
          "name": "HasPortStormPolicers",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports per port storm policers."
        },
        {
          "name": "HasPortQueuePolicers",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports per port queue policers."
        },
        {
          "name": "HasWredV1",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports WRED version 1."
        },
        {
          "name": "HasWredV2",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports WRED version 2."
        },
        {
          "name": "HasFixedTagCosMap",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports fixed tag to cos mapping only."
        },
        {
          "name": "HasTagClassification",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports using VLAN tag for classification."
        },
        {
          "name": "HasTagRemarking",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports VLAN tag remarking."
        },
        {
          "name": "HasDscp",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports DSCP translation and remarking."
        },
        {
          "name": "HasDscpDplClassification",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports DPL based DSCP classification."
        },
        {
          "name": "HasDscpDplRemarking",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports DPL based DSCP remarking."
        },
        {
          "name": "HasPortPolicersFc",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports flow control in port policers."
        },
        {
          "name": "HasQueuePolicersFc",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports flow control in queue policers."
        },
        {
          "name": "HasPortShapersDlb",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports dual leaky bucket egress port shapers."
        },
        {
          "name": "HasQueueShapersDlb",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports dual leaky bucket egress queue shapers."
        },
        {
          "name": "HasQueueShapersExcess",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports excess bandwidth in egress queue shapers."
        },
        {
          "name": "HasWredV3",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports WRED version 3."
        },
        {
          "name": "HasQce",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports QCEs."
        },
        {
          "name": "HasQceAddressMode",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports QCE address mode."
        },
        {
          "name": "HasQceKeyType",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports QCE key type."
        },
        {
          "name": "HasQceMacOui",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports QCE MAC OUI part only (24 most significant bits)."
        },
        {
          "name": "HasQceDmac",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports QCE destination MAC keys."
        },
        {
          "name": "HasQceDip",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports QCE destination IP keys."
        },
        {
          "name": "HasQceCTag",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports QCE VLAN C-TAG keys."
        },
        {
          "name": "HasQceSTag",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports QCE VLAN S-TAG keys."
        },
        {
          "name": "HasQceInnerTag",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports QCE inner VLAN tag keys."
        },
        {
          "name": "HasQceActionPcpDei",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports QCE PCP and DEI actions."
        },
        {
          "name": "HasQceActionPolicy",
          "type": "vtss_bool_t",
          "description": "If true, the platform supports QCE policy actions."
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_dscp_entry_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Trust",
          "type": "vtss_bool_t",
          "description": "If true, this DSCP value is trusted. Packets arriving on interfaces where 'TrustDscp' is enabled will be classified to the corresponding CoS and DPL in this table."
        },
        {
          "name": "Cos",
          "type": "uint32_t",
          "description": "The CoS value which the DSCP value maps to.\nValid range is qosCapabilitiesClassMin-qosCapabilitiesClassMax."
        },
        {
          "name": "Dpl",
          "type": "uint8_t",
          "description": "The DPL (Drop Precedence Level) which the DSCP value maps to.\nValid range is qosCapabilitiesDplMin-qosCapabilitiesDplMax."
        },
        {
          "name": "IngressTranslation",
          "type": "uint8_t",
          "description": "The new classified DSCP value which the original DSCP value is replaced with if 'DscpTranslate' is enabled on the interface"
        },
        {
          "name": "Classify",
          "type": "vtss_bool_t",
          "description": "If true, then packets received on interfaces where 'DscpClassify' is set to 'selected' will be classified to a new DSCP value based on the values configured in the qosConfigGlobalsCosToDscpTable."
        },
        {
          "name": "EgressTranslation",
          "type": "uint8_t",
          "description": "The new DSCP value that will be written into the packet at egress if 'DscpRemark' on the interface is set to 'remap' or 'remap-dp'.\nIf 'remap-dp' is set then only packets classified to Dpl 0 will use this table."
        },
        {
          "name": "EgressTranslationDp1",
          "type": "uint8_t",
          "description": "The new DSCP value that will be written into the packet at egress if 'DscpRemark' on the interface is set to 'remap-dp'.\nOnly packets classified to Dpl 1 will use this table.\n This object is only valid if QosCapabilitiesHasDscpDplRemarking is true."
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_global_storm_policer_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enable",
          "type": "vtss_bool_t",
          "description": "If true, the storm policer is enabled.\n This object is only valid if QosCapabilitiesHasGlobalStormPolicers is true."
        },
        {
          "name": "Rate",
          "type": "uint32_t",
          "description": "Configure the storm policer rate.\nValid range is from the smallest value of QosCapabilitiesGlobalStormBitRateMin and QosCapabilitiesGlobalStormFrameRateMin to the largest value of QosCapabilitiesGlobalStormBitRateMax and QosCapabilitiesGlobalStormFrameRateMax.\n This object is only valid if QosCapabilitiesHasGlobalStormPolicers is true."
        },
        {
          "name": "FrameRate",
          "type": "vtss_bool_t",
          "description": "If true, the rate is measured in fps instead of kbps.\nfps  (FrameRate == TRUE)  is only valid if QosCapabilitiesGlobalStormFrameRateMax is non-zero.\nkbps (FrameRate == FALSE) is only valid if QosCapabilitiesGlobalStormBitRateMax is non-zero.\n This object is only valid if QosCapabilitiesHasGlobalStormPolicers is true."
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_if_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Cos",
          "type": "uint32_t",
          "description": "The default CoS value a packet is classified to.\nValid range is qosCapabilitiesClassMin-qosCapabilitiesClassMax."
        },
        {
          "name": "Dpl",
          "type": "uint8_t",
          "description": "The default DPL (Drop Precedence Level) a packet is classified to.\nValid range is qosCapabilitiesDplMin-qosCapabilitiesDplMax."
        },
        {
          "name": "Pcp",
          "type": "uint32_t",
          "description": "The default PCP value a packet is classified to.\nValid range is 0-7.\nThis object is only valid if QosCapabilitiesHasFixedTagCosMap is false."
        },
        {
          "name": "Dei",
          "type": "uint8_t",
          "description": "The default DEI value a packet is classified to.\nValid range is 0-1.\nThis object is only valid if QosCapabilitiesHasFixedTagCosMap is false."
        },
        {
          "name": "TrustTag",
          "type": "vtss_bool_t",
          "description": "If true and the packet is VLAN tagged, then the CoS and DPL assigned to the packet is the PCP and DEI value in the packet mapped to a CoS and DPL value defined in the qosConfigInterfaceTagToCosTable.\nThis object is only valid if QosCapabilitiesHasFixedTagCosMap is false and QosCapabilitiesHasTagClassification is true."
        },
        {
          "name": "TrustDscp",
          "type": "vtss_bool_t",
          "description": "If true and the packet type is IPv4 or IPv6 and the packet DSCP value is trusted in qosConfigGlobalsDscpTable, then the CoS and DPL assigned to the packet is the DSCP value in the packet mapped to a CoS and DPL value defined in the qosConfigGlobalsDscpTable.\n This object is only valid if QosCapabilitiesHasDscp is true."
        },
        {
          "name": "DwrrCount",
          "type": "uint8_t",
          "description": "The number of queues that are running Deficit Weighted Round Robin scheduling.\nThis value is restricted to 0 or one of the values defined by qosCapabilitiesDwrrCountMask."
        },
        {
          "name": "TagRemarkingMode",
          "type": "vtss_appl_qos_tag_remark_mode_t",
          "description": "Selects the tag remarking mode for egress. Valid values are:\n'classified' : Remark the tag with the classified values of PCP and DEI.\n'default' : Remark the tag with the configured TagPcp and TagDei.\n'mapped' : Remark the tag with the values from the classified CoS and DPL mapped through the qosConfigInterfaceCosToTagTable.\n This object is only valid if QosCapabilitiesHasTagRemarking is true."
        },
        {
          "name": "TagPcp",
          "type": "uint32_t",
          "description": "The PCP value to put in the packet if TagRemarkingMode is set to 'default'.\nValid range is 0-7.\n This object is only valid if QosCapabilitiesHasTagRemarking is true."
        },
        {
          "name": "TagDei",
          "type": "uint8_t",
          "description": "The DEI value to put in the packet if TagRemarkingMode is set to 'default'.\nValid range is 0-1.\n This object is only valid if QosCapabilitiesHasTagRemarking is true."
        },
        {
          "name": "DscpTranslate",
          "type": "vtss_bool_t",
          "description": "If true then the classified DSCP value is the DSCP value in the packed mapped to a new DSCP value defined in qosConfigGlobalsDscpTable.IngressTranslation.\n This object is only valid if QosCapabilitiesHasDscp is true."
        },
        {
          "name": "DscpClassify",
          "type": "vtss_appl_qos_dscp_mode_t",
          "description": "If qosCapabilitiesHasDscpDplClassification is true: Selects if and how the classified DSCP is based on the classified CoS and DPL for IPv4 and IPv6 packets on ingress.\nIf a packet is selected for being classified to a new DSCP, the classification in based on the classified CoS mapped to a new DSCP value through the qosConfigGlobalsCosToDscpTable. If the classified DPL is 1, the new DSCP value is taken from the DscpDp1 entry, otherwise it is taken from the Dscp entry. Valid values are:\n'none' : Always classify to the DSCP value in the received packet and ignore the classified CoS and DPL.\n'zero' : If the DSCP value in the received packet is 0, then classify to a new DSCP value based on the classified CoS and DPL.\n'selected' : If the DSCP value in the received packet is enabled in qosConfigGlobalsDscpTable.Classify, then classify to a new DSCP value based on the classified CoS and DPL.\n'all' : Always classify to a new DSCP value based on the classified CoS and DPL.\n\nIf qosCapabilitiesHasDscpDplClassification is false: Selects if and how the classified DSCP is based on the classified CoS for IPv4 and IPv6 packets on ingress.\nIf a packet is selected for being classified to a new DSCP, the classification in based on the classified CoS mapped to a new DSCP value through the qosConfigGlobalsCosToDscpTable.Dscp Valid values are:\n'none' : Always classify to the DSCP value in the received packet and ignore the classified CoS.\n'zero' : If the DSCP value in the received packet is 0, then classify to a new DSCP value based on the classified CoS.\n'selected' : If the DSCP value in the received packet is enabled in qosConfigGlobalsDscpTable.Classify, then classify to a new DSCP value based on the classified CoS.\n'all' : Always classify to a new DSCP value based on the classified CoS.\n This object is only valid if QosCapabilitiesHasDscp is true."
        },
        {
          "name": "DscpRemark",
          "type": "vtss_appl_qos_dscp_emode_t",
          "description": "If qosCapabilitiesHasDscpDplRemarking is true: Selects if and how the classified DSCP is written into the packet at egress. Valid values are:\n'disabled' : Do not write the classified DSCP into the packet.\n'rewrite' : Write the classified DSCP into the packet.\n'remap' : Remap the classified DSCP through qosConfigGlobalsDscpTable, and write the value from EgressTranslation into the packet.\n'remap-dp' : Remap the classified DSCP through qosConfigGlobalsDscpTable. If the classified DPL is 0 then write the value from EgressTranslation into the packet, otherwise write the value from EgressTranslationDp1 into the packet.\nIf qosCapabilitiesHasDscpDplRemarking is false: Selects if and how the classified DSCP is written into the packet at egress. Valid values are:\n'disabled' : Do not write the classified DSCP into the packet.\n'rewrite' : Write the classified DSCP into the packet.\n'remap' : Remap the classified DSCP through qosConfigGlobalsDscpTable, and write the value from EgressTranslation into the packet.\n This object is only valid if QosCapabilitiesHasDscp is true."
        },
        {
          "name": "QceAddressMode",
          "type": "vtss_bool_t",
          "description": "If false, the QCE classification for this interface is based on source (SMAC/SIP) addresses.\nIf true, the QCE classification for this interface is based on destination (DMAC/DIP) addresses.\nThis parameter is only used when QosCapabilitiesHasQceKeyType is false or QceKeyType is normal.\n This object is only valid if QosCapabilitiesHasQceAddressMode is true."
        },
        {
          "name": "QceKeyType",
          "type": "vtss_vcap_key_type_t",
          "description": "The key type specifying the key generated for packets received on the interface. Valid values are:\n'normal' : Half key, match outer tag, SIP and SMAC.\n'double-tag' : Quarter key, match inner and outer tag.\n'ip-addr' : Half key, match inner and outer tag, SIP and DIP. For non-IP frames, match outer tag only.\n'mac-ip-addr' : Full key, match inner and outer tag, SMAC, DMAC, SIP and DIP.\nFiltering on DMAC type (unicast/multicast/broadcast) is supported for any key type.\n This object is only valid if QosCapabilitiesHasQceKeyType is true."
        },
        {
          "name": "WredGroup",
          "type": "uint32_t",
          "description": "The WRED group an interface is a member of.\n This object is only valid if QosCapabilitiesHasWredV3 is true."
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_port_policer_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enable",
          "type": "vtss_bool_t",
          "description": "If true, the port policer is enabled."
        },
        {
          "name": "FrameRate",
          "type": "vtss_bool_t",
          "description": "If true, the rate is measured in fps instead of kbps."
        },
        {
          "name": "FlowControl",
          "type": "vtss_bool_t",
          "description": "If true, and flow control is enabled on the interface, then issue flow control pause frames instead of discarding frames.\n This object is only valid if QosCapabilitiesHasPortPolicersFc is true."
        },
        {
          "name": "Cir",
          "type": "uint32_t",
          "description": "Committed Information Rate. Measured in kbps if FrameRate is false and fps if FrameRate is true.\nValid range is qosCapabilitiesBitrateMin-qosCapabilitiesBitrateMax"
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_port_shaper_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enable",
          "type": "vtss_bool_t",
          "description": "If true, the port shaper is enabled."
        },
        {
          "name": "Cir",
          "type": "uint32_t",
          "description": "Committed Information Rate. Measured in kbps.\nValid range is qosCapabilitiesBitrateMin-qosCapabilitiesBitrateMax"
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_port_storm_policer_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enable",
          "type": "vtss_bool_t",
          "description": "If true, the storm policer is enabled.\n This object is only valid if QosCapabilitiesHasPortStormPolicers is true."
        },
        {
          "name": "FrameRate",
          "type": "vtss_bool_t",
          "description": "If true, the rate is measured in fps instead of kbps.\n This object is only valid if QosCapabilitiesHasPortStormPolicers is true."
        },
        {
          "name": "Cir",
          "type": "uint32_t",
          "description": "Committed Information Rate. Measured in kbps if FrameRate is false and fps if FrameRate is true.\nValid range is qosCapabilitiesBitrateMin-qosCapabilitiesBitrateMax.\n This object is only valid if QosCapabilitiesHasPortStormPolicers is true."
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_qce_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "NextQceId",
          "type": "uint32_t",
          "description": "QCE Id of the next QCE. Valid range is qosCapabilitiesQceIdMin-qosCapabilitiesQceIdMax or 0.\nThe value 0, denotes the end of the list."
        },
        {
          "name": "SwitchId",
          "type": "uint32_t",
          "description": "Indicates the switch on which this QCE is active.Valid range is documented in the Stacking MIB.\nThis object is only valid on stacking platforms."
        },
        {
          "name": "PortList",
          "type": "vtss_port_list_stackable_t",
          "description": "List of ports that are member of this QCE."
        },
        {
          "name": "DestMacType",
          "type": "vtss_appl_vcap_dmac_type_t",
          "description": "Indicates the destination MAC type to match."
        },
        {
          "name": "DestMac",
          "type": "vtss_mac_t",
          "description": "Indicates the 48 bits destination MAC address.\nThe packets destination address is AND-ed with the value of DestMacMask and then compared against the value of this object.\nIf this object value and the value of DestMacMask is 00-00-00-00-00-00, this entry matches any destination MAC address.\nThis object can only be configured if DestMacType is any(0) and DestMacMask is ff-ff-ff-ff-ff-ff.\n This object is only valid if QosCapabilitiesHasQceDmac is true."
        },
        {
          "name": "DestMacMask",
          "type": "vtss_mac_t",
          "description": "Indicates the 48 bits destination MAC address mask.\nValid values are 00-00-00-00-00-00 or ff-ff-ff-ff-ff-ff.\n This object is only valid if QosCapabilitiesHasQceDmac is true."
        },
        {
          "name": "SrcMac",
          "type": "vtss_mac_t",
          "description": "Indicates the 48 bits source MAC address.\nThe packets source address is AND-ed with the value of SrcMacMask and then compared against the value of this object.\nIf this object value and the value of SrcMacMask is 00-00-00-00-00-00, this entry matches any source MAC address.\nThis object can only be configured if SrcMacMask is ff-ff-ff-ff-ff-ff.\nIf the value of qosCapabilitiesHasQceMacOui is true then only the OUI part of the MAC address (24 most significant bits) is used."
        },
        {
          "name": "SrcMacMask",
          "type": "vtss_mac_t",
          "description": "Indicates the 48 bits source MAC address mask.\nValid values are 00-00-00-00-00-00 or ff-ff-ff-ff-ff-ff."
        },
        {
          "name": "VlanTagType",
          "type": "vtss_appl_vcap_vlan_tag_type_t",
          "description": "Indicates the VLAN tag type to match.\nThe value cTagged(3) is only supported if qosCapabilitiesHasCTag is true.\nThe value sTagged(3) is only supported if qosCapabilitiesHasSTag is true."
        },
        {
          "name": "VlanIdOp",
          "type": "vtss_appl_vcap_asr_type_t",
          "description": "Indicates how a packets's VLAN ID is to be compared."
        },
        {
          "name": "VlanId",
          "type": "uint16_t",
          "description": "The VLAN ID to be compared.\nIf the VlanIdOp object in the same row is range(2), this object will be the starting VLAN ID of the range.\nValid range is vlanCapabilitiesVlanIdMin-vlanCapabilitiesVlanIdMax.\nThis object can only be configured if VlanIdOp is not any(0)."
        },
        {
          "name": "VlanIdRange",
          "type": "uint16_t",
          "description": "The VLAN ID to be compared.\nIf the VlanIdOp object in the same row is range(2), this object will be the ending VLAN ID of the range.\nValid range is vlanCapabilitiesVlanIdMin-vlanCapabilitiesVlanIdMax.\nThis object can only be configured if VlanIdOp is range(2)."
        },
        {
          "name": "Pcp",
          "type": "vtss_appl_vcap_vlan_pri_type_t",
          "description": "The PCP value(s) to be compared."
        },
        {
          "name": "Dei",
          "type": "vtss_vcap_bit_t",
          "description": "The DEI value to be compared.\nValid range is 0-1."
        },
        {
          "name": "InnerVlanTagType",
          "type": "vtss_appl_vcap_vlan_tag_type_t",
          "description": "Indicates the inner VLAN tag type to match.\n This object is only valid if QosCapabilitiesHasQceInnerTag is true."
        },
        {
          "name": "InnerVlanIdOp",
          "type": "vtss_appl_vcap_asr_type_t",
          "description": "Indicates how a packets's inner VLAN ID is to be compared.\n This object is only valid if QosCapabilitiesHasQceInnerTag is true."
        },
        {
          "name": "InnerVlanId",
          "type": "uint16_t",
          "description": "The inner VLAN ID to be compared.\nIf the InnerVlanIdOp object in the same row is range(2), this object will be the starting VLAN ID of the range.\nValid range is vlanCapabilitiesVlanIdMin-vlanCapabilitiesVlanIdMax.\nThis object can only be configured if InnerVlanIdOp is not any(0).\n This object is only valid if QosCapabilitiesHasQceInnerTag is true."
        },
        {
          "name": "InnerVlanIdRange",
          "type": "uint16_t",
          "description": "The inner VLAN ID to be compared.\nIf the InnerVlanIdOp object in the same row is range(2), this object will be the ending VLAN ID of the range.\nValid range is vlanCapabilitiesVlanIdMin-vlanCapabilitiesVlanIdMax.\nThis object can only be configured if InnerVlanIdOp is range(2).\n This object is only valid if QosCapabilitiesHasQceInnerTag is true."
        },
        {
          "name": "InnerPcp",
          "type": "vtss_appl_vcap_vlan_pri_type_t",
          "description": "The inner PCP value(s) to be compared.\n This object is only valid if QosCapabilitiesHasQceInnerTag is true."
        },
        {
          "name": "InnerDei",
          "type": "vtss_vcap_bit_t",
          "description": "The inner DEI value to be compared.\nValid range is 0-1.\n This object is only valid if QosCapabilitiesHasQceInnerTag is true."
        },
        {
          "name": "FrameType",
          "type": "vtss_appl_qos_qce_type_t",
          "description": "Indicates the packet's frame type.\nModifying the frame type on an existing QCE will restore the content of all frame type dependent configuration to default."
        },
        {
          "name": "Etype",
          "type": "uint16_t",
          "description": "Indicates the packet's 16 bit Ethernet type field.\nValid values are: 0(match any), 0x600-0xFFFF but excluding 0x800(IPv4) and 0x86DD(IPv6).\nThis object can only be configured if FrameType is etype(1)."
        },
        {
          "name": "LlcDsap",
          "type": "uint8_t",
          "description": "Indicates the packets's 8 bit LLC DSAP field.\nThe packets LLC DSAP field is AND-ed with the value of LlcDsapMask and then compared against the value of this object.\nIf this object value and the value of LlcDsapMask is 0x00, this entry matches any LLC DSAP.\nValid range is 0x00-0xFF.\nThis object can only be configured if FrameType is llc(2)."
        },
        {
          "name": "LlcDsapMask",
          "type": "uint8_t",
          "description": "Indicates the 8 bit LLC DSAP mask.\nValid values are 0x00 or 0xFF.\nThis object can only be configured if FrameType is llc(2)."
        },
        {
          "name": "LlcSsap",
          "type": "uint8_t",
          "description": "Indicates the packets's 8 bit LLC SSAP field.\nThe packets LLC SSAP field is AND-ed with the value of LlcSsapMask and then compared against the value of this object.\nIf this object value and the value of LlcSsapMask is 0x00, this entry matches any LLC SSAP.\nValid range is 0x00-0xFF.\nThis object can only be configured if FrameType is llc(2)."
        },
        {
          "name": "LlcSsapMask",
          "type": "uint8_t",
          "description": "Indicates the 8 bit LLC SSAP mask.\nValid values are 0x00 or 0xFF.\nThis object can only be configured if FrameType is llc(2)."
        },
        {
          "name": "LlcControl",
          "type": "uint8_t",
          "description": "Indicates the packets's 8 bit LLC Control field.\nThe packets LLC Control field is AND-ed with the value of LlcControlMask and then compared against the value of this object.\nIf this object value and the value of LlcControlMask is 0x00, this entry matches any LLC Control.\nValid range is 0x00-0xFF.\nThis object can only be configured if FrameType is llc(2)."
        },
        {
          "name": "LlcControlMask",
          "type": "uint8_t",
          "description": "Indicates the 8 bit LLC Control mask.\nValid values are 0x00 or 0xFF.\nThis object can only be configured if FrameType is llc(2)."
        },
        {
          "name": "SnapPid",
          "type": "uint16_t",
          "description": "Indicates the packet's 16 bit SNAP PID field.\nThe packets SNAP PID field is AND-ed with the value of SnapPidMask and then compared against the value of this object.\nIf this object value and the value of SnapPidMask is 0x0000, this entry matches any ethertype.\nThis object can only be configured if FrameType is snap(3)."
        },
        {
          "name": "SnapPidMask",
          "type": "uint16_t",
          "description": "Indicates the 16 bit SNAP PID mask.\nValid values are 0x0000 or 0xFFFF.\nThis object can only be configured if FrameType is snap(3)."
        },
        {
          "name": "Ipv4Fragment",
          "type": "vtss_vcap_bit_t",
          "description": "Indicates how an IPv4 fragment bit is to be compared.\nThis object can only be configured if FrameType is ipv4(4)."
        },
        {
          "name": "Ipv4DscpOp",
          "type": "vtss_appl_vcap_asr_type_t",
          "description": "Indicates how an IPv4 DSCP field is to be compared.\nThis object can only be configured if FrameType is ipv4(4)."
        },
        {
          "name": "Ipv4Dscp",
          "type": "uint16_t",
          "description": "The DSCP value to be compared.\nIf the Ipv4DscpOp object in the same row is range(2), this object will be the starting DSCP value of the range.\nValid range is 0-63.\nThis object can only be configured if FrameType is ipv4(4) and Ipv4DscpOp is not any(0)."
        },
        {
          "name": "Ipv4DscpRange",
          "type": "uint16_t",
          "description": "The DSCP value to be compared.\nIf the Ipv4DscpOp object in the same row is range(2), this object will be the ending DSCP value of the range.\nValid range is 0-63.\nThis object can only be configured if FrameType is ipv4(4) and Ipv4DscpOp is range(2)."
        },
        {
          "name": "Ipv4Protocol",
          "type": "uint8_t",
          "description": "The protocol number field in the IPv4 header used to indicate a higher layer protocol.\nThe packets protocol number field is AND-ed with the value of Ipv4ProtocolMask and then compared with the value of this object.\nIf Ipv4Protocol and Ipv4protocolMask are 0, this entry matches any IPv4 protocol.\nValid range is 0-255.\nThis object can only be configured if FrameType is ipv4(4)."
        },
        {
          "name": "Ipv4ProtocolMask",
          "type": "uint8_t",
          "description": "The specified IPv4 protocol number mask.\nValid values are 0 or 255.\nThis object can only be configured if FrameType is ipv4(4)."
        },
        {
          "name": "Ipv4SrcIp",
          "type": "vtss_ipv4_t",
          "description": "The specified IPv4 source address.\nThe packets source address is AND-ed with the value of Ipv4SrcIpMask and then compared with the value of this object.\nIf Ipv4SrcIP and Ipv4SrcIpMask are 0.0.0.0, this entry matches any IPv4 source address.\nThis object can only be configured if FrameType is ipv4(4)."
        },
        {
          "name": "Ipv4SrcIpMask",
          "type": "vtss_ipv4_t",
          "description": "The specified IPv4 source address mask.\nThis object can only be configured if FrameType is ipv4(4)."
        },
        {
          "name": "Ipv4DestIp",
          "type": "vtss_ipv4_t",
          "description": "The specified IPv4 destination address.\nThe packets destination address is AND-ed with the value of Ipv4DestIpMask and then compared with the value of this object.\nIf Ipv4DestIP and Ipv4DestIpMask are 0.0.0.0, this entry matches any IPv4 destination address.\nThis object can only be configured if FrameType is ipv4(4).\n This object is only valid if QosCapabilitiesHasQceDip is true."
        },
        {
          "name": "Ipv4DestIpMask",
          "type": "vtss_ipv4_t",
          "description": "The specified IPv4 destination address mask.\nThis object can only be configured if FrameType is ipv4(4).\n This object is only valid if QosCapabilitiesHasQceDip is true."
        },
        {
          "name": "Ipv4SrcPortOp",
          "type": "vtss_appl_vcap_asr_type_t",
          "description": "Indicates how a packet's source TCP/UDP port number is to be compared.\nThis object can only be configured if FrameType is ipv4(4)."
        },
        {
          "name": "Ipv4SrcPort",
          "type": "uint16_t",
          "description": "The source port number of the TCP or UDP protocol.\nIf the Ipv4SrcPortOp object in the same row is range(2), this object will be the starting port number of the port range.\nValid range is 0-65535.\nThis object can only be configured if FrameType is ipv4(4) and Ipv4SrcPortOp is not any(0)."
        },
        {
          "name": "Ipv4SrcPortRange",
          "type": "uint16_t",
          "description": "The source port number of the TCP or UDP protocol.\nIf the Ipv4SrcPortOp object in the same row is range(2), this object will be the ending port number of the port range.\nValid range is 0-65535.\nThis object can only be configured if FrameType is ipv4(4) and Ipv4SrcPortOp is range(2)."
        },
        {
          "name": "Ipv4DestPortOp",
          "type": "vtss_appl_vcap_asr_type_t",
          "description": "Indicates how a packet's destination TCP/UDP port number is to be compared.\nThis object can only be configured if FrameType is ipv4(4)."
        },
        {
          "name": "Ipv4DestPort",
          "type": "uint16_t",
          "description": "The destination port number of the TCP or UDP protocol.\nIf the Ipv4DestPortOp object in the same row is range(2), this object will be the starting port number of the port range.\nValid range is 0-65535.\nThis object can only be configured if FrameType is ipv4(4) and Ipv4DestPortOp is not any(0)."
        },
        {
          "name": "Ipv4DestPortRange",
          "type": "uint16_t",
          "description": "The source port number of the TCP or UDP protocol.\nIf the Ipv4DestPortOp object in the same row is range(2), this object will be the ending port number of the port range.\nValid range is 0-65535.\nThis object can only be configured if FrameType is ipv4(4) and Ipv4DestPortOp is range(2)."
        },
        {
          "name": "Ipv6DscpOp",
          "type": "vtss_appl_vcap_asr_type_t",
          "description": "Indicates how an IPv6 DSCP field is to be compared.\nThis object can only be configured if FrameType is ipv6(5)."
        },
        {
          "name": "Ipv6Dscp",
          "type": "uint16_t",
          "description": "The DSCP value to be compared.\nIf the Ipv6DscpOp object in the same row is range(2), this object will be the starting DSCP value of the range.\nValid range is 0-63.\nThis object can only be configured if FrameType is ipv6(5) and Ipv6DscpOp is not any(0)."
        },
        {
          "name": "Ipv6DscpRange",
          "type": "uint16_t",
          "description": "The DSCP value to be compared.\nIf the Ipv6DscpOp object in the same row is range(2), this object will be the ending DSCP value of the range.\nValid range is 0-63.\nThis object can only be configured if FrameType is ipv6(5) and Ipv6DscpOp is range(2)."
        },
        {
          "name": "Ipv6Protocol",
          "type": "uint8_t",
          "description": "The protocol number field in the IPv6 header used to indicate a higher layer protocol.\nThe packets protocol number field is AND-ed with the value of Ipv6ProtocolMask and then compared with the value of this object.\nIf Ipv46rotocol and Ipv6protocolMask are 0, this entry matches any IPv6 protocol.\nValid range is 0-255.\nThis object can only be configured if FrameType is ipv6(5)."
        },
        {
          "name": "Ipv6ProtocolMask",
          "type": "uint8_t",
          "description": "The specified IPv6 protocol number mask.\nValid values are 0 or 255.\nThis object can only be configured if FrameType is ipv6(5)."
        },
        {
          "name": "Ipv6SrcIp",
          "type": "vtss_ipv6_t",
          "description": "The specified IPv6 source address.\nThe packets source address is AND-ed with the value of Ipv6SrcIpMask and then compared with the value of this object.\nIf Ipv6SrcIP and Ipv6SrcIpMask are all zeros, this entry matches any IPv6 source address.\nOnly the least significant 32 bits of this object are used.\nThis object can only be configured if FrameType is ipv6(5)."
        },
        {
          "name": "Ipv6SrcIpMask",
          "type": "vtss_ipv6_t",
          "description": "The specified IPv6 source address mask.\nOnly the least significant 32 bits of this object are used.\nThis object can only be configured if FrameType is ipv6(5)."
        },
        {
          "name": "Ipv6DestIp",
          "type": "vtss_ipv6_t",
          "description": "The specified IPv6 destination address.\nThe packets destination address is AND-ed with the value of Ipv6DestIpMask and then compared with the value of this object.\nIf Ipv6DestIP and Ipv6DestIpMask are all zeros, this entry matches any IPv6 destination address.\nOnly the least significant 32 bits of this object are used.\nThis object can only be configured if FrameType is ipv6(5).\n This object is only valid if QosCapabilitiesHasQceDip is true."
        },
        {
          "name": "Ipv6DestIpMask",
          "type": "vtss_ipv6_t",
          "description": "The specified IPv6 destination address mask.\nOnly the least significant 32 bits of this object are used.\nThis object can only be configured if FrameType is ipv6(5).\n This object is only valid if QosCapabilitiesHasQceDip is true."
        },
        {
          "name": "Ipv6SrcPortOp",
          "type": "vtss_appl_vcap_asr_type_t",
          "description": "Indicates how a packet's source TCP/UDP port number is to be compared.\nThis object can only be configured if FrameType is ipv6(5)."
        },
        {
          "name": "Ipv6SrcPort",
          "type": "uint16_t",
          "description": "The source port number of the TCP or UDP protocol.\nIf the Ipv6SrcPortOp object in the same row is range(2), this object will be the starting port number of the port range.\nValid range is 0-65535.\nThis object can only be configured if FrameType is ipv6(5) and Ipv6SrcPortOp is not any(0)."
        },
        {
          "name": "Ipv6SrcPortRange",
          "type": "uint16_t",
          "description": "The source port number of the TCP or UDP protocol.\nIf the Ipv6SrcPortOp object in the same row is range(2), this object will be the ending port number of the port range.\nValid range is 0-65535.\nThis object can only be configured if FrameType is ipv6(5) and Ipv6SrcPortOp is range(2)."
        },
        {
          "name": "Ipv6DestPortOp",
          "type": "vtss_appl_vcap_asr_type_t",
          "description": "Indicates how a packet's destination TCP/UDP port number is to be compared.\nThis object can only be configured if FrameType is ipv6(5)."
        },
        {
          "name": "Ipv6DestPort",
          "type": "uint16_t",
          "description": "The destination port number of the TCP or UDP protocol.\nIf the Ipv6DestPortOp object in the same row is range(2), this object will be the starting port number of the port range.\nValid range is 0-65535.\nThis object can only be configured if FrameType is ipv6(5) and Ipv6DestPortOp is not any(0)."
        },
        {
          "name": "Ipv6DestPortRange",
          "type": "uint16_t",
          "description": "The source port number of the TCP or UDP protocol.\nIf the Ipv6DestPortOp object in the same row is range(2), this object will be the ending port number of the port range.\nValid range is 0-65535.\nThis object can only be configured if FrameType is ipv6(5) and Ipv6DestPortOp is range(2)."
        },
        {
          "name": "ActionCosEnable",
          "type": "vtss_bool_t",
          "description": "If true, the packet is classified to the CoS value in ActionCos."
        },
        {
          "name": "ActionCos",
          "type": "uint32_t",
          "description": "The CoS value used for classification.\nValid range is qosCapabilitiesClassMin-qosCapabilitiesClassMax."
        },
        {
          "name": "ActionDplEnable",
          "type": "vtss_bool_t",
          "description": "If true, the packet is classified to the DPL value in ActionDpl."
        },
        {
          "name": "ActionDpl",
          "type": "uint8_t",
          "description": "The DPL value used for classification.\nValid range is qosCapabilitiesDplMin-qosCapabilitiesDplMax."
        },
        {
          "name": "ActionDscpEnable",
          "type": "vtss_bool_t",
          "description": "If true, the packet is classified to the DSCP value in ActionDscp."
        },
        {
          "name": "ActionDscp",
          "type": "uint8_t",
          "description": "The DSCP value used for classification.\nValid range is 0-63."
        },
        {
          "name": "ActionPcpDeiEnable",
          "type": "vtss_bool_t",
          "description": "If true, the packet is classified to the PCP value in ActionPcp and the DEI value in ActionDei.\n This object is only valid if QosCapabilitiesHasQceActionPcpDei is true."
        },
        {
          "name": "ActionPcp",
          "type": "uint32_t",
          "description": "The PCP value used for classification.\nValid range is 0-7.\n This object is only valid if QosCapabilitiesHasQceActionPcpDei is true."
        },
        {
          "name": "ActionDei",
          "type": "uint8_t",
          "description": "The DEI value used for classification.\nValid range is 0-1.\n This object is only valid if QosCapabilitiesHasQceActionPcpDei is true."
        },
        {
          "name": "ActionPolicyEnable",
          "type": "vtss_bool_t",
          "description": "If true, the packet is classified to the policy number in ActionPolicy.\n This object is only valid if QosCapabilitiesHasQceActionPolicy is true."
        },
        {
          "name": "ActionPolicy",
          "type": "uint32_t",
          "description": "The policy number used for classification.\nValid range is documented in the ACL MIB.\n This object is only valid if QosCapabilitiesHasQceActionPcpDei is true."
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_qce_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "UserId",
          "type": "vtss_appl_qos_qcl_user_t",
          "description": "User Id."
        },
        {
          "name": "QceId",
          "type": "uint32_t",
          "description": "QCE Id."
        },
        {
          "name": "Conflict",
          "type": "vtss_bool_t",
          "description": "If true, a resource conflict is detected."
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_queue_policer_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enable",
          "type": "vtss_bool_t",
          "description": "If true, the queue policer is enabled."
        },
        {
          "name": "Cir",
          "type": "uint32_t",
          "description": "Committed Information Rate. Measured in kbps.\nValid range is qosCapabilitiesBitrateMin-qosCapabilitiesBitrateMax"
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_queue_shaper_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enable",
          "type": "vtss_bool_t",
          "description": "If true, the queue shaper is enabled."
        },
        {
          "name": "Excess",
          "type": "vtss_bool_t",
          "description": "If true, then allow this queue to get a share of the excess bandwidth.\nExcess bandwidth is allowed if this shaper is closed and no other queues with open shapers have frames for transmission.\n This object is only valid if QosCapabilitiesHasQueueShapersExcess is true."
        },
        {
          "name": "Cir",
          "type": "uint32_t",
          "description": "Committed Information Rate. Measured in kbps.\nValid range is qosCapabilitiesBitrateMin-qosCapabilitiesBitrateMax"
        }
      ]
    },
    {
      "type-name": "vtss_appl_qos_wred_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Enable",
          "type": "vtss_bool_t",
          "description": "If true, RED is enabled for this queue."
        },
        {
          "name": "MinimumFillLevel",
          "type": "uint8_t",
          "description": "Controls the lower RED fill level threshold in percent of the whole queue.\nIf the queue filling level is below this threshold, the drop probability is zero.\nValid range is 0-100."
        },
        {
          "name": "Maximum",
          "type": "uint8_t",
          "description": "Controls the upper RED drop probability or fill level threshold for frames marked with Drop Precedence Level 1 (yellow frames).\nValid range is 1-100.\nThis object is only valid if QosCapabilitiesHasWredV2 or QosCapabilitiesHasWredV3 is true."
        },
        {
          "name": "MaxSelector",
          "type": "vtss_appl_qos_wred_max_t",
          "description": "Selects whether 'Maximum' controls 'Maximum Drop Probability' or 'Maximum Fill Level'.\nThis object is only valid if QosCapabilitiesHasWredV2 or QosCapabilitiesHasWredV3 is true."
        },
        {
          "name": "MaximumDp1",
          "type": "uint8_t",
          "description": "Controls the upper RED drop probability for frames marked with Drop Precedence Level 1 (yellow frames).\nValid range is 0-100.\n This object is only valid if QosCapabilitiesHasWredV1 is true."
        },
        {
          "name": "MaximumDp2",
          "type": "uint8_t",
          "description": "Controls the upper RED drop probability for frames marked with Drop Precedence Level 2 (yellow frames).\nValid range is 0-100.\n This object is only valid if QosCapabilitiesHasWredV1 is true."
        },
        {
          "name": "MaximumDp3",
          "type": "uint8_t",
          "description": "Controls the upper RED drop probability for frames marked with Drop Precedence Level 3 (yellow frames).\nValid range is 0-100.\n This object is only valid if QosCapabilitiesHasWredV1 is true."
        }
      ]
    },
    {
      "type-name": "vtss_appl_sflow_agent_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AgentIpAddress",
          "type": "vtss_ip_addr_t",
          "description": "This switch's IP address, or rather,            by default the IPv4 loopback address, but it can be changed            from CLI and Web. Will not get persisted. The aggregate type            allows for holding either an IPv4 and IPv6 address."
        }
      ]
    },
    {
      "type-name": "vtss_appl_sflow_cp_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "CounterSamplingMode",
          "type": "vtss_bool_t",
          "description": "Enable or disable this entry."
        },
        {
          "name": "CounterSamplingRcvrIndex",
          "type": "uint32_t",
          "description": "One-based index into the sflow receiver table.            0 means that this entry is free. Valid values:            [0; VTSS_APPL_SFLOW_RECEIVER_CNT]. Default: 0."
        },
        {
          "name": "CounterSamplingInterval",
          "type": "uint32_t",
          "description": "The maximum number of seconds between sampling            of counters for this port. 0 disables sampling. Valid values:            [VTSS_APPL_SFLOW_POLLING_INTERVAL_MIN; VTSS_APPL_SFLOW_POLLING_INTERVAL_MAX].            Default: 0"
        }
      ]
    },
    {
      "type-name": "vtss_appl_sflow_fs_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "FlowSamplingMode",
          "type": "vtss_bool_t",
          "description": "Enable or disable this entry."
        },
        {
          "name": "FlowSamplingRcvrIndex",
          "type": "uint32_t",
          "description": "One-based index into the sflow receiver table.            0 means that this entry is free. Valid values:            [0; VTSS_APPL_SFLOW_RECEIVER_CNT]. Default: 0."
        },
        {
          "name": "FlowSamplingRate",
          "type": "uint32_t",
          "description": "The statistical sampling rate for packet            sampling from this source."
        },
        {
          "name": "FlowSamplingMaxHeaderSize",
          "type": "uint32_t",
          "description": "The maximum number of bytes that should be            copied from a sampled packet. Valid values:            [VTSS_APPL_SFLOW_FLOW_HEADER_SIZE_MIN; VTSS_APPL_SFLOW_FLOW_HEADER_SIZE_MAX].            Default: VTSS_APPL_SFLOW_FLOW_HEADER_SIZE_DEFAULT."
        },
        {
          "name": "FlowSamplingDirection",
          "type": "vtss_sflow_type_t",
          "description": "Flow sampling direction. Valid values:            {NONE, RX, TX, ALL}. Default: TX"
        }
      ]
    },
    {
      "type-name": "vtss_appl_sflow_rcvr_info_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "RcvrIpAddress",
          "type": "vtss_ip_addr_t",
          "description": "The IP address of the current receiver. If there is no current receiver, this is set to <NONE>"
        },
        {
          "name": "RcvrTimeLeft",
          "type": "uint32_t",
          "description": "The number of seconds left for this receiver."
        }
      ]
    },
    {
      "type-name": "vtss_appl_sflow_rcvr_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "OwnerOfReceiverEntry",
          "type": "char *",
          "description": "The entity making use of this receiver table entry."
        },
        {
          "name": "ReceiverTimeout",
          "type": "uint32_t",
          "description": "The time (in seconds) remaining before the sampler is            released and stops sampling."
        },
        {
          "name": "ReceiverMaxDatagramSize",
          "type": "uint32_t",
          "description": "The maximum number of data bytes that can be sent in            a single datagram."
        },
        {
          "name": "ReceiverHostname",
          "type": "vtss_inet_address_t",
          "description": "IPv4/IPv6 address or hostname of receiver to which            the datagrams are sent."
        },
        {
          "name": "ReceiverUdpPortNumber",
          "type": "uint16_t",
          "description": "UDP port number on the receiver to send the datagrams to."
        },
        {
          "name": "ReceiverUdpDatagramVersion",
          "type": "int32_t",
          "description": "The version of sFlow datagrams that we should send.            Valid values [5; 5] (we only support v. 5). Default: 5."
        }
      ]
    },
    {
      "type-name": "vtss_appl_snmp_access_group_index_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AccessGroupName",
          "type": "char *",
          "description": "The access group name of this entry"
        },
        {
          "name": "SecurityModel",
          "type": "vtss_appl_snmp_security_model_t",
          "description": "The security model of this entry"
        },
        {
          "name": "SecurityLevel",
          "type": "vtss_appl_snmp_security_level_t",
          "description": "The security level of this entry"
        }
      ]
    },
    {
      "type-name": "vtss_appl_snmp_community_name_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Name",
          "type": "char *",
          "description": "Name of SNMP community"
        },
        {
          "name": "SourceIP",
          "type": "vtss_ipv4_t",
          "description": "The SNMP access source IP address"
        },
        {
          "name": "SourceIPPrefixSize",
          "type": "int32_t",
          "description": "The SNMP access source IP address mask"
        }
      ]
    },
    {
      "type-name": "vtss_appl_snmp_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_bool_t",
          "description": "Global mode of SNMP."
        },
        {
          "name": "Version",
          "type": "vtss_appl_snmp_version_t",
          "description": "SNMP Version. The supported versions are snmpV1, snmpV2c, snmpV3."
        },
        {
          "name": "ReadCommunity",
          "type": "char *",
          "description": "The community read access string to permit access to SNMP agent."
        },
        {
          "name": "WriteCommunity",
          "type": "char *",
          "description": "The community write access string to permit access to SNMP agent."
        },
        {
          "name": "EngineId",
          "type": "unsigned char *",
          "description": "SNMPv3 engine ID. The size of Engine ID is between 5 ~ 32 bytes.But all-zeros and all-'F's are not allowed. Change of the Engine ID will clear all original local users."
        }
      ]
    },
    {
      "type-name": "vtss_appl_snmp_view_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ViewType",
          "type": "vtss_appl_snmp_view_type_t",
          "description": "The view name of this entry."
        }
      ]
    },
    {
      "type-name": "vtss_appl_ssh_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AdminState",
          "type": "vtss_bool_t",
          "description": "Enable/Disable the SSH functionality."
        }
      ]
    },
    {
      "type-name": "vtss_appl_synce_clock_selection_mode_config_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "selectionMode",
          "type": "vtss_appl_synce_selection_mode_t",
          "description": "The selection mode."
        },
        {
          "name": "source",
          "type": "uint32_t",
          "description": "Nominated source for manuel selection mode."
        },
        {
          "name": "wtrTime",
          "type": "uint32_t",
          "description": "WTR timer value in minutes. Range is 0 to 12 minutes where 0 means that the timer is disabled."
        },
        {
          "name": "ssmHoldover",
          "type": "vtss_appl_synce_quality_level_t",
          "description": "Tx overwrite SSM used when clock controller is hold over."
        },
        {
          "name": "ssmFreerun",
          "type": "vtss_appl_synce_quality_level_t",
          "description": "Tx overwrite SSM used when clock controller is free run."
        },
        {
          "name": "eecOption",
          "type": "vtss_appl_synce_eec_option_t",
          "description": "Synchronous Ethernet Equipment Clock option."
        }
      ]
    },
    {
      "type-name": "vtss_appl_synce_clock_selection_mode_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "clockInput",
          "type": "uint32_t",
          "description": "The clock source locked to when clock selector is in locked state."
        },
        {
          "name": "selectorState",
          "type": "vtss_appl_synce_selector_state_t",
          "description": "This is indicating the state of the clock selector."
        },
        {
          "name": "losx",
          "type": "vtss_bool_t",
          "description": "LOSX"
        },
        {
          "name": "lol",
          "type": "vtss_bool_t",
          "description": "Clock selector has raised the Los Of Lock alarm."
        },
        {
          "name": "dhold",
          "type": "vtss_bool_t",
          "description": "Clock selector has not yet calculated the holdover frequency offset to local oscillator."
        }
      ]
    },
    {
      "type-name": "vtss_appl_synce_clock_source_nomination_config_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "nominated",
          "type": "vtss_bool_t",
          "description": "Indicates if source is nominated."
        },
        {
          "name": "networkPort",
          "type": "vtss_ifindex_t",
          "description": "Interface index of the norminated source."
        },
        {
          "name": "clkInPort",
          "type": "uint8_t",
          "description": "Clock input of the norminated source."
        },
        {
          "name": "priority",
          "type": "uint32_t",
          "description": "Priority of the nominated source."
        },
        {
          "name": "anegMode",
          "type": "vtss_appl_synce_aneg_mode_t",
          "description": "Autonogotiation mode auto-master-slave."
        },
        {
          "name": "ssmOverwrite",
          "type": "vtss_appl_synce_quality_level_t",
          "description": "SSM overwrite quality."
        },
        {
          "name": "holdoffTime",
          "type": "uint32_t",
          "description": "Hold Off timer value in 100ms (3 - 18). Zero means no hold off."
        }
      ]
    },
    {
      "type-name": "vtss_appl_synce_clock_source_nomination_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "locs",
          "type": "vtss_bool_t",
          "description": "LOCS"
        },
        {
          "name": "fos",
          "type": "vtss_bool_t",
          "description": "FOS"
        },
        {
          "name": "ssm",
          "type": "vtss_bool_t",
          "description": "SSM"
        },
        {
          "name": "wtr",
          "type": "vtss_bool_t",
          "description": "WTR"
        }
      ]
    },
    {
      "type-name": "vtss_appl_synce_port_config_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ssmEnabled",
          "type": "vtss_bool_t",
          "description": "Quality level via SSM enabled."
        }
      ]
    },
    {
      "type-name": "vtss_appl_synce_port_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ssmRx",
          "type": "vtss_appl_synce_quality_level_t",
          "description": "Monitoring of the received SSM QL on this port."
        },
        {
          "name": "ssmTx",
          "type": "vtss_appl_synce_quality_level_t",
          "description": "Monitoring of the transmitted SSM QL on this port."
        },
        {
          "name": "master",
          "type": "vtss_bool_t",
          "description": "If PHY is in 1000BaseT Mode then this is monitoring the master/slave mode."
        }
      ]
    },
    {
      "type-name": "vtss_appl_syslog_history_control_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Clear",
          "type": "vtss_bool_t",
          "description": "Clear syslog history by setting to true."
        }
      ]
    },
    {
      "type-name": "vtss_appl_syslog_history_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "MsgLevel",
          "type": "vtss_appl_syslog_lvl_t",
          "description": "The severity level of the system log message. Note that enumeration option of all(8) isn't used in this case."
        },
        {
          "name": "MsgTimeStamp",
          "type": "time_t",
          "description": "The value of sysUpTime when this message was generated."
        },
        {
          "name": "MsgText",
          "type": "char *",
          "description": "The detailed context of the system log message."
        }
      ]
    },
    {
      "type-name": "vtss_appl_syslog_server_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_bool_t",
          "description": "Indicates the syslog server mode operation. When the mode operation is enabled, the syslog message will send out to syslog server."
        },
        {
          "name": "Address",
          "type": "vtss_inet_address_t",
          "description": "The domain name of syslog server."
        },
        {
          "name": "Level",
          "type": "vtss_appl_syslog_lvl_t",
          "description": "Indicates what level of message will send to syslog server. For example, the error level will send the specific messages which severity code is less or equal than error(3), the warning level will send the specific messages which severity code is less or equal  than warning(4), the notice level will send the specific messages which severity code is less or equal  than notice(5), the informational level will send the specific messages which severity code is less or equal than informational(6) and the enumeration option of all(8) isn't used in this case."
        }
      ]
    },
    {
      "type-name": "vtss_appl_sysutil_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "WarmRebootSupported",
          "type": "vtss_bool_t",
          "description": "Indicate if warm restart is supported or not. true means it is supported. false means it is not supported."
        },
        {
          "name": "PostSupported",
          "type": "vtss_bool_t",
          "description": "Indicate if POST(Power On Self Test) is supported or not. true(1) means it is supported. false(2) means it is not supported."
        },
        {
          "name": "ZtpSupported",
          "type": "vtss_bool_t",
          "description": "Indicate if ZTP(Zero Touch Provisioning) is supported or not. true(1) means it is supported. false(2) means it is not supported."
        },
        {
          "name": "StackFwChkSupported",
          "type": "vtss_bool_t",
          "description": "Indicate if stack firmware version check is supported or not. true(1) means it is supported. false(2) means it is not supported."
        }
      ]
    },
    {
      "type-name": "vtss_appl_sysutil_control_reboot_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Type",
          "type": "vtss_appl_sysutil_reboot_type_t",
          "description": "Type of reboot. noReboot(0) does not reboot. coldReboot(1) is to do cold reboot. warmReboot(2) is to do warm reboot, but this is optional. The OID of vtssSysutilCapabilitiesWarmRebootSupported tells if warm reboot is supported or not."
        }
      ]
    },
    {
      "type-name": "vtss_appl_sysutil_control_system_led_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "ClearStatus",
          "type": "vtss_appl_sysutil_system_led_clear_type_t",
          "description": "Type of system LED status clearing.all(0) is used to clear all error status of the system LED and back to normal indication. fatal(1) is used to clear fatal error status of the system LED. software(2) is used to clear generic software error status of the system LED. post(3) is used to clear POST(Power On Self Test) error status of the system LED. ztp(4) is used to clear ZTP(Zero Touch Provisioning) error status of the system LED. stackFwChk(5) is used to clear stack firmware version check error status of the system LED."
        }
      ]
    },
    {
      "type-name": "vtss_appl_thermal_protect_port_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Temperature",
          "type": "int16_t",
          "description": "Current port temperature(in C)."
        },
        {
          "name": "Power",
          "type": "vtss_bool_t",
          "description": "Port thermal protection status. false means port link is up and port is operating normally. true means port link is down and port is thermal protected."
        }
      ]
    },
    {
      "type-name": "vtss_appl_udld_neighbor_info_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "NeighborDeviceID",
          "type": "char *",
          "description": "Neighbor device id."
        },
        {
          "name": "NeighborPortID",
          "type": "char *",
          "description": "Neighbor port id."
        },
        {
          "name": "NeighborDeviceName",
          "type": "char *",
          "description": "Neighbor device name."
        },
        {
          "name": "LinkDetectionState",
          "type": "vtss_udld_detection_state_t",
          "description": "Neighbor device link detected state."
        }
      ]
    },
    {
      "type-name": "vtss_appl_udld_port_info_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "DeviceID",
          "type": "char *",
          "description": "Local device id."
        },
        {
          "name": "DeviceName",
          "type": "char *",
          "description": "Local device name."
        },
        {
          "name": "LinkState",
          "type": "vtss_udld_detection_state_t",
          "description": "Local device link detected state."
        }
      ]
    },
    {
      "type-name": "vtss_appl_upnp_param_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_bool_t",
          "description": "Global mode of UPnP. true is to enable the functions of HTTPS and false is to disable it."
        },
        {
          "name": "Ttl",
          "type": "uint8_t",
          "description": "The TTL value is used by UPnP to send SSDP advertisement messages.Valid values are in the range 1 to 255. "
        },
        {
          "name": "AdvertisingDuration",
          "type": "int32_t",
          "description": "The duration, carried in SSDP packets, is used to inform a control point or control points how often it or they should receive an SSDP advertisement message from this switch. If a control point does not receive any message within the duration, it will think that the switch no longer exists. Due to the unreliable nature of UDP, in the standard it is recommended that such refreshing of advertisements to be done at less than one-half of the advertising duration. In the implementation, the switch sends SSDP messages periodically at the interval one-half of the advertising duration minus 30 seconds. Valid values are in the range 100 to 86400. "
        }
      ]
    },
    {
      "type-name": "vtss_appl_users_config_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Privilege",
          "type": "uint32_t",
          "description": "Privilege level of the user."
        },
        {
          "name": "Encrypted",
          "type": "vtss_bool_t",
          "description": "The flag indicates the password is encrypted or not. TRUE means the password is encrypted. FALSE means the password is plain text."
        },
        {
          "name": "Password",
          "type": "char *",
          "description": "Password of the user. The password length depends on the type of password. If the password is encrypted, then the length is from 4 to 44. If it is unencrypted, then the maximum length is 31."
        }
      ]
    },
    {
      "type-name": "vtss_appl_vcl_generic_conf_global_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "VlanId",
          "type": "int32_t",
          "description": "Vlan id of the mapping."
        },
        {
          "name": "PortList",
          "type": "vtss_port_list_stackable_t",
          "description": "List of stack/switch ports on which this entry is active."
        }
      ]
    },
    {
      "type-name": "vtss_appl_vlan_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "vlanIdMin",
          "type": "vtss_vid_t",
          "description": "The minimum VLAN ID that can be configured on the device."
        },
        {
          "name": "vlanIdMax",
          "type": "vtss_vid_t",
          "description": "The maximum VLAN ID that can be configured on the device."
        },
        {
          "name": "fidCnt",
          "type": "uint16_t",
          "description": "The number of Shared VLAN Learning (SVL) Filter IDs (FIDs) supported by this device. 0 if SVL is not supported."
        }
      ]
    },
    {
      "type-name": "vtss_appl_vlan_config_globals_main_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "CustomSPortEtherType",
          "type": "uint16_t",
          "description": "TPID (EtherType) for ports marked as Custom-S tag aware."
        },
        {
          "name": "AccessVlans",
          "type": "vtss_vid_list_t",
          "description": "Enabled access VLANs."
        }
      ]
    },
    {
      "type-name": "vtss_appl_vlan_port_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_appl_vlan_port_mode_t",
          "description": "VLAN mode of the port."
        },
        {
          "name": "AccessVlan",
          "type": "vtss_vid_t",
          "description": "The port VLAN ID the port will be assigned when Mode is Access."
        },
        {
          "name": "TrunkNativeVlan",
          "type": "vtss_vid_t",
          "description": "The port VLAN ID the port will be assigned when Mode is trunk."
        },
        {
          "name": "TrunkTagNativeVlan",
          "type": "vtss_bool_t",
          "description": "Controls whether frames classified to TrunkNativeVlan get tagged on egress. Used when Mode is trunk."
        },
        {
          "name": "TrunkVlans",
          "type": "vtss_vid_list_t",
          "description": "List of VLANs the port is member of. Used when Mode is trunk."
        },
        {
          "name": "HybridNativeVlan",
          "type": "vtss_vid_t",
          "description": "The port VLAN ID the port will be assigned when Mode is hybrid."
        },
        {
          "name": "HybridPortType",
          "type": "vtss_appl_vlan_port_type_t",
          "description": "Controls awareness and whether it reacts to C-tags, S-tags, Custom-S-tags. Used when Mode is hybrid."
        },
        {
          "name": "HybridIngressFiltering",
          "type": "vtss_bool_t",
          "description": "Controls whether frames classified to a certain VLAN ID get discarded (true) or not (false) if the port is not member of the VLAN ID. Used when Mode is hybrid."
        },
        {
          "name": "HybridIngressAcceptance",
          "type": "vtss_vlan_frame_t",
          "description": "Controls whether frames are accepted on ingress depending on VLAN tag in frame. Used when Mode is hybrid."
        },
        {
          "name": "HybridEgressTagging",
          "type": "vtss_appl_vlan_tx_tag_type_t",
          "description": "Controls tagging of frames on egress. tagThis(1) is not allowed. Used when Mode is hybrid."
        },
        {
          "name": "HybridVlans",
          "type": "vtss_vid_list_t",
          "description": "List of VLANs the port is member of. Used when Mode is hybrid."
        },
        {
          "name": "ForbiddenVlans",
          "type": "vtss_vid_list_t",
          "description": "List of VLANs the port can become member of. Used in all modes."
        }
      ]
    },
    {
      "type-name": "vtss_appl_vlan_port_detailed_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Pvid",
          "type": "vtss_vid_t",
          "description": "Port VLAN ID set by this user."
        },
        {
          "name": "Uvid",
          "type": "vtss_vid_t",
          "description": "Untagged VLAN ID set by a user. This may only be populated by non-admin users."
        },
        {
          "name": "PortType",
          "type": "vtss_appl_vlan_port_type_t",
          "description": "VLAN Awareness and tag reaction set by this user."
        },
        {
          "name": "IngressFiltering",
          "type": "vtss_bool_t",
          "description": "Ingress filtering enabled or disabled by this user."
        },
        {
          "name": "IngressAcceptance",
          "type": "vtss_vlan_frame_t",
          "description": "VLAN tagging accepted upon ingress configured by this user."
        },
        {
          "name": "EgressTagging",
          "type": "vtss_appl_vlan_tx_tag_type_t",
          "description": "Egress tagging configured by this user."
        }
      ]
    },
    {
      "type-name": "vtss_appl_voice_vlan_capabilities_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "SupportLldpDiscovery",
          "type": "vtss_bool_t",
          "description": "The capability to support voice device discovery from LLDP notification."
        },
        {
          "name": "MinAgeTime",
          "type": "uint32_t",
          "description": "The minimum time value in second for aging telephony OUI sources in voice VLAN."
        },
        {
          "name": "MaxAgeTime",
          "type": "uint32_t",
          "description": "The maximum time value in second for aging telephony OUI sources in voice VLAN."
        },
        {
          "name": "MaxTrafficClass",
          "type": "uint32_t",
          "description": "The maximum allowed CoS (Class of Service) value to be used in forwarding voice VLAN traffic."
        },
        {
          "name": "MaxOuiEntryCount",
          "type": "uint32_t",
          "description": "The maximum number of telephony OUI entry registration."
        }
      ]
    },
    {
      "type-name": "vtss_appl_voice_vlan_global_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "AdminState",
          "type": "vtss_bool_t",
          "description": "Administrative control for system wide voice VLAN function, TRUE is to enable the voice VLAN function and FALSE is to disable it."
        },
        {
          "name": "VlanId",
          "type": "uint16_t",
          "description": "VLAN ID, which should be unique in the system, for voice VLAN."
        },
        {
          "name": "AgingTime",
          "type": "uint32_t",
          "description": "MAC address aging time (T) for telephony OUI source registrated by voice VLAN. The actual timing in purging the specific entry ranges from T to 2T."
        },
        {
          "name": "TrafficClass",
          "type": "uint32_t",
          "description": "Traffic class value used in frame CoS queuing insides voice VLAN. All kinds of traffic on voice VLAN apply this traffic class."
        }
      ]
    },
    {
      "type-name": "vtss_appl_voice_vlan_port_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Mode",
          "type": "vtss_appl_voice_vlan_management_t",
          "description": "Management mode of the specific port in voice VLAN. 'disabled' will disjoin the port from voice VLAN. 'forced' will force the port to join voice VLAN. 'automatic' will join the port in voice VLAN upon detecting attached VoIP devices by using DiscoveryProtocol parameter."
        },
        {
          "name": "DiscoveryProtocol",
          "type": "vtss_appl_voice_vlan_discovery_t",
          "description": "Specify the protocol for detecting attached VoIP devices. It only works when 'automatic' is set in Mode parameter, and voice VLAN will restart automatic detecting process upon changing the protocol. When 'oui' is given, voice VLAN performs VoIP device detection based on checking telephony OUI settings via new MAC address notification. When 'lldp' is given, voice VLAN performs VoIP device detection based on LLDP notifications.When 'both' is given, voice VLAN performs VoIP device detection based on either new MAC address notification or LLDP notifications.\nIn addition, the first come notification will be first served."
        },
        {
          "name": "Secured",
          "type": "vtss_bool_t",
          "description": "Manage the security control of this port interface in voice VLAN, TRUE is to enable the security control and FALSE is to disable it. When it is disabled, all the traffic in voice VLAN will be permit. When it is enabled, all non-telephonic MAC addresses in the voice VLAN will be blocked for 10 seconds and thus the traffic from these senders will be deny."
        }
      ]
    },
    {
      "type-name": "vtss_lacp_aggregator_status_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "dot3adAggrID",
          "type": "uint16_t",
          "description": "The aggregation ID for a particular link aggregation group."
        },
        {
          "name": "dot3adAggrPartnerSystemID",
          "type": "vtss_mac_t",
          "description": "The system ID (MAC address) of the aggregation partner."
        },
        {
          "name": "dot3adAggrPartnerOperKey",
          "type": "uint16_t",
          "description": "The Key that the partner has assigned to this aggregation ID."
        },
        {
          "name": "dot3adAggrPartnerOperSystemPriority",
          "type": "uint16_t",
          "description": "A 2-octet read-only value indicating the operational value            of priority associated with the Partner's System ID. The            value of this attribute may contain the manually configured value            carried in aAggPortPartnerAdminSystemPriority            if there is no protocol Partner."
        },
        {
          "name": "dot3adAggrPartnerStateLastChanged",
          "type": "uint32_t",
          "description": "The time in second since this aggregation changed"
        },
        {
          "name": "dot3adAggrLocalPorts",
          "type": "vtss_port_list_stackable_t",
          "description": "Local port list"
        }
      ]
    },
    {
      "type-name": "vtss_appl_evc_conf_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "Vid",
          "type": "uint16_t",
          "description": "The VLAN ID used in the outer tag for the EVC."
        },
        {
          "name": "Ivid",
          "type": "uint16_t",
          "description": "The internal classified VLAN ID for the EVC."
        },
        {
          "name": "NniPortList",
          "type": "vtss_port_list_stackable_t",
          "description": "List of NNI ports for the EVC."
        },
        {
          "name": "Learning",
          "type": "vtss_bool_t",
          "description": "Enable or disable MAC address learning for the EVC."
        },
        {
          "name": "PolicerOp",
          "type": "vtss_appl_evc_policer_op_t",
          "description": "Policer operator for the EVC.",
          "depends-on-capability": "HasEvcPolicer@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "PolicerId",
          "type": "uint16_t",
          "description": "Policer ID for the EVC.",
          "depends-on-capability": "HasEvcPolicer@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "UniVid",
          "type": "uint16_t",
          "description": "The VLAN ID used in the outer tag on the UNI.",
          "depends-on-capability": "HasEvcUniVid@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "ItAddType",
          "type": "vtss_appl_evc_inner_tag_type_t",
          "description": "The tag type for the inner tag pushed.",
          "depends-on-capability": "HasEvcItAdd@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "ItInnerVid",
          "type": "vtss_bool_t",
          "description": "Enable inner VLAN ID for EVC classification.",
          "depends-on-capability": "HasEvcItAdd@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "ItAddVid",
          "type": "uint16_t",
          "description": "The VLAN ID for the inner tag pushed ",
          "depends-on-capability": "HasEvcItAdd@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "ItAddPcpDeiPreserve",
          "type": "vtss_bool_t",
          "description": "Enable PCP/DEI preservation for the inner tag pushed.",
          "depends-on-capability": "HasEvcItAdd@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "ItAddPcp",
          "type": "uint32_t",
          "description": "The PCP value for the inner tag pushed.",
          "depends-on-capability": "HasEvcItAdd@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "ItAddDei",
          "type": "uint8_t",
          "description": "The DEI value for the inner tag pushed.",
          "depends-on-capability": "HasEvcItAdd@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "MplsTp",
          "type": "vtss_appl_evc_mpls_tp_conf_t",
          "description": "MPLS-TP configuration.",
          "depends-on-capability": "HasEvcMpls@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "LeafVid",
          "type": "uint16_t",
          "description": "The leaf VLAN ID used in the outer tag for the EVC.",
          "depends-on-capability": "HasEvcETree@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "LeafIvid",
          "type": "uint16_t",
          "description": "The leaf internal classified VLAN ID for the EVC.",
          "depends-on-capability": "HasEvcETree@vtss_appl_evc_capabilities_t"
        },
        {
          "name": "LeafPortList",
          "type": "vtss_port_list_stackable_t",
          "description": "List of leaf ports for the EVC.",
          "depends-on-capability": "HasEvcETree@vtss_appl_evc_capabilities_t"
        }
      ]
    },
    {
      "type-name": "vtss_appl_pm_dm_stats_data_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "EntryId",
          "type": "vtss_appl_pm_mep_info_t",
          "description": "The entry identifier for the performance monitor data sets."
        },
        {
          "name": "Rate",
          "type": "uint8_t",
          "description": "The gap between transmitting 1DM/DMM PDU in 10ms. The range is 10 to 65535."
        },
        {
          "name": "Unit",
          "type": "vtss_appl_mep_dm_tunit_t",
          "description": "The time resolution."
        },
        {
          "name": "Tx",
          "type": "uint32_t",
          "description": "The number of frame transmitted."
        },
        {
          "name": "Rx",
          "type": "uint32_t",
          "description": "The number of frame received."
        },
        {
          "name": "FarNearDelayAverage",
          "type": "uint32_t",
          "description": "The far to near average delay."
        },
        {
          "name": "FarNearDelayAverageVariation",
          "type": "uint32_t",
          "description": "The far to near average delay variation."
        },
        {
          "name": "FarNearDelayMin",
          "type": "uint32_t",
          "description": "The minimum far to near delay."
        },
        {
          "name": "FarNearDelayMax",
          "type": "uint32_t",
          "description": "The maximum far to near delay."
        },
        {
          "name": "NearFarDelayAverage",
          "type": "uint32_t",
          "description": "The near to far average delay."
        },
        {
          "name": "NearFarDelayAverageVariation",
          "type": "uint32_t",
          "description": "The near to far average delay variation."
        },
        {
          "name": "NearFarDelayMin",
          "type": "uint32_t",
          "description": "The minimum near to far delay."
        },
        {
          "name": "NearFarDelayMax",
          "type": "uint32_t",
          "description": "The maximum near to far delay."
        },
        {
          "name": "2WayDelayAverage",
          "type": "uint32_t",
          "description": "The two-way average delay."
        },
        {
          "name": "2WayDelayAverageVariation",
          "type": "uint32_t",
          "description": "The two-way average delay variation."
        },
        {
          "name": "2WayDelayMin",
          "type": "uint32_t",
          "description": "The minimum two-way delay."
        },
        {
          "name": "2WayDelayMax",
          "type": "uint32_t",
          "description": "The maximum two-way delay."
        }
      ]
    },
    {
      "type-name": "vtss_appl_pm_lm_stats_data_t",
      "class": "Struct",
      "description": "",
      "encoding-type": "Object",
      "elements": [
        {
          "name": "EntryId",
          "type": "vtss_appl_pm_mep_info_t",
          "description": "The entry identifier for the performance monitor data sets."
        },
        {
          "name": "Rate",
          "type": "vtss_appl_mep_rate_t",
          "description": "Frame rate of CCM/LMM PDU which is the inverse of transmission period as described in Y.1731."
        },
        {
          "name": "Tx",
          "type": "uint32_t",
          "description": "The number of frame transmitted."
        },
        {
          "name": "Rx",
          "type": "uint32_t",
          "description": "The number of frame received."
        },
        {
          "name": "NearEndLossCount",
          "type": "uint32_t",
          "description": "The near end loss count."
        },
        {
          "name": "NearEndLossRate",
          "type": "uint32_t",
          "description": "The near end loss ratio."
        },
        {
          "name": "FarEndLossCount",
          "type": "uint32_t",
          "description": "The far end loss count."
        },
        {
          "name": "FarEndLossRate",
          "type": "uint32_t",
          "description": "The far end loss ratio."
        }
      ]
    }
  ],
  "groups": [
    {
      "group-name": "access-management.config.ipv4",
      "description": "This is a table for managing Access Management per IPv4 basis"
    },
    {
      "group-name": "access-management.config.ipv6",
      "description": "This is a table for managing Access Management per IPv6 basis"
    },
    {
      "group-name": "acl.config.ace.config",
      "description": "The ACL ACE configuration table."
    },
    {
      "group-name": "acl.config.ace.precedence",
      "description": "It displays the sequence of ACEs to be hit."
    },
    {
      "group-name": "acl.config.interface",
      "description": "This is a table of interface configuration"
    },
    {
      "group-name": "acl.config.ratelimiter",
      "description": "This is a table of rate limiter configuration"
    },
    {
      "group-name": "acl.control.interface",
      "description": "This is a table of interface control"
    },
    {
      "group-name": "acl.status.ace.crossed-threshold",
      "description": "Table of ACE event status."
    },
    {
      "group-name": "acl.status.ace.hit-count",
      "description": "Table of ACE hit count status."
    },
    {
      "group-name": "acl.status.ace.status",
      "description": "Table of ACE status."
    },
    {
      "group-name": "acl.status.interface.hit-count",
      "description": "Table of interface hit count status."
    },
    {
      "group-name": "aggregation.config.group",
      "description": "The table is static Link Aggregation Group configuration table. The index is Aggregration Group Identifier."
    },
    {
      "group-name": "aggregation.status.group",
      "description": "The table is Aggregation Group status table. The index is Aggregration Group Identifier."
    },
    {
      "group-name": "arp-inspection.config.interface",
      "description": "This is a table for managing ARP Inspection per port basis"
    },
    {
      "group-name": "arp-inspection.config.static",
      "description": "This is a table for managing static ARP Inspection configuration"
    },
    {
      "group-name": "arp-inspection.config.vlan",
      "description": "This is a table for managing ARP Inspection per VLAN basis"
    },
    {
      "group-name": "arp-inspection.status.dynamic",
      "description": "This is a table for displaying all ARP Inspection entries"
    },
    {
      "group-name": "authentication.config.agent.console.authen",
      "description": "This is an ordered table of methods used to authenticate console access"
    },
    {
      "group-name": "authentication.config.agent.http.authen",
      "description": "This is an ordered table of methods used to authenticate HTTP access"
    },
    {
      "group-name": "authentication.config.agent.ssh.authen",
      "description": "This is an ordered table of methods used to authenticate ssh access"
    },
    {
      "group-name": "authentication.config.agent.telnet.authen",
      "description": "This is an ordered table of methods used to authenticate telnet access"
    },
    {
      "group-name": "authentication.config.radius.host",
      "description": "This is a table of Radius servers useed to query for RADIUS authentication"
    },
    {
      "group-name": "authentication.config.tacacs.host",
      "description": "This is a table of Tacacs servers useed to query for TACACS authentication"
    },
    {
      "group-name": "ddmi.status.interface",
      "description": "This is a DDMI status table of port interface."
    },
    {
      "group-name": "ddmi.status.interface.crossed-threshold",
      "parent-group-name": "ddmi.status.interface",
      "description": "The table is DDMI status table. The index is ifindex and event type."
    },
    {
      "group-name": "dhcp-server.config.excluded",
      "description": "The table is DHCP server excluded IP onfiguration table. The indexes are low IP and high IP address."
    },
    {
      "group-name": "dhcp-server.config.pool",
      "description": "The table is DHCP server pool onfiguration table. The indexe is pool name."
    },
    {
      "group-name": "dhcp-server.config.vlan",
      "description": "This is the table of DHCP server VLAN configuration. The index is VLAN ID."
    },
    {
      "group-name": "dhcp-server.status.binding",
      "description": "This is a table of binding data."
    },
    {
      "group-name": "dhcp-server.status.declined",
      "description": "This is a table of IP addresses declined by DHCP client."
    },
    {
      "group-name": "dhcp-snooping.config.interface",
      "description": "This is a table of DHCP Snooping port configuration parameters"
    },
    {
      "group-name": "dhcp-snooping.control.statistics.interface.clear",
      "description": "This is a table to clear port statistics in DHCP Snooping"
    },
    {
      "group-name": "dhcp-snooping.statistics.interface",
      "description": "This is a table of port statistics in DHCP Snooping "
    },
    {
      "group-name": "dhcp-snooping.status.assigned-ip",
      "description": "This is a table of assigned IP information in DHCP Snooping "
    },
    {
      "group-name": "dhcpv6-client.config.interface",
      "description": "This is a table for managing DHCPv6 client interface entries."
    },
    {
      "group-name": "dhcpv6-client.statistics.interface",
      "description": "This is a table for displaying per DHCPv6 client interface control message statistics in DHCPv6 message exchanges."
    },
    {
      "group-name": "dhcpv6-client.status.interface",
      "description": "This is a table for displaying per DHCPv6 client interface information derived from DHCPv6 server."
    },
    {
      "group-name": "dns.config.server",
      "description": "This is a table for managing DNS server configuration."
    },
    {
      "group-name": "dns.status.server",
      "description": "This is a table for displaying DNS server information."
    },
    {
      "group-name": "eee.capabilities.interface",
      "description": "This is a table to interface capabilities"
    },
    {
      "group-name": "eee.config.interface",
      "description": "This is a table to configure EEE configurations for a specific interface."
    },
    {
      "group-name": "eee.config.interface.queue-type",
      "parent-group-name": "eee.config.interface",
      "description": "This is a table to configure egress port queue type, whether urgent queue or normal queue.  We can configure more than one egress queues as urgent queues.  Queues configured as urgent, en-queued data will be transmitted with minimum latency.  Queue configured as normal, en-queued data will be transmitted with latency depending upon traffic utilization."
    },
    {
      "group-name": "eee.status.interface",
      "description": "This is a table to Energy Efficient Ethernet interface status"
    },
    {
      "group-name": "eps.config.instance",
      "description": "This is a table of created EPS instance parameters."
    },
    {
      "group-name": "eps.config.instance.base",
      "parent-group-name": "eps.config.instance",
      "description": "This is a table of created EPS instance configuration parameters.        When an EPS instance is created in the 'InstanceTable', an entry is automatically created here with default value."
    },
    {
      "group-name": "eps.config.instance.command",
      "parent-group-name": "eps.config.instance",
      "description": "This is a table of created EPS instance command.                           When an EPS instance is created in the 'InstanceTable', an entry is automatically created here with 'no command'."
    },
    {
      "group-name": "eps.config.instance.mep",
      "parent-group-name": "eps.config.instance",
      "description": "This is a table of created EPS instance MEP configuration parameters.                              When an EPS instance is created in the 'InstanceTable', an entry is automatically created here with                              default value 100 - meaning no MEP instance related."
    },
    {
      "group-name": "eps.status.instance",
      "description": "This is a table of created EPS instance status."
    },
    {
      "group-name": "erps.config",
      "description": "This is the ERPS group configuration table."
    },
    {
      "group-name": "erps.control",
      "description": "This is the ERPS group control table."
    },
    {
      "group-name": "erps.statistics",
      "description": "This table contains statistics per EPRS group."
    },
    {
      "group-name": "erps.status",
      "description": "This table contains status per EPRS group."
    },
    {
      "group-name": "ethernet-link-oam.capabilities.interface",
      "description": "This is a table to interface capabilities"
    },
    {
      "group-name": "ethernet-link-oam.config.interface",
      "description": "This is a table to configure Ethernet Link OAM configurations for a specific interface."
    },
    {
      "group-name": "ethernet-link-oam.config.interface.event",
      "parent-group-name": "ethernet-link-oam.config.interface",
      "description": "This is a table to configure Ethernet Link OAM Event configurations for a specific interface."
    },
    {
      "group-name": "ethernet-link-oam.config.interface.loopback-test",
      "parent-group-name": "ethernet-link-oam.config.interface",
      "description": "This is a table to test remote loopback feature for a specific interface. OAM remote loopback can be used for fault localization and link performance testing. During loopback testing local device will send test PDUs to peer device, Peer device looped back test PDUs to local device without altering any field of the frames."
    },
    {
      "group-name": "ethernet-link-oam.control.statistics.interface.clear",
      "description": "This is a table to clear Link OAM statistics for a specific interface."
    },
    {
      "group-name": "ethernet-link-oam.statistics.interface",
      "description": "This table represents the Ethernet Link OAM  interface PDU counters"
    },
    {
      "group-name": "ethernet-link-oam.statistics.interface.critical-link-event",
      "parent-group-name": "ethernet-link-oam.statistics.interface",
      "description": "This table represents the Ethernet Link OAM  interface Critical Link Event counters"
    },
    {
      "group-name": "ethernet-link-oam.status.interface",
      "description": "This is a table to Ethernet Link OAM interface status"
    },
    {
      "group-name": "ethernet-link-oam.status.interface.link-event",
      "parent-group-name": "ethernet-link-oam.status.interface",
      "description": "This is a table to Ethernet Link OAM interface link event status"
    },
    {
      "group-name": "ethernet-link-oam.status.interface.peer",
      "parent-group-name": "ethernet-link-oam.status.interface",
      "description": "This is a table to Ethernet Link OAM Peer interface status"
    },
    {
      "group-name": "ethernet-link-oam.status.interface.peer-link-event",
      "parent-group-name": "ethernet-link-oam.status.interface",
      "description": "This is a table to Ethernet Link OAM Peer interface link event status"
    },
    {
      "group-name": "evc.config.ece",
      "description": "This table contains the configuration of ECEs"
    },
    {
      "group-name": "evc.config.evc",
      "description": "This table contains the configuration of EVCs"
    },
    {
      "group-name": "evc.config.evc.interface",
      "parent-group-name": "evc.config.evc",
      "description": "This table provides interface configuration for EVCs"
    },
    {
      "group-name": "evc.config.interface",
      "description": "This table provides EVC configuration for interfaces"
    },
    {
      "group-name": "evc.config.interface.l2cp",
      "parent-group-name": "evc.config.interface",
      "description": "This table provides L2CP configuration for interfaces"
    },
    {
      "group-name": "evc.config.policer",
      "description": "This table provides EVC policer configuration"
    },
    {
      "group-name": "evc.control.ece.interface",
      "description": "This table provides ECE interface control"
    },
    {
      "group-name": "evc.control.evc.interface",
      "description": "This table provides EVC interface control"
    },
    {
      "group-name": "evc.statistics.ece.interface",
      "description": "This table contains ECE interface statistics"
    },
    {
      "group-name": "evc.statistics.evc.interface",
      "description": "This table contains EVC interface statistics"
    },
    {
      "group-name": "evc.status.ece",
      "description": "This table contains the status of ECEs"
    },
    {
      "group-name": "evc.status.evc",
      "description": "This table contains the status of EVCs"
    },
    {
      "group-name": "firmware.status.image",
      "description": "This is a table of status of images in flash."
    },
    {
      "group-name": "firmware.status.switch",
      "description": "This is a table of status of images in switch."
    },
    {
      "group-name": "gvrp.config.interface",
      "description": "This is a table of interface configuration"
    },
    {
      "group-name": "hqos.config.interface",
      "description": "This table provides HQoS configuration for interfaces"
    },
    {
      "group-name": "hqos.config.interface.hqos",
      "parent-group-name": "hqos.config.interface",
      "description": "This table contains the configuration for HQoS entries"
    },
    {
      "group-name": "hqos.config.interface.hqos.queue",
      "parent-group-name": "hqos.config.interface.hqos",
      "description": "This table contains the configuration for HQoS queues"
    },
    {
      "group-name": "icfg.status.file",
      "description": "This is a table of status of files in flash."
    },
    {
      "group-name": "ip-source-guard.config.interface",
      "description": "This is a table of IP source guard port configuration parameters."
    },
    {
      "group-name": "ip-source-guard.config.static",
      "description": "This is a table for managing the static binding table of IP source guard."
    },
    {
      "group-name": "ip-source-guard.status.dynamic",
      "description": "This is a table provided dynamic binding table of IP source guard."
    },
    {
      "group-name": "ip.config.interface",
      "description": "This is the IP interface table. When an IP interface is created it can be configured in the other tables found in this MIB."
    },
    {
      "group-name": "ip.config.interface.ipv4",
      "parent-group-name": "ip.config.interface",
      "description": "IPv4 interface configuration table. This table enables IPv4 related configuration of the corresponding IP interface."
    },
    {
      "group-name": "ip.config.interface.ipv6",
      "parent-group-name": "ip.config.interface",
      "description": "IPv6 interface configuration table. This table enables IPv6 related configuration of the corresponding IP interface."
    },
    {
      "group-name": "ip.config.route.ipv4",
      "description": "This is the IPv4 route configuration table."
    },
    {
      "group-name": "ip.config.route.ipv6",
      "description": "This is the IPv6 route configuration table."
    },
    {
      "group-name": "ip.control.interface.dhcp-client",
      "description": "This table provides control facilities to control an instance of the DHCP client."
    },
    {
      "group-name": "ip.statistics.interface.ipv4",
      "description": "This table provides IPv4 related statitics for a given IP interface."
    },
    {
      "group-name": "ip.statistics.interface.ipv6",
      "description": "This table provides IPv6 related statitics for a given IP interface."
    },
    {
      "group-name": "ip.statistics.interface.link",
      "description": "This table provides interface link statistics for a given IP interface."
    },
    {
      "group-name": "ip.status.interface.dhcp-client",
      "description": "This table provides status on the DHCP client running on a given interface."
    },
    {
      "group-name": "ip.status.interface.ipv4",
      "description": "This table provides IPv4 status information for IP interfaces. If an interface is configured to use a DHCP client, then the address can be found here."
    },
    {
      "group-name": "ip.status.interface.ipv6",
      "description": "This table provides IPv6 status information for IP interfaces. If an interface is configured to use a DHCP client, then the address can be found here."
    },
    {
      "group-name": "ip.status.interface.link",
      "description": "This table provides link-layer status information for IP interfaces."
    },
    {
      "group-name": "ip.status.neighbour.ipv4",
      "description": "This is the IPv4 neighbour table (ARP)."
    },
    {
      "group-name": "ip.status.neighbour.ipv6",
      "description": "This is the IPv6 neighbour table."
    },
    {
      "group-name": "ip.status.route.ipv4",
      "description": "This table provides IPv4 routing status."
    },
    {
      "group-name": "ip.status.route.ipv6",
      "description": "This table provides IPv6 routing status."
    },
    {
      "group-name": "ipmc-profile.config.address-range.ipv4",
      "description": "This is a table for managing the IPv4 address range entries that will be applied for IPMC profile(s)."
    },
    {
      "group-name": "ipmc-profile.config.address-range.ipv6",
      "description": "This is a table for managing the IPv6 address range entries that will be applied for IPMC profile(s)."
    },
    {
      "group-name": "ipmc-profile.config.management",
      "description": "This is a table for managing IPMC profile entries."
    },
    {
      "group-name": "ipmc-profile.config.precedence",
      "description": "This is a table for displaying the rule entries of a specific IPMC profile in precedence order."
    },
    {
      "group-name": "ipmc-profile.config.rule",
      "description": "This is a table for managing the filtering rules with respect to a set of address range used in a specific IPMC profile management entry."
    },
    {
      "group-name": "ipmc-snooping.config.interface.port",
      "description": "This is a table for managing extra IGMP snooping helper features per port basis"
    },
    {
      "group-name": "ipmc-snooping.config.interface.vlan",
      "description": "This is a table for managing IGMP Snooping VLAN interface entries."
    },
    {
      "group-name": "ipmc-snooping.status.igmp.group-address",
      "description": "This is a table for displaying the registered IPv4 multicast group address status from IGMP snooping."
    },
    {
      "group-name": "ipmc-snooping.status.igmp.group-src-list",
      "description": "This is a table for displaying the address SFM (a.k.a Source List Multicast) status in source list of the registered IPv4 multicast group from IGMP snooping."
    },
    {
      "group-name": "ipmc-snooping.status.igmp.router-port",
      "description": "This is a table for displaying the router port status from IGMP snooping configuration."
    },
    {
      "group-name": "ipmc-snooping.status.igmp.vlan",
      "description": "This is a table for displaying the per VLAN interface status in IGMP snooping configuration."
    },
    {
      "group-name": "ipmc-snooping.status.mld.group-address",
      "description": "This is a table for displaying the registered IPv6 multicast group address status from MLD snooping."
    },
    {
      "group-name": "ipmc-snooping.status.mld.group-src-list",
      "description": "This is a table for displaying the address SFM (a.k.a Source List Multicast) status in source list of the registered IPv6 multicast group from MLD snooping."
    },
    {
      "group-name": "ipmc-snooping.status.mld.router-port",
      "description": "This is a table for displaying the router port status from MLD snooping configuration."
    },
    {
      "group-name": "ipmc-snooping.status.mld.vlan",
      "description": "This is a table for displaying the per VLAN interface status in MLD snooping configuration."
    },
    {
      "group-name": "json-rpc-notification.config.destination",
      "description": "Table of JSON-RPC Notification destinations."
    },
    {
      "group-name": "json-rpc-notification.config.notification",
      "description": "Table of JSON-RPC Notifications subscriptions."
    },
    {
      "group-name": "lacp.config.interface",
      "description": "This is a table of the LACP port configurations"
    },
    {
      "group-name": "lacp.control.interface",
      "description": "This is a table to clear LACP port statistics"
    },
    {
      "group-name": "lacp.statistics.interface",
      "description": "This is a table of the LACP port statistics"
    },
    {
      "group-name": "lacp.status.interface",
      "description": "This is a table of the LACP port status"
    },
    {
      "group-name": "lacp.status.system",
      "description": "This is a table of the LACP system status"
    },
    {
      "group-name": "led-power-reduction.config.time-intensity",
      "description": "This is a table to assign led intensity level to each clock hour(based on 24-hour time notaion) of the day"
    },
    {
      "group-name": "lldp.config.interface",
      "description": "This is a table to configure LLDP configurations for a specific interface."
    },
    {
      "group-name": "lldp.config.med.interface",
      "description": "This is a table to configure LLDP MEDIA configurations for a specific interface."
    },
    {
      "group-name": "lldp.config.med.location",
      "description": "The civic address location information. Each civic address can contain up to 250 characters, but the total amount of characters for the combined civic address locations must not exceed 250 bytes. Note: If an civic address location is non-empty it uses the amount of characters plus addition two characters. This is described in TIA1057, Section 10.2.4.3.2."
    },
    {
      "group-name": "lldp.config.med.policy",
      "description": "This is a table to configure LLDP MED Policies for the device."
    },
    {
      "group-name": "lldp.config.med.policy-list",
      "description": "Each interface can be mapped to multiple policies. Set to TRUE in order to enable the corresponding policy to be transmitted at the interface. It is a requirement that the policy is defined."
    },
    {
      "group-name": "lldp.control.statistics.interface.clear",
      "description": "This is a table to clear LLDP statistics for a specific interface."
    },
    {
      "group-name": "lldp.statistics.interfaces",
      "description": "This table represents the LLDP  interface counters"
    },
    {
      "group-name": "lldp.status.med.remote-device",
      "description": "This is a table to show the LLDP neighbors information for a specific interface."
    },
    {
      "group-name": "lldp.status.med.remote-device-loc",
      "description": "This is a table to show the LLDP-MED remote device (neighbor) civic location information for a specific interface."
    },
    {
      "group-name": "lldp.status.med.remote-device-network-policy",
      "description": "This is a table to show the LLDP-MED remote device (neighbor) network policies information for a specific interface."
    },
    {
      "group-name": "lldp.status.neighbors",
      "description": "This is a table to show the LLDP neighbors information for a specific interface."
    },
    {
      "group-name": "lldp.status.neighbors-mgmt",
      "description": "This is a table to show the LLDP neighbors information for a specific interface."
    },
    {
      "group-name": "loop-protect.config.interface",
      "description": "This is a table of loop protection interface parameters"
    },
    {
      "group-name": "loop-protect.status.interface",
      "description": "This is a table of loop protection interface status"
    },
    {
      "group-name": "mac.config.fdb.static",
      "description": "This table represents static mac addresses added through the mgmt interface. "
    },
    {
      "group-name": "mac.config.interface.learn",
      "description": "This table represents the learning mode of each port"
    },
    {
      "group-name": "mac.config.vlan.learn",
      "description": "This table represents the learning mode of each vlan 1-4095"
    },
    {
      "group-name": "mac.statistics.interface",
      "description": "This table represent the statistics of the Port interfaces"
    },
    {
      "group-name": "mac.status.fdb.full",
      "description": "This table represents all mac addresses in the FDB"
    },
    {
      "group-name": "mac.status.fdb.static",
      "description": "This table represents all static mac addresses in the FDB"
    },
    {
      "group-name": "mep.config.ais",
      "description": "This is a table of created instance Alarm Indication Signal configuration parameters"
    },
    {
      "group-name": "mep.config.aps",
      "description": "This is a table of created instance Automatic Protection Switching configuration parameters"
    },
    {
      "group-name": "mep.config.bfd",
      "description": "This is a table of created instance Bidirectional Forwarding Detection configuration parameters"
    },
    {
      "group-name": "mep.config.bfd-auth",
      "description": "This is a table of created instance Bidirectional Forwarding Detection Authentication configuration parameters"
    },
    {
      "group-name": "mep.config.cc",
      "description": "This is a table of created instance Continuity Check configuration parameters"
    },
    {
      "group-name": "mep.config.client-flow",
      "description": "This is a table of client flow configuration parameters"
    },
    {
      "group-name": "mep.config.dm",
      "description": "This is a table of created instance Delay Measurement configuration parameters"
    },
    {
      "group-name": "mep.config.instance",
      "description": "This is a table of created instance configuration parameters"
    },
    {
      "group-name": "mep.config.instance-peer",
      "description": "This is a table of peer MEP configuration parameters"
    },
    {
      "group-name": "mep.config.lb",
      "description": "This is a table of created instance Loop Back configuration parameters"
    },
    {
      "group-name": "mep.config.lck",
      "description": "This is a table of created instance Locked Signal configuration parameters"
    },
    {
      "group-name": "mep.config.lm",
      "description": "This is a table of created instance Loss Measurement configuration parameters"
    },
    {
      "group-name": "mep.config.lm_avail",
      "description": "This is a table of created instance Loss Measurement Availability configuration parameters"
    },
    {
      "group-name": "mep.config.lm_hli",
      "description": "This is a table of created instance Loss Measurement High Loss Interval configuration parameters"
    },
    {
      "group-name": "mep.config.lm_sdeg",
      "description": "This is a table of created instance Loss Measurement Signal Degrade configuration parameters"
    },
    {
      "group-name": "mep.config.lst",
      "description": "This is a table of created instance Link State Tracking configuration parameters"
    },
    {
      "group-name": "mep.config.lt",
      "description": "This is a table of created instance Link Trace configuration parameters"
    },
    {
      "group-name": "mep.config.pm",
      "description": "This is a table of created instance Performance Monitoring configuration parameters"
    },
    {
      "group-name": "mep.config.rt",
      "description": "This is a table of created instance Route Trace configuration parameters"
    },
    {
      "group-name": "mep.config.syslog",
      "description": "This is a table of created instance Syslog configuration parameters"
    },
    {
      "group-name": "mep.config.tst",
      "description": "This is a table of created instance Test Signal configuration parameters"
    },
    {
      "group-name": "mep.control.bfd",
      "description": "This is a table of created instance BFD control parameters"
    },
    {
      "group-name": "mep.control.dm",
      "description": "This is a table of created instance Delay Measurement control parameters"
    },
    {
      "group-name": "mep.control.lm",
      "description": "This is a table of created instance Loss Measurement control parameters"
    },
    {
      "group-name": "mep.control.tst",
      "description": "This is a table of created instance Test Signal control parameters"
    },
    {
      "group-name": "mep.status.bfd",
      "description": "This is a table of MEP BFD status"
    },
    {
      "group-name": "mep.status.cc-peer",
      "description": "This is a table of peer MEP CC status"
    },
    {
      "group-name": "mep.status.dm-one-way-far-near",
      "description": "This is a table of Delay Measurement One Way Far to Near status"
    },
    {
      "group-name": "mep.status.dm-one-way-near-far",
      "description": "This is a table of Delay Measurement One Way Near to Far status"
    },
    {
      "group-name": "mep.status.dm-two-way",
      "description": "This is a table of Delay Measurement Two Way status"
    },
    {
      "group-name": "mep.status.instance",
      "description": "This is a table of created instance status"
    },
    {
      "group-name": "mep.status.instance-peer",
      "description": "This is a table of peer MEP status"
    },
    {
      "group-name": "mep.status.lb",
      "description": "This is a table of Loop Back status"
    },
    {
      "group-name": "mep.status.lb-reply",
      "description": "This is a table of Loop Back reply status"
    },
    {
      "group-name": "mep.status.lm",
      "description": "This is a table of Loss Measurement status"
    },
    {
      "group-name": "mep.status.lm-avail",
      "description": "This is a table of Loss Measurement Availability status"
    },
    {
      "group-name": "mep.status.lm-hli",
      "description": "This is a table of Loss Measurement High Loss Interval status"
    },
    {
      "group-name": "mep.status.lm-notif",
      "description": "This is a table of Loss Measurement Notification status"
    },
    {
      "group-name": "mep.status.lt",
      "description": "This is a table of Link Trace status"
    },
    {
      "group-name": "mep.status.lt-reply",
      "description": "This is a table of Link Trace reply status"
    },
    {
      "group-name": "mep.status.rt",
      "description": "This is a table of Route Trace status"
    },
    {
      "group-name": "mep.status.rt-reply",
      "description": "This is a table of Route Trace reply status"
    },
    {
      "group-name": "mep.status.tst",
      "description": "This is a table of Test Signal status"
    },
    {
      "group-name": "mirror.config.session",
      "description": "This is a table of configuration per session"
    },
    {
      "group-name": "mpls.config.cosmap",
      "description": "This is the MPLS Class of Service map configuration table."
    },
    {
      "group-name": "mpls.config.link",
      "description": "This is the MPLS Link configuration table."
    },
    {
      "group-name": "mpls.config.lsp",
      "description": "This is the MPLS Lsp configuration table."
    },
    {
      "group-name": "mpls.config.pw",
      "description": "This is the MPLS Pseudo Wire configuration table."
    },
    {
      "group-name": "mpls.config.tunnel",
      "description": "This is the MPLS Tunnel configuration table."
    },
    {
      "group-name": "mpls.control.interface",
      "description": "This is a table of created instance MPLS-TP tunnel or PW control parameters"
    },
    {
      "group-name": "mpls.control.lsp",
      "description": "This is a table of created instance MPLS-TP LSP control parameters"
    },
    {
      "group-name": "mpls.statistics.lsp",
      "description": "This table contains MPLS Lsp Counters."
    },
    {
      "group-name": "mpls.statistics.pw",
      "description": "This table contains MPLS Tunnel Counters."
    },
    {
      "group-name": "mpls.statistics.tunnel",
      "description": "This table contains MPLS Tunnel Counters."
    },
    {
      "group-name": "mpls.status.link",
      "description": "This table contains MPLS Link status per MPLS group."
    },
    {
      "group-name": "mpls.status.lsp",
      "description": "This table contains MPLS Lsp status per MPLS group."
    },
    {
      "group-name": "mpls.status.pw",
      "description": "This table contains MPLS Pseudo Wire status per MPLS group."
    },
    {
      "group-name": "mpls.status.tunnel",
      "description": "This table contains MPLS Tunnel status per MPLS group."
    },
    {
      "group-name": "mstp.config.cist.interface",
      "description": "This is a table of the CIST physical interface parameters"
    },
    {
      "group-name": "mstp.config.msti.aggr",
      "description": "This is a table of the MSTI aggregations parameters"
    },
    {
      "group-name": "mstp.config.msti.interface",
      "description": "This is a table of the MSTI interface parameters"
    },
    {
      "group-name": "mstp.config.msti.map",
      "description": "This is the 802.1Q - 8.9 MST Configuration table\n          For the purposes of calculating the Configuration Digest, the MST          Configuration Table is considered to contain 4096 consecutive          single octet elements, where each element of the table (with the          exception of the first and last) contains an MSTID value."
    },
    {
      "group-name": "mstp.config.msti.parameters",
      "description": "This is a table of the bridge instance (MSTIs) parameters"
    },
    {
      "group-name": "mstp.statistics.interface",
      "description": "This table represent the statistics of the CIST interfaces"
    },
    {
      "group-name": "mstp.status.bridge",
      "description": "This table represent the status of the bridge instances"
    },
    {
      "group-name": "mstp.status.interface",
      "description": "This table represent the status of the interface instances"
    },
    {
      "group-name": "mvr.config.interface.port",
      "description": "This is a table for managing extra MVR helper features per port basis."
    },
    {
      "group-name": "mvr.config.interface.vlan",
      "description": "This is a table for managing MVR VLAN interface entries."
    },
    {
      "group-name": "mvr.config.vlan-port",
      "description": "This is a table for managing MVR port roles of a specific MVR VLAN interface."
    },
    {
      "group-name": "mvr.status.igmp.group.address",
      "description": "This is a table for displaying the registered IPv4 multicast group address status in IGMP from MVR."
    },
    {
      "group-name": "mvr.status.igmp.group.src-list",
      "description": "This is a table for displaying the address SFM (a.k.a Source List Multicast) status in source list of the registered IPv4 multicast group in IGMP from MVR."
    },
    {
      "group-name": "mvr.status.igmp.vlan",
      "description": "This is a table for displaying the per VLAN interface status in MVR from IGMP protocol."
    },
    {
      "group-name": "mvr.status.mld.group.address",
      "description": "This is a table for displaying the registered IPv6 multicast group address status in MLD from MVR."
    },
    {
      "group-name": "mvr.status.mld.group.src-list",
      "description": "This is a table for displaying the address SFM (a.k.a Source List Multicast) status in source list of the registered IPv6 multicast group in MLD from MVR."
    },
    {
      "group-name": "mvr.status.mld.vlan",
      "description": "This is a table for displaying the per VLAN interface status in MVR from MLD protocol."
    },
    {
      "group-name": "mvrp.config.interfaces",
      "description": "This is the MVRP interface table. The number of interfaces is the total number of ports available on the switch/stack. Each one of these interfaces can be set to either MVRP enabled or MVRP disabled."
    },
    {
      "group-name": "nas.config.interface",
      "description": "This is a table for port configuration"
    },
    {
      "group-name": "nas.control.reinit-or-reauthen",
      "description": "This is a table to start NAS re-authorization"
    },
    {
      "group-name": "nas.control.statistics.clear",
      "description": "This is a table to clear NAS statistics for a specific interface."
    },
    {
      "group-name": "nas.statistics.eapol",
      "description": "This is a table to get NAS EAPOL statistics."
    },
    {
      "group-name": "nas.statistics.radius",
      "description": "This is a table to get NAS EAPOL statistics."
    },
    {
      "group-name": "nas.status.interface",
      "description": "This is a table to get NAS per-port status table."
    },
    {
      "group-name": "nas.status.last-supplicant",
      "description": "This is a table to get NAS last supplicant"
    },
    {
      "group-name": "ntp.config.servers",
      "description": "This is a table of NTP server."
    },
    {
      "group-name": "performance-monitor.config.global.transfer-schedule.hour",
      "description": "This is a table for managing PM hourly scheduled transfer configuration."
    },
    {
      "group-name": "performance-monitor.config.global.transfer-schedule.quarter",
      "description": "This is a table for managing PM quarterly scheduled transfer configuration."
    },
    {
      "group-name": "performance-monitor.statistics.dm",
      "description": "This is a table for displaying PM delay measurement statistics."
    },
    {
      "group-name": "performance-monitor.statistics.dm-bin",
      "description": "This is a table for displaying PM bin delay measurement statistics."
    },
    {
      "group-name": "performance-monitor.statistics.evc",
      "description": "This is a table for displaying PM EVC statistics."
    },
    {
      "group-name": "performance-monitor.statistics.lm",
      "description": "This is a table for displaying PM loss measurement statistics."
    },
    {
      "group-name": "performance-monitor.status.interval",
      "description": "This is a table for displaying per type and interval PM time information."
    },
    {
      "group-name": "port-power-saving.capabilities.interface",
      "description": "This is a table to interface capabilities"
    },
    {
      "group-name": "port-power-saving.config.interface",
      "description": "This table provides Port Power Savings configuration for an interface"
    },
    {
      "group-name": "port-power-saving.status.interface",
      "description": "This is a table to Port Power Savings interface status"
    },
    {
      "group-name": "port-security.config.interface",
      "description": "This is a table of port configuration per session"
    },
    {
      "group-name": "port-security.control.reopen",
      "description": "This is a table to re-open port and move it to ready state, if it was being disabled after limit was reached."
    },
    {
      "group-name": "port-security.statistics.interface",
      "description": "This is a table of port statistics per session"
    },
    {
      "group-name": "port-security.status.interface",
      "description": "This is a table of port configuration per session"
    },
    {
      "group-name": "port.config",
      "description": "This is a table of the port interface parameters"
    },
    {
      "group-name": "port.control.statistics.clear",
      "description": "This is a table to clear port Interface statistics"
    },
    {
      "group-name": "port.control.veriphy.start",
      "description": "This is a table to start VeriPhy for the interface"
    },
    {
      "group-name": "port.statistics.bridge",
      "description": "This table represents the port interface bridge counters"
    },
    {
      "group-name": "port.statistics.ethernet-like",
      "description": "This table represents the port Ethernet-like interfaces counters"
    },
    {
      "group-name": "port.statistics.if-group",
      "description": "This table represents the port interfaces group (RFC 2863) counters"
    },
    {
      "group-name": "port.statistics.queues",
      "description": "This table represents the port interfaces queues counters"
    },
    {
      "group-name": "port.statistics.rmon",
      "description": "This table represents the port interface RMON statistics counters"
    },
    {
      "group-name": "port.status",
      "description": "This table represents the status of the ports"
    },
    {
      "group-name": "port.status.veriphy.result",
      "parent-group-name": "port.status",
      "description": "This table represents the VeriPhy result from the last VeriPhy run for the interface"
    },
    {
      "group-name": "private-vlan.config.isolation",
      "description": "This is a table for managing Private VLAN port isolation entries."
    },
    {
      "group-name": "private-vlan.config.membership",
      "description": "This is a table for managing Private VLAN VLAN membership entries."
    },
    {
      "group-name": "privilege.config.web",
      "description": "This is a table to configure web privilege"
    },
    {
      "group-name": "ptp.config.clocks.default-ds",
      "description": "This is the configurable part of the PTP clocks DefaultDS."
    },
    {
      "group-name": "ptp.config.clocks.filter-parameters",
      "description": "This is the configurable part of the PTP clocks filter parameters."
    },
    {
      "group-name": "ptp.config.clocks.port-ds",
      "description": "This is the configurable part of the PTP clocks PortDS."
    },
    {
      "group-name": "ptp.config.clocks.servo-parameters",
      "description": "This is the configurable part of the PTP clocks servo parameters."
    },
    {
      "group-name": "ptp.config.clocks.slave-config",
      "description": "This is the configurable part of the PTP clocks slave configuration."
    },
    {
      "group-name": "ptp.config.clocks.time-properties-ds",
      "description": "This is the configurable part of the PTP clocks TimePropertiesDS."
    },
    {
      "group-name": "ptp.config.clocks.unicast-slave-config",
      "description": "This is the configurable part of the PTP clocks unicast slave configuration."
    },
    {
      "group-name": "ptp.control.clocks",
      "description": "This is the PTP clocks control structure."
    },
    {
      "group-name": "ptp.status.clocks.clocks-slave-ds",
      "description": "This is the dynamic (status) part of the PTP clocks SlaveDS."
    },
    {
      "group-name": "ptp.status.clocks.current-ds",
      "description": "This is the dynamic (status) part of the PTP clocks CurrentDS."
    },
    {
      "group-name": "ptp.status.clocks.default-ds",
      "description": "This is the dynamic (status) part of the PTP clocks DefaultDS."
    },
    {
      "group-name": "ptp.status.clocks.parent-ds",
      "description": "This is the dynamic (status) part of the PTP clocks ParentDS."
    },
    {
      "group-name": "ptp.status.clocks.port-ds",
      "description": "This is the dynamic (status) part of the PTP clocks PortDS."
    },
    {
      "group-name": "ptp.status.clocks.time-properties-ds",
      "description": "This is the dynamic (status) part of the PTP clocks TimePropertiesDS."
    },
    {
      "group-name": "ptp.status.clocks.unicast.master",
      "description": "This is the dynamic (status) part of the PTP clocks unicast master table."
    },
    {
      "group-name": "ptp.status.clocks.unicast.slave",
      "description": "This is the dynamic (status) part of the PTP clocks unicast slave table."
    },
    {
      "group-name": "qos.config.global.cos-to-dscp",
      "description": "This table has 8 entries, one for each Cos value.\nThis is an optional table and is only present if qosCapabilitiesHasDscp is true."
    },
    {
      "group-name": "qos.config.global.dscp",
      "description": "This table has 64 entries, one for each DSCP value.\nThis is an optional table and is only present if qosCapabilitiesHasDscp is true."
    },
    {
      "group-name": "qos.config.global.wred",
      "description": "This table contains the configuration of WRED (Weighted Random Early Discard).\nThis is an optional table and is only present if qosCapabilitiesHasWredV1, qosCapabilitiesHasWredV2 or qosCapabilitiesHasWredV3 is true."
    },
    {
      "group-name": "qos.config.interface",
      "description": "This table provides QoS configuration for QoS manageable interfaces"
    },
    {
      "group-name": "qos.config.interface.cos-to-tag",
      "parent-group-name": "qos.config.interface",
      "description": "This table contains the mapping of (interface, CoS, DPL) to (PCP, DEI) values.\nThe mappings given by this table is used for packets transmitted on an interface if and only if that interface has the value of TagRemarkingMode set to 'mapped'\nThis is an optional table and is only present if QosCapabilitiesHasTagRemarking is true."
    },
    {
      "group-name": "qos.config.interface.policer",
      "parent-group-name": "qos.config.interface",
      "description": "This table provides policer configuration for an interface"
    },
    {
      "group-name": "qos.config.interface.queue-policer",
      "parent-group-name": "qos.config.interface",
      "description": "This table provides queue policer configuration for interfaces\nThis is an optional table and is only present if QosCapabilitiesHasPortQueuePolicers is true."
    },
    {
      "group-name": "qos.config.interface.queue-shaper",
      "parent-group-name": "qos.config.interface",
      "description": "This table provides queue shaper configuration for interfaces"
    },
    {
      "group-name": "qos.config.interface.scheduler",
      "parent-group-name": "qos.config.interface",
      "description": "This table contains the mapping of (interface, queue) to weight values.\nThe mappings given by this table is used when an interface has the value of DwrrCount greater than 0.\nRead the qosSchedulerStatusTable in order to get the 'real' weights in percent as used by the hardware."
    },
    {
      "group-name": "qos.config.interface.shaper",
      "parent-group-name": "qos.config.interface",
      "description": "This table provides shaper configuration for an interface"
    },
    {
      "group-name": "qos.config.interface.storm-policer.broadcast",
      "parent-group-name": "qos.config.interface",
      "description": "This table provides storm policer configuration for broadcast packets received on an interface\nThis is an optional table and is only present if QosCapabilitiesHasPortStormPolicers is true."
    },
    {
      "group-name": "qos.config.interface.storm-policer.unicast",
      "parent-group-name": "qos.config.interface",
      "description": "This table provides storm policer configuration for unicast packets received on an interface\nThis is an optional table and is only present if QosCapabilitiesHasPortStormPolicers is true."
    },
    {
      "group-name": "qos.config.interface.storm-policer.unknown",
      "parent-group-name": "qos.config.interface",
      "description": "This table provides storm policer configuration for unknown (flooded) packets received on an interface\nThis is an optional table and is only present if QosCapabilitiesHasPortStormPolicers is true."
    },
    {
      "group-name": "qos.config.interface.tag-to-cos",
      "parent-group-name": "qos.config.interface",
      "description": "This table contains the mapping of (interface, PCP, DEI) to (CoS, DPL) values.\nThe mappings given by this table is used for all tagged packets received on an interface if and only if that interface has the value of TrustTag set to 'true'\nThis is an optional table and is only present if QosCapabilitiesHasFixedTagCosMap is false and QosCapabilitiesHasTagClassification is true."
    },
    {
      "group-name": "qos.config.qce",
      "description": "This table contains the configuration of QCEs. The index is QceId.\nThis is an optional table and is only present if qosCapabilitiesHasQce is true."
    },
    {
      "group-name": "qos.config.qce.precedence",
      "parent-group-name": "qos.config.qce",
      "description": "This table contains the precedence of QCEs ordered by their position in the QCL.\nThis is an optional table and is only present if qosCapabilitiesHasQce is true."
    },
    {
      "group-name": "qos.status.interface",
      "description": "This table provides QoS status for QoS manageable interfaces"
    },
    {
      "group-name": "qos.status.interface.scheduler",
      "parent-group-name": "qos.status.interface",
      "description": "This table contains the mapping of (interface, queue) to weight values.\nThe mappings given by this table are the 'real' weights in percent as used by the hardware."
    },
    {
      "group-name": "qos.status.qce",
      "description": "This table contains the QCE status in the hardware table.\nThis is an optional table and is only present if QosCapabilitiesHasQce is true."
    },
    {
      "group-name": "rmon.config.alarm",
      "description": "The table is RMON statistics add/delete table entry."
    },
    {
      "group-name": "rmon.config.ether-stats",
      "description": "The table is RMON statistics add/delete table entry."
    },
    {
      "group-name": "rmon.config.event",
      "description": "The table is RMON statistics add/delete table entry."
    },
    {
      "group-name": "rmon.config.history",
      "description": "The table is RMON history add/delete table entry."
    },
    {
      "group-name": "rmon.statistics.ether-stats",
      "description": "This is a table to show statistics data"
    },
    {
      "group-name": "rmon.statistics.history",
      "description": "This is a table to show statistics data"
    },
    {
      "group-name": "rmon.status.alarm",
      "description": "The table is RMON event status table entry."
    },
    {
      "group-name": "rmon.status.event",
      "description": "The table is RMON event status table entry."
    },
    {
      "group-name": "rmon.status.event-last-sent",
      "description": "The table is RMON event last sent status table entry."
    },
    {
      "group-name": "rmon.status.history",
      "description": "This is a table to history entry status"
    },
    {
      "group-name": "sflow.config.cp",
      "description": "The table is sFlow flow sampling configuration table. The indexes are ifindex & instance number."
    },
    {
      "group-name": "sflow.config.fs",
      "description": "The table is sFlow flow sampling configuration table. The indexes are ifindex & instance number."
    },
    {
      "group-name": "sflow.config.rcvr",
      "description": "The table is sFlow receiver configuration table. The index is receiver index number (unsigned integer)."
    },
    {
      "group-name": "sflow.control.instance",
      "description": "This is a table to clear SFLOW instance statistics"
    },
    {
      "group-name": "sflow.control.rcvr",
      "description": "This is a table to clear SFLOW receiver statistics"
    },
    {
      "group-name": "sflow.statistics.instance",
      "description": "This is a table to clear SFLOW instance statistics"
    },
    {
      "group-name": "sflow.statistics.rcvr",
      "description": "This is a table of the Sflow receiver status"
    },
    {
      "group-name": "sflow.status.rcvr",
      "description": "This is a table of the Sflow receiver status"
    },
    {
      "group-name": "snmp.config.accesses",
      "description": "This is a table for configuring SNMPv3 accesse groups."
    },
    {
      "group-name": "snmp.config.communities",
      "description": "This is a table for configuring SNMPv3 communities."
    },
    {
      "group-name": "snmp.config.groups",
      "description": "This is a table for configuring SNMPv3 groups."
    },
    {
      "group-name": "snmp.config.users",
      "description": "This is a table for configuring SNMPv3 users."
    },
    {
      "group-name": "snmp.config.views",
      "description": "This is a table for configuring SNMPv3 views."
    },
    {
      "group-name": "synce.config.ports.port-config",
      "description": "This is the SyncE port configuration."
    },
    {
      "group-name": "synce.config.sources.clock-source-nomination",
      "description": "This is the SyncE source nomination configuration."
    },
    {
      "group-name": "synce.control.sources.clock-source",
      "description": "This is the SyncE sources control structure."
    },
    {
      "group-name": "synce.status.ports.port-status",
      "description": "This is the port status."
    },
    {
      "group-name": "synce.status.sources.clock-source-nomination",
      "description": "This is the clock source nomination status."
    },
    {
      "group-name": "syslog.control.history",
      "description": "The syslog history clear table."
    },
    {
      "group-name": "syslog.status.history",
      "description": "The syslog history table."
    },
    {
      "group-name": "system-utility.control.reboot",
      "description": "This is a table to reboot a swicth"
    },
    {
      "group-name": "system-utility.control.system-led",
      "description": "This is a table to clear the system LED error status"
    },
    {
      "group-name": "system-utility.status.power-supply",
      "description": "Table of power supply status."
    },
    {
      "group-name": "system-utility.status.system-led",
      "description": "Table of system LED status."
    },
    {
      "group-name": "thermal-protect.config.global",
      "description": "This is a table to assign a temperature to each of the groups"
    },
    {
      "group-name": "thermal-protect.config.interface",
      "description": "This is a table to interface group configuration"
    },
    {
      "group-name": "thermal-protect.status.interface",
      "description": "This is a table to thermal protection interface status"
    },
    {
      "group-name": "udld.config.interface.parameters",
      "description": "This is a table of udld interface conf parameters"
    },
    {
      "group-name": "udld.status.interface.local-device",
      "description": "This is a table of udld interface local device information"
    },
    {
      "group-name": "udld.status.interface.neighbour",
      "description": "This is a table of udld interface neighbor cache information"
    },
    {
      "group-name": "users.config.global",
      "description": "The table is Users onfiguration table. The index is user name."
    },
    {
      "group-name": "vcl.config.ip",
      "description": "This is the IP Subnet to VLAN ID configuration table. The key of this table is the IP subnet expressed as x.x.x.x/x, where the first 4 octets represent the IPv4 address and the last one is the mask length.\nNOTE#1: Inside the VCL module these entries are actually sorted based on a priority defined by the mask length, so that subnets with larger mask lengths are first in the list, followed by entries with smaller mask lengths. SNMP cannot follow this sorting, therefore the order the entries are retrieved by the iterator may not be the same as the actually stored order. (This is not an issue, but should be taken into consideration when using the SNMP interface to create a user interface.\nNOTE#2: Even though only the subnet address is stored in the table (i.e. both 192.168.1.0/4 and 192.168.2.0/4 will end up as 192.0.0.0/4), the SNMP iterator will NOT take this into consideration. So, when searching the next subnet of 192.168.1.0/4, the result could be 193.0.0.0/4 but not 192.168.1.0/24 (granted that these entries are present)"
    },
    {
      "group-name": "vcl.config.mac",
      "description": "This is the MAC address to VLAN ID configuration table."
    },
    {
      "group-name": "vcl.config.protocol.group",
      "description": "This is the Protocol Group to VLAN ID configuration table."
    },
    {
      "group-name": "vcl.config.protocol.proto",
      "description": "This is the Protocol to Protocol Group mapping table."
    },
    {
      "group-name": "vlan-translation.config.interfaces",
      "description": "This is the VLAN translation interface table. The number of interfaces is the total number of ports available on the switch. Each one of these interfaces can be set to use a specific Group of VLAN translation mappings, identified by the respective Group ID."
    },
    {
      "group-name": "vlan-translation.config.translation",
      "description": "This is the VLAN translation mapping table.\n Here the user stores VLAN translation mappings (VID->TVID) inside groups that can later be activated on specific switch interfaces"
    },
    {
      "group-name": "vlan.config.global.name",
      "description": "Table of VLAN names."
    },
    {
      "group-name": "vlan.config.interface",
      "description": "Table of per-port configuration."
    },
    {
      "group-name": "vlan.config.interface.svl",
      "parent-group-name": "vlan.config.interface",
      "description": "Shared VLAN Learning (SVL) allows for having one or more VLAN IDs map to the same Filter ID (FID). For a given set of VLANs, if an individual MAC address is learned in one VLAN, that learned information is used in forwarding decisions taken for that address relative to all other VLANs in the given set.\nfidCnt, which can be found in the capabilities section, indicates the number of FIDs available on this platform. The feature is not available if this number is 0."
    },
    {
      "group-name": "vlan.status.interface",
      "description": "Table of per-interface (port) status."
    },
    {
      "group-name": "vlan.status.membership",
      "description": "Table of per-VLAN, per-VLAN user port memberships."
    },
    {
      "group-name": "voice-vlan.config.interface",
      "description": "This is a table for managing per port voice VLAN functions."
    },
    {
      "group-name": "voice-vlan.config.oui",
      "description": "This is a table for managing the telephony OUI settings that will be used for voice VLAN functions."
    }
  ],
  "methods": [
    {
      "method-name": "port.config.get",
      "group-name": "port.config",
      "params": [
        {
          "name": "ifindex",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "conf",
          "type": "vtss_appl_port_mib_conf_t"
        }
      ]
    },
    {
      "method-name": "port.config.get",
      "description": "This is an overload of port.config.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "port.config",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ifindex",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "conf",
                  "type": "vtss_appl_port_mib_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "port.config.set",
      "group-name": "port.config",
      "params": [
        {
          "name": "ifindex",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_port_mib_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "port.status.veriphy.result.get",
      "group-name": "port.status.veriphy.result",
      "params": [
        {
          "name": "ifindex",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "res",
          "type": "vtss_appl_port_veriphy_result_t"
        }
      ]
    },
    {
      "method-name": "port.status.veriphy.result.get",
      "description": "This is an overload of port.status.veriphy.result.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "port.status.veriphy.result",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ifindex",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "res",
                  "type": "vtss_appl_port_veriphy_result_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "port.status.get",
      "group-name": "port.status",
      "params": [
        {
          "name": "ifindex",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "status",
          "type": "vtss_appl_port_mib_status_t"
        }
      ]
    },
    {
      "method-name": "port.status.get",
      "description": "This is an overload of port.status.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "port.status",
      "notification": "port.status.update",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ifindex",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "status",
                  "type": "vtss_appl_port_mib_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "port.control.statistics.clear.set",
      "group-name": "port.control.statistics.clear",
      "params": [
        {
          "name": "ifindex",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "clear",
          "type": "vtss_bool_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "port.control.veriphy.start.set",
      "group-name": "port.control.veriphy.start",
      "params": [
        {
          "name": "ifindex",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "ctrl",
          "type": "vtss_bool_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "port.statistics.rmon.get",
      "group-name": "port.statistics.rmon",
      "params": [
        {
          "name": "ifindex",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "statistics",
          "type": "vtss_port_rmon_counters_t"
        }
      ]
    },
    {
      "method-name": "port.statistics.rmon.get",
      "description": "This is an overload of port.statistics.rmon.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "port.statistics.rmon",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ifindex",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "statistics",
                  "type": "vtss_port_rmon_counters_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "port.statistics.if-group.get",
      "group-name": "port.statistics.if-group",
      "params": [
        {
          "name": "ifindex",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "counters",
          "type": "vtss_port_if_group_counters_t"
        }
      ]
    },
    {
      "method-name": "port.statistics.if-group.get",
      "description": "This is an overload of port.statistics.if-group.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "port.statistics.if-group",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ifindex",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "counters",
                  "type": "vtss_port_if_group_counters_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "port.statistics.ethernet-like.get",
      "group-name": "port.statistics.ethernet-like",
      "params": [
        {
          "name": "ifindex",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "counters",
          "type": "vtss_port_ethernet_like_counters_t"
        }
      ]
    },
    {
      "method-name": "port.statistics.ethernet-like.get",
      "description": "This is an overload of port.statistics.ethernet-like.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "port.statistics.ethernet-like",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ifindex",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "counters",
                  "type": "vtss_port_ethernet_like_counters_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "port.statistics.bridge.get",
      "group-name": "port.statistics.bridge",
      "params": [
        {
          "name": "ifindex",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "counters",
          "type": "vtss_port_bridge_counters_t"
        }
      ]
    },
    {
      "method-name": "port.statistics.bridge.get",
      "description": "This is an overload of port.statistics.bridge.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "port.statistics.bridge",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ifindex",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "counters",
                  "type": "vtss_port_bridge_counters_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "port.statistics.queues.get",
      "group-name": "port.statistics.queues",
      "params": [
        {
          "name": "ifindex",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "prio",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "counter",
          "type": "vtss_appl_port_prio_counter_t"
        }
      ]
    },
    {
      "method-name": "port.statistics.queues.get",
      "description": "This is an overload of port.statistics.queues.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "port.statistics.queues",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "ifindex",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "prio",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "counter",
                  "type": "vtss_appl_port_prio_counter_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "port-power-saving.capabilities.interface.get",
      "group-name": "port-power-saving.capabilities.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_port_power_saving_capabilities_t"
        }
      ]
    },
    {
      "method-name": "port-power-saving.capabilities.interface.get",
      "description": "This is an overload of port-power-saving.capabilities.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "port-power-saving.capabilities.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_port_power_saving_capabilities_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "port-power-saving.config.interface.get",
      "group-name": "port-power-saving.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_port_power_saving_conf_t"
        }
      ]
    },
    {
      "method-name": "port-power-saving.config.interface.get",
      "description": "This is an overload of port-power-saving.config.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "port-power-saving.config.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_port_power_saving_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "port-power-saving.config.interface.set",
      "group-name": "port-power-saving.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_port_power_saving_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "port-power-saving.status.interface.get",
      "group-name": "port-power-saving.status.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_port_power_saving_status_t"
        }
      ]
    },
    {
      "method-name": "port-power-saving.status.interface.get",
      "description": "This is an overload of port-power-saving.status.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "port-power-saving.status.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_port_power_saving_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "syslog.config.server.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_syslog_server_conf_t"
        }
      ]
    },
    {
      "method-name": "syslog.config.server.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_syslog_server_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "syslog.status.history.get",
      "group-name": "syslog.status.history",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_syslog_history_t"
        }
      ]
    },
    {
      "method-name": "syslog.status.history.get",
      "description": "This is an overload of syslog.status.history.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "syslog.status.history",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_syslog_history_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "syslog.control.history.get",
      "group-name": "syslog.control.history",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_syslog_lvl_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_syslog_history_control_t"
        }
      ]
    },
    {
      "method-name": "syslog.control.history.get",
      "description": "This is an overload of syslog.control.history.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "syslog.control.history",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "vtss_appl_syslog_lvl_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_syslog_history_control_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "syslog.control.history.set",
      "group-name": "syslog.control.history",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_syslog_lvl_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_syslog_history_control_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "port-security.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_psec_limit_glbl_cfg_t"
        }
      ]
    },
    {
      "method-name": "port-security.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_psec_limit_glbl_cfg_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "port-security.config.interface.get",
      "group-name": "port-security.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_psec_limit_port_cfg_t"
        }
      ]
    },
    {
      "method-name": "port-security.config.interface.get",
      "description": "This is an overload of port-security.config.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "port-security.config.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_psec_limit_port_cfg_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "port-security.config.interface.set",
      "group-name": "port-security.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_psec_limit_port_cfg_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "port-security.status.interface.get",
      "group-name": "port-security.status.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_psec_port_status_t"
        }
      ]
    },
    {
      "method-name": "port-security.status.interface.get",
      "description": "This is an overload of port-security.status.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "port-security.status.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_psec_port_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "port-security.statistics.interface.get",
      "group-name": "port-security.statistics.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "uint16_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_psec_port_statistics_t"
        }
      ]
    },
    {
      "method-name": "port-security.statistics.interface.get",
      "description": "This is an overload of port-security.statistics.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "port-security.statistics.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "uint16_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_psec_port_statistics_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "port-security.control.reopen.set",
      "group-name": "port-security.control.reopen",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_bool_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vlan.config.interface.get",
      "group-name": "vlan.config.interface",
      "params": [
        {
          "name": "ifindex",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "conf",
          "type": "vtss_appl_vlan_port_conf_t"
        }
      ]
    },
    {
      "method-name": "vlan.config.interface.get",
      "description": "This is an overload of vlan.config.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "vlan.config.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ifindex",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "conf",
                  "type": "vtss_appl_vlan_port_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "vlan.config.interface.set",
      "group-name": "vlan.config.interface",
      "params": [
        {
          "name": "ifindex",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_vlan_port_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vlan.config.interface.svl.get",
      "group-name": "vlan.config.interface.svl",
      "web-privilege": {
        "id": "VLANs",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "vid",
          "type": "vtss_vid_t"
        }
      ],
      "result": [
        {
          "name": "fid",
          "type": "uint16_t"
        }
      ]
    },
    {
      "method-name": "vlan.config.interface.svl.get",
      "description": "This is an overload of vlan.config.interface.svl.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "vlan.config.interface.svl",
      "web-privilege": {
        "id": "VLANs",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "vid",
                  "type": "vtss_vid_t"
                },
                {
                  "name": "val",
                  "semantic-name": "fid",
                  "type": "uint16_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "vlan.config.interface.svl.set",
      "group-name": "vlan.config.interface.svl",
      "web-privilege": {
        "id": "VLANs",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "vid",
          "type": "vtss_vid_t"
        },
        {
          "name": "fid",
          "type": "uint16_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vlan.config.interface.svl.add",
      "group-name": "vlan.config.interface.svl",
      "web-privilege": {
        "id": "VLANs",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "vid",
          "type": "vtss_vid_t"
        },
        {
          "name": "fid",
          "type": "uint16_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vlan.config.interface.svl.del",
      "group-name": "vlan.config.interface.svl",
      "web-privilege": {
        "id": "VLANs",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "vid",
          "type": "vtss_vid_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vlan.config.global.main.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_vlan_config_globals_main_t"
        }
      ]
    },
    {
      "method-name": "vlan.config.global.main.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_vlan_config_globals_main_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vlan.config.global.name.get",
      "group-name": "vlan.config.global.name",
      "params": [
        {
          "name": "vid",
          "type": "vtss_vid_t"
        }
      ],
      "result": [
        {
          "name": "name",
          "type": "vtss_appl_vlan_name_t"
        }
      ]
    },
    {
      "method-name": "vlan.config.global.name.get",
      "description": "This is an overload of vlan.config.global.name.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "vlan.config.global.name",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "vid",
                  "type": "vtss_vid_t"
                },
                {
                  "name": "val",
                  "semantic-name": "name",
                  "type": "vtss_appl_vlan_name_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "vlan.config.global.name.set",
      "group-name": "vlan.config.global.name",
      "params": [
        {
          "name": "vid",
          "type": "vtss_vid_t"
        },
        {
          "name": "name",
          "type": "vtss_appl_vlan_name_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vlan.status.interface.get",
      "group-name": "vlan.status.interface",
      "params": [
        {
          "name": "ifindex",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "user",
          "type": "vtss_appl_vlan_user_t"
        }
      ],
      "result": [
        {
          "name": "details",
          "type": "vtss_appl_vlan_port_detailed_conf_t"
        }
      ]
    },
    {
      "method-name": "vlan.status.interface.get",
      "description": "This is an overload of vlan.status.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "vlan.status.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "ifindex",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "user",
                        "type": "vtss_appl_vlan_user_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "details",
                  "type": "vtss_appl_vlan_port_detailed_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "vlan.status.membership.get",
      "group-name": "vlan.status.membership",
      "params": [
        {
          "name": "vid",
          "type": "vtss_vid_t"
        },
        {
          "name": "user",
          "type": "vtss_appl_vlan_user_t"
        }
      ],
      "result": [
        {
          "name": "portlist",
          "type": "vtss_port_list_stackable_t"
        }
      ]
    },
    {
      "method-name": "vlan.status.membership.get",
      "description": "This is an overload of vlan.status.membership.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "vlan.status.membership",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "vid",
                        "type": "vtss_vid_t"
                      },
                      {
                        "name": "user",
                        "type": "vtss_appl_vlan_user_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "portlist",
                  "type": "vtss_port_list_stackable_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "vlan.capabilities.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_vlan_capabilities_t"
        }
      ]
    },
    {
      "method-name": "synce.config.global.clock-selection-mode.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_synce_clock_selection_mode_config_t"
        }
      ]
    },
    {
      "method-name": "synce.config.global.clock-selection-mode.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_synce_clock_selection_mode_config_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "synce.config.global.station-clocks.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_synce_station_clock_config_t"
        }
      ]
    },
    {
      "method-name": "synce.config.global.station-clocks.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_synce_station_clock_config_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "synce.config.sources.clock-source-nomination.get",
      "group-name": "synce.config.sources.clock-source-nomination",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_synce_clock_source_nomination_config_t"
        }
      ]
    },
    {
      "method-name": "synce.config.sources.clock-source-nomination.get",
      "description": "This is an overload of synce.config.sources.clock-source-nomination.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "synce.config.sources.clock-source-nomination",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_synce_clock_source_nomination_config_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "synce.config.sources.clock-source-nomination.set",
      "group-name": "synce.config.sources.clock-source-nomination",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_synce_clock_source_nomination_config_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "synce.config.ports.port-config.get",
      "group-name": "synce.config.ports.port-config",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_synce_port_config_t"
        }
      ]
    },
    {
      "method-name": "synce.config.ports.port-config.get",
      "description": "This is an overload of synce.config.ports.port-config.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "synce.config.ports.port-config",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_synce_port_config_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "synce.config.ports.port-config.set",
      "group-name": "synce.config.ports.port-config",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_synce_port_config_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "synce.status.global.clock-selection-mode.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_synce_clock_selection_mode_status_t"
        }
      ]
    },
    {
      "method-name": "synce.status.sources.clock-source-nomination.get",
      "group-name": "synce.status.sources.clock-source-nomination",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_synce_clock_source_nomination_status_t"
        }
      ]
    },
    {
      "method-name": "synce.status.sources.clock-source-nomination.get",
      "description": "This is an overload of synce.status.sources.clock-source-nomination.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "synce.status.sources.clock-source-nomination",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_synce_clock_source_nomination_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "synce.status.ports.port-status.get",
      "group-name": "synce.status.ports.port-status",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_synce_port_status_t"
        }
      ]
    },
    {
      "method-name": "synce.status.ports.port-status.get",
      "description": "This is an overload of synce.status.ports.port-status.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "synce.status.ports.port-status",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_synce_port_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "synce.control.sources.clock-source.get",
      "group-name": "synce.control.sources.clock-source",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_synce_clock_source_control_t"
        }
      ]
    },
    {
      "method-name": "synce.control.sources.clock-source.get",
      "description": "This is an overload of synce.control.sources.clock-source.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "synce.control.sources.clock-source",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_synce_clock_source_control_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "synce.control.sources.clock-source.set",
      "group-name": "synce.control.sources.clock-source",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_synce_clock_source_control_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "synce.capabilities.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_synce_capabilities_t"
        }
      ]
    },
    {
      "method-name": "hqos.config.interface.hqos.get",
      "group-name": "hqos.config.interface.hqos",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_hqos_conf_t"
        }
      ]
    },
    {
      "method-name": "hqos.config.interface.hqos.get",
      "description": "This is an overload of hqos.config.interface.hqos.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "hqos.config.interface.hqos",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_hqos_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "hqos.config.interface.hqos.set",
      "group-name": "hqos.config.interface.hqos",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_hqos_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "hqos.config.interface.hqos.add",
      "group-name": "hqos.config.interface.hqos",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_hqos_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "hqos.config.interface.hqos.del",
      "group-name": "hqos.config.interface.hqos",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "hqos.config.interface.hqos.queue.get",
      "group-name": "hqos.config.interface.hqos.queue",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument4",
          "type": "vtss_appl_hqos_queue_conf_t"
        }
      ]
    },
    {
      "method-name": "hqos.config.interface.hqos.queue.get",
      "description": "This is an overload of hqos.config.interface.hqos.queue.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "hqos.config.interface.hqos.queue",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument3",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument4",
                  "type": "vtss_appl_hqos_queue_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "hqos.config.interface.hqos.queue.set",
      "group-name": "hqos.config.interface.hqos.queue",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "int32_t"
        },
        {
          "name": "Argument4",
          "type": "vtss_appl_hqos_queue_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "hqos.config.interface.get",
      "group-name": "hqos.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_hqos_port_conf_t"
        }
      ]
    },
    {
      "method-name": "hqos.config.interface.get",
      "description": "This is an overload of hqos.config.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "hqos.config.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_hqos_port_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "hqos.config.interface.set",
      "group-name": "hqos.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_hqos_port_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "evc.config.interface.get",
      "group-name": "evc.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_evc_port_conf_t"
        }
      ]
    },
    {
      "method-name": "evc.config.interface.get",
      "description": "This is an overload of evc.config.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "evc.config.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_evc_port_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "evc.config.interface.set",
      "group-name": "evc.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_evc_port_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "evc.config.interface.l2cp.get",
      "group-name": "evc.config.interface.l2cp",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_evc_port_l2cp_conf_t"
        }
      ]
    },
    {
      "method-name": "evc.config.interface.l2cp.get",
      "description": "This is an overload of evc.config.interface.l2cp.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "evc.config.interface.l2cp",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_evc_port_l2cp_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "evc.config.interface.l2cp.set",
      "group-name": "evc.config.interface.l2cp",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_evc_port_l2cp_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "evc.config.evc.get",
      "group-name": "evc.config.evc",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_evc_conf_t"
        }
      ]
    },
    {
      "method-name": "evc.config.evc.get",
      "description": "This is an overload of evc.config.evc.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "evc.config.evc",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_evc_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "evc.config.evc.set",
      "group-name": "evc.config.evc",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_evc_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "evc.config.evc.add",
      "group-name": "evc.config.evc",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_evc_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "evc.config.evc.del",
      "group-name": "evc.config.evc",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "evc.config.evc.interface.get",
      "group-name": "evc.config.evc.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_evc_port_evc_conf_t"
        }
      ]
    },
    {
      "method-name": "evc.config.evc.interface.get",
      "description": "This is an overload of evc.config.evc.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "evc.config.evc.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "vtss_ifindex_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_evc_port_evc_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "evc.config.evc.interface.set",
      "group-name": "evc.config.evc.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_evc_port_evc_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "evc.config.ece.get",
      "group-name": "evc.config.ece",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_evc_ece_conf_t"
        }
      ]
    },
    {
      "method-name": "evc.config.ece.get",
      "description": "This is an overload of evc.config.ece.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "evc.config.ece",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_evc_ece_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "evc.config.ece.set",
      "group-name": "evc.config.ece",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_evc_ece_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "evc.config.ece.add",
      "group-name": "evc.config.ece",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_evc_ece_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "evc.config.ece.del",
      "group-name": "evc.config.ece",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "evc.config.policer.get",
      "group-name": "evc.config.policer",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_evc_policer_conf_t"
        }
      ]
    },
    {
      "method-name": "evc.config.policer.get",
      "description": "This is an overload of evc.config.policer.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "evc.config.policer",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_evc_policer_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "evc.config.policer.set",
      "group-name": "evc.config.policer",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_evc_policer_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "evc.status.evc.get",
      "group-name": "evc.status.evc",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_bool_t"
        }
      ]
    },
    {
      "method-name": "evc.status.evc.get",
      "description": "This is an overload of evc.status.evc.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "evc.status.evc",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_bool_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "evc.status.ece.get",
      "group-name": "evc.status.ece",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_bool_t"
        }
      ]
    },
    {
      "method-name": "evc.status.ece.get",
      "description": "This is an overload of evc.status.ece.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "evc.status.ece",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_bool_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "evc.statistics.evc.interface.get",
      "group-name": "evc.statistics.evc.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_evc_counters_t"
        }
      ]
    },
    {
      "method-name": "evc.statistics.evc.interface.get",
      "description": "This is an overload of evc.statistics.evc.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "evc.statistics.evc.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "vtss_ifindex_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_evc_counters_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "evc.statistics.ece.interface.get",
      "group-name": "evc.statistics.ece.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_evc_counters_t"
        }
      ]
    },
    {
      "method-name": "evc.statistics.ece.interface.get",
      "description": "This is an overload of evc.statistics.ece.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "evc.statistics.ece.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "vtss_ifindex_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_evc_counters_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "evc.control.evc.interface.get",
      "group-name": "evc.control.evc.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_evc_control_t"
        }
      ]
    },
    {
      "method-name": "evc.control.evc.interface.get",
      "description": "This is an overload of evc.control.evc.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "evc.control.evc.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "vtss_ifindex_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_evc_control_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "evc.control.evc.interface.set",
      "group-name": "evc.control.evc.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_evc_control_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "evc.control.ece.interface.get",
      "group-name": "evc.control.ece.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_evc_control_t"
        }
      ]
    },
    {
      "method-name": "evc.control.ece.interface.get",
      "description": "This is an overload of evc.control.ece.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "evc.control.ece.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "vtss_ifindex_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_evc_control_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "evc.control.ece.interface.set",
      "group-name": "evc.control.ece.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_evc_control_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "evc.capabilities.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_evc_capabilities_t"
        }
      ]
    },
    {
      "method-name": "access-management.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_access_mgmt_conf_t"
        }
      ]
    },
    {
      "method-name": "access-management.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_access_mgmt_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "access-management.config.ipv4.get",
      "group-name": "access-management.config.ipv4",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_access_mgmt_ipv4_t"
        }
      ]
    },
    {
      "method-name": "access-management.config.ipv4.get",
      "description": "This is an overload of access-management.config.ipv4.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "access-management.config.ipv4",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_access_mgmt_ipv4_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "access-management.config.ipv4.set",
      "group-name": "access-management.config.ipv4",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_access_mgmt_ipv4_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "access-management.config.ipv4.add",
      "group-name": "access-management.config.ipv4",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_access_mgmt_ipv4_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "access-management.config.ipv4.del",
      "group-name": "access-management.config.ipv4",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "access-management.config.ipv6.get",
      "group-name": "access-management.config.ipv6",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_access_mgmt_ipv6_t"
        }
      ]
    },
    {
      "method-name": "access-management.config.ipv6.get",
      "description": "This is an overload of access-management.config.ipv6.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "access-management.config.ipv6",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_access_mgmt_ipv6_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "access-management.config.ipv6.set",
      "group-name": "access-management.config.ipv6",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_access_mgmt_ipv6_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "access-management.config.ipv6.add",
      "group-name": "access-management.config.ipv6",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_access_mgmt_ipv6_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "access-management.config.ipv6.del",
      "group-name": "access-management.config.ipv6",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "access-management.control.statistics.clear.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_bool_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "access-management.statistics.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_access_mgmt_statistics_t"
        }
      ]
    },
    {
      "method-name": "system-utility.status.cpu-load.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_sysutil_status_cpu_load_t"
        }
      ]
    },
    {
      "method-name": "system-utility.status.power-supply.get",
      "group-name": "system-utility.status.power-supply",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_sysutil_psu_status_t"
        }
      ]
    },
    {
      "method-name": "system-utility.status.power-supply.get",
      "description": "This is an overload of system-utility.status.power-supply.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "system-utility.status.power-supply",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_sysutil_psu_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "system-utility.status.system-led.get",
      "group-name": "system-utility.status.system-led",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_sysutil_system_led_status_t"
        }
      ]
    },
    {
      "method-name": "system-utility.status.system-led.get",
      "description": "This is an overload of system-utility.status.system-led.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "system-utility.status.system-led",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_sysutil_system_led_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "system-utility.control.reboot.set",
      "group-name": "system-utility.control.reboot",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_sysutil_control_reboot_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "system-utility.control.system-led.set",
      "group-name": "system-utility.control.system-led",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_sysutil_control_system_led_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "system-utility.capabilities.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_sysutil_capabilities_t"
        }
      ]
    },
    {
      "method-name": "ip.config.global.main.get",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "conf",
          "type": "vtss_appl_ip_global_param_t"
        }
      ]
    },
    {
      "method-name": "ip.config.global.main.set",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "conf",
          "type": "vtss_appl_ip_global_param_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip.config.interface.get",
      "group-name": "ip.config.interface",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "ifidx",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip.config.interface.get",
      "description": "This is an overload of ip.config.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ip.config.interface",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ifidx",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "type": null
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ip.config.interface.set",
      "group-name": "ip.config.interface",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "ifidx",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip.config.interface.add",
      "group-name": "ip.config.interface",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "ifidx",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip.config.interface.del",
      "group-name": "ip.config.interface",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "ifidx",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip.config.interface.ipv4.get",
      "group-name": "ip.config.interface.ipv4",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "ifidx",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "conf",
          "type": "vtss_appl_ip_ipv4_conf_t"
        }
      ]
    },
    {
      "method-name": "ip.config.interface.ipv4.get",
      "description": "This is an overload of ip.config.interface.ipv4.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ip.config.interface.ipv4",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ifidx",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "conf",
                  "type": "vtss_appl_ip_ipv4_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ip.config.interface.ipv4.set",
      "group-name": "ip.config.interface.ipv4",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "ifidx",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_ip_ipv4_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip.config.interface.ipv6.get",
      "group-name": "ip.config.interface.ipv6",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "ifidx",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "conf",
          "type": "vtss_appl_ip_ipv6_conf_t"
        }
      ]
    },
    {
      "method-name": "ip.config.interface.ipv6.get",
      "description": "This is an overload of ip.config.interface.ipv6.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ip.config.interface.ipv6",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ifidx",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "conf",
                  "type": "vtss_appl_ip_ipv6_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ip.config.interface.ipv6.set",
      "group-name": "ip.config.interface.ipv6",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "ifidx",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_ip_ipv6_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip.config.route.ipv4.get",
      "group-name": "ip.config.route.ipv4",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "route",
          "type": "vtss_ipv4_uc_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip.config.route.ipv4.get",
      "description": "This is an overload of ip.config.route.ipv4.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ip.config.route.ipv4",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "route",
                  "type": "vtss_ipv4_uc_t"
                },
                {
                  "name": "val",
                  "type": null
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ip.config.route.ipv4.set",
      "group-name": "ip.config.route.ipv4",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "route",
          "type": "vtss_ipv4_uc_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip.config.route.ipv4.add",
      "group-name": "ip.config.route.ipv4",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "route",
          "type": "vtss_ipv4_uc_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip.config.route.ipv4.del",
      "group-name": "ip.config.route.ipv4",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "route",
          "type": "vtss_ipv4_uc_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip.config.route.ipv6.get",
      "group-name": "ip.config.route.ipv6",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "conf",
          "type": "vtss_appl_ip_ipv6_route_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip.config.route.ipv6.get",
      "description": "This is an overload of ip.config.route.ipv6.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ip.config.route.ipv6",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "conf",
                  "type": "vtss_appl_ip_ipv6_route_conf_t"
                },
                {
                  "name": "val",
                  "type": null
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ip.config.route.ipv6.set",
      "group-name": "ip.config.route.ipv6",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "conf",
          "type": "vtss_appl_ip_ipv6_route_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip.config.route.ipv6.add",
      "group-name": "ip.config.route.ipv6",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "conf",
          "type": "vtss_appl_ip_ipv6_route_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip.config.route.ipv6.del",
      "group-name": "ip.config.route.ipv6",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "conf",
          "type": "vtss_appl_ip_ipv6_route_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip.status.neighbour.ipv4.get",
      "group-name": "ip.status.neighbour.ipv4",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "ip",
          "type": "vtss_ipv4_t"
        }
      ],
      "result": [
        {
          "name": "nb",
          "type": "vtss_appl_ip_ipv4_neighbour_status_t"
        }
      ]
    },
    {
      "method-name": "ip.status.neighbour.ipv4.get",
      "description": "This is an overload of ip.status.neighbour.ipv4.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ip.status.neighbour.ipv4",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ip",
                  "type": "vtss_ipv4_t"
                },
                {
                  "name": "val",
                  "semantic-name": "nb",
                  "type": "vtss_appl_ip_ipv4_neighbour_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ip.status.neighbour.ipv6.get",
      "group-name": "ip.status.neighbour.ipv6",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "nb_key",
          "type": "vtss_appl_ip_ipv6_neighbour_status_key_t"
        }
      ],
      "result": [
        {
          "name": "nb_val",
          "type": "vtss_appl_ip_ipv6_neighbour_status_value_t"
        }
      ]
    },
    {
      "method-name": "ip.status.neighbour.ipv6.get",
      "description": "This is an overload of ip.status.neighbour.ipv6.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ip.status.neighbour.ipv6",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "nb_key",
                  "type": "vtss_appl_ip_ipv6_neighbour_status_key_t"
                },
                {
                  "name": "val",
                  "semantic-name": "nb_val",
                  "type": "vtss_appl_ip_ipv6_neighbour_status_value_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ip.status.interface.link.get",
      "group-name": "ip.status.interface.link",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "ifidx",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "status",
          "type": "vtss_appl_ip_if_status_link_t"
        }
      ]
    },
    {
      "method-name": "ip.status.interface.link.get",
      "description": "This is an overload of ip.status.interface.link.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ip.status.interface.link",
      "notification": "ip.status.interface.link.update",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ifidx",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "status",
                  "type": "vtss_appl_ip_if_status_link_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ip.status.interface.ipv4.get",
      "group-name": "ip.status.interface.ipv4",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "ifindex",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "network",
          "type": "vtss_ipv4_network_t"
        }
      ],
      "result": [
        {
          "name": "status",
          "type": "vtss_appl_ip_if_ipv4_info_t"
        }
      ]
    },
    {
      "method-name": "ip.status.interface.ipv4.get",
      "description": "This is an overload of ip.status.interface.ipv4.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ip.status.interface.ipv4",
      "notification": "ip.status.interface.ipv4.update",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "ifindex",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "network",
                        "type": "vtss_ipv4_network_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "status",
                  "type": "vtss_appl_ip_if_ipv4_info_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ip.status.interface.dhcp-client.get",
      "group-name": "ip.status.interface.dhcp-client",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "ifidx",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "status",
          "type": "vtss_appl_ip_if_status_dhcp4c_t"
        }
      ]
    },
    {
      "method-name": "ip.status.interface.dhcp-client.get",
      "description": "This is an overload of ip.status.interface.dhcp-client.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ip.status.interface.dhcp-client",
      "notification": "ip.status.interface.dhcp-client.update",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ifidx",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "status",
                  "type": "vtss_appl_ip_if_status_dhcp4c_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ip.status.interface.ipv6.get",
      "group-name": "ip.status.interface.ipv6",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "ifindex",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "addr",
          "type": "vtss_ipv6_network_t"
        }
      ],
      "result": [
        {
          "name": "status",
          "type": "vtss_appl_ip_if_ipv6_info_t"
        }
      ]
    },
    {
      "method-name": "ip.status.interface.ipv6.get",
      "description": "This is an overload of ip.status.interface.ipv6.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ip.status.interface.ipv6",
      "notification": "ip.status.interface.ipv6.update",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "ifindex",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "addr",
                        "type": "vtss_ipv6_network_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "status",
                  "type": "vtss_appl_ip_if_ipv6_info_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ip.status.route.ipv4.get",
      "group-name": "ip.status.route.ipv4",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "ipv4uc",
          "type": "vtss_ipv4_uc_t"
        }
      ],
      "result": [
        {
          "name": "status",
          "type": "vtss_appl_ip_route_status_t"
        }
      ]
    },
    {
      "method-name": "ip.status.route.ipv4.get",
      "description": "This is an overload of ip.status.route.ipv4.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ip.status.route.ipv4",
      "notification": "ip.status.route.ipv4.update",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ipv4uc",
                  "type": "vtss_ipv4_uc_t"
                },
                {
                  "name": "val",
                  "semantic-name": "status",
                  "type": "vtss_appl_ip_route_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ip.status.route.ipv6.get",
      "group-name": "ip.status.route.ipv6",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "key",
          "type": "vtss_appl_ip_ipv6_route_conf_t"
        }
      ],
      "result": [
        {
          "name": "val",
          "type": "vtss_appl_ip_route_status_t"
        }
      ]
    },
    {
      "method-name": "ip.status.route.ipv6.get",
      "description": "This is an overload of ip.status.route.ipv6.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ip.status.route.ipv6",
      "notification": "ip.status.route.ipv6.update",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "key",
                  "type": "vtss_appl_ip_ipv6_route_conf_t"
                },
                {
                  "name": "val",
                  "semantic-name": "val",
                  "type": "vtss_appl_ip_route_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ip.control.interface.dhcp-client.get",
      "group-name": "ip.control.interface.dhcp-client",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "ifidx",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "action",
          "type": "vtss_bool_t"
        }
      ]
    },
    {
      "method-name": "ip.control.interface.dhcp-client.get",
      "description": "This is an overload of ip.control.interface.dhcp-client.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ip.control.interface.dhcp-client",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ifidx",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "action",
                  "type": "vtss_bool_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ip.control.interface.dhcp-client.set",
      "group-name": "ip.control.interface.dhcp-client",
      "web-privilege": {
        "id": "IP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "ifidx",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "action",
          "type": "vtss_bool_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip.control.global.get",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "a",
          "type": "vtss_appl_ip_global_actions_t"
        }
      ]
    },
    {
      "method-name": "ip.control.global.set",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RW"
      },
      "params": [
        {
          "name": "a",
          "type": "vtss_appl_ip_global_actions_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip.statistics.global.ipv4.get",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "stats",
          "type": "vtss_appl_ip_if_status_ip_stat_t"
        }
      ]
    },
    {
      "method-name": "ip.statistics.global.ipv6.get",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "stats",
          "type": "vtss_appl_ip_if_status_ip_stat_t"
        }
      ]
    },
    {
      "method-name": "ip.statistics.interface.link.get",
      "group-name": "ip.statistics.interface.link",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "ifidx",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "stats",
          "type": "vtss_appl_ip_if_status_link_stat_t"
        }
      ]
    },
    {
      "method-name": "ip.statistics.interface.link.get",
      "description": "This is an overload of ip.statistics.interface.link.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ip.statistics.interface.link",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ifidx",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "stats",
                  "type": "vtss_appl_ip_if_status_link_stat_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ip.statistics.interface.ipv4.get",
      "group-name": "ip.statistics.interface.ipv4",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "ifidx",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "stats",
          "type": "vtss_appl_ip_if_status_ip_stat_t"
        }
      ]
    },
    {
      "method-name": "ip.statistics.interface.ipv4.get",
      "description": "This is an overload of ip.statistics.interface.ipv4.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ip.statistics.interface.ipv4",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ifidx",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "stats",
                  "type": "vtss_appl_ip_if_status_ip_stat_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ip.statistics.interface.ipv6.get",
      "group-name": "ip.statistics.interface.ipv6",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "ifidx",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "stat",
          "type": "vtss_appl_ip_if_status_ip_stat_t"
        }
      ]
    },
    {
      "method-name": "ip.statistics.interface.ipv6.get",
      "description": "This is an overload of ip.statistics.interface.ipv6.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ip.statistics.interface.ipv6",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ifidx",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "stat",
                  "type": "vtss_appl_ip_if_status_ip_stat_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ip.capabilities.get",
      "web-privilege": {
        "id": "IP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "capabilities",
          "type": "vtss_appl_ip_capabilities_t"
        }
      ]
    },
    {
      "method-name": "dhcpv6-client.capabilities.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_dhcp6c_capabilities_t"
        }
      ]
    },
    {
      "method-name": "dhcpv6-client.config.interface.get",
      "group-name": "dhcpv6-client.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_dhcp6c_intf_conf_t"
        }
      ]
    },
    {
      "method-name": "dhcpv6-client.config.interface.get",
      "description": "This is an overload of dhcpv6-client.config.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "dhcpv6-client.config.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_dhcp6c_intf_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "dhcpv6-client.config.interface.set",
      "group-name": "dhcpv6-client.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_dhcp6c_intf_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dhcpv6-client.config.interface.add",
      "group-name": "dhcpv6-client.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_dhcp6c_intf_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dhcpv6-client.config.interface.del",
      "group-name": "dhcpv6-client.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dhcpv6-client.status.interface.get",
      "group-name": "dhcpv6-client.status.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_dhcp6c_interface_t"
        }
      ]
    },
    {
      "method-name": "dhcpv6-client.status.interface.get",
      "description": "This is an overload of dhcpv6-client.status.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "dhcpv6-client.status.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_dhcp6c_interface_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "dhcpv6-client.statistics.interface.get",
      "group-name": "dhcpv6-client.statistics.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_dhcp6c_intf_cntr_t"
        }
      ]
    },
    {
      "method-name": "dhcpv6-client.statistics.interface.get",
      "description": "This is an overload of dhcpv6-client.statistics.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "dhcpv6-client.statistics.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_dhcp6c_intf_cntr_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "dhcpv6-client.control.restart.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "acl.config.ace.config.get",
      "group-name": "acl.config.ace.config",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_acl_config_ace_t"
        }
      ]
    },
    {
      "method-name": "acl.config.ace.config.get",
      "description": "This is an overload of acl.config.ace.config.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "acl.config.ace.config",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_acl_config_ace_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "acl.config.ace.config.set",
      "group-name": "acl.config.ace.config",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_acl_config_ace_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "acl.config.ace.config.add",
      "group-name": "acl.config.ace.config",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_acl_config_ace_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "acl.config.ace.config.del",
      "group-name": "acl.config.ace.config",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "acl.config.ace.precedence.get",
      "group-name": "acl.config.ace.precedence",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "uint32_t"
        }
      ]
    },
    {
      "method-name": "acl.config.ace.precedence.get",
      "description": "This is an overload of acl.config.ace.precedence.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "acl.config.ace.precedence",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "uint32_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "acl.config.ratelimiter.get",
      "group-name": "acl.config.ratelimiter",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_acl_config_rate_limiter_t"
        }
      ]
    },
    {
      "method-name": "acl.config.ratelimiter.get",
      "description": "This is an overload of acl.config.ratelimiter.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "acl.config.ratelimiter",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_acl_config_rate_limiter_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "acl.config.ratelimiter.set",
      "group-name": "acl.config.ratelimiter",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_acl_config_rate_limiter_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "acl.config.interface.get",
      "group-name": "acl.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_acl_config_interface_t"
        }
      ]
    },
    {
      "method-name": "acl.config.interface.get",
      "description": "This is an overload of acl.config.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "acl.config.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_acl_config_interface_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "acl.config.interface.set",
      "group-name": "acl.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_acl_config_interface_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "acl.status.ace.status.get",
      "group-name": "acl.status.ace.status",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_acl_status_ace_t"
        }
      ]
    },
    {
      "method-name": "acl.status.ace.status.get",
      "description": "This is an overload of acl.status.ace.status.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "acl.status.ace.status",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_acl_status_ace_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "acl.status.ace.hit-count.get",
      "group-name": "acl.status.ace.hit-count",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_acl_status_ace_hit_count_t"
        }
      ]
    },
    {
      "method-name": "acl.status.ace.hit-count.get",
      "description": "This is an overload of acl.status.ace.hit-count.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "acl.status.ace.hit-count",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_acl_status_ace_hit_count_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "acl.status.ace.crossed-threshold.get",
      "group-name": "acl.status.ace.crossed-threshold",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_acl_status_ace_t"
        }
      ]
    },
    {
      "method-name": "acl.status.ace.crossed-threshold.get",
      "description": "This is an overload of acl.status.ace.crossed-threshold.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "acl.status.ace.crossed-threshold",
      "notification": "acl.status.ace.crossed-threshold.update",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_acl_status_ace_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "acl.status.interface.hit-count.get",
      "group-name": "acl.status.interface.hit-count",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_acl_status_interface_hit_count_t"
        }
      ]
    },
    {
      "method-name": "acl.status.interface.hit-count.get",
      "description": "This is an overload of acl.status.interface.hit-count.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "acl.status.interface.hit-count",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_acl_status_interface_hit_count_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "acl.control.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_acl_control_globals_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "acl.control.interface.get",
      "group-name": "acl.control.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_acl_control_interface_t"
        }
      ]
    },
    {
      "method-name": "acl.control.interface.get",
      "description": "This is an overload of acl.control.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "acl.control.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_acl_control_interface_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "acl.control.interface.set",
      "group-name": "acl.control.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_acl_control_interface_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "acl.capabilities.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_acl_capabilities_t"
        }
      ]
    },
    {
      "method-name": "mirror.config.session.get",
      "group-name": "mirror.config.session",
      "params": [
        {
          "name": "session-id",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "session-config",
          "type": "vtss_appl_mirror_config_session_entry_t"
        }
      ]
    },
    {
      "method-name": "mirror.config.session.get",
      "description": "This is an overload of mirror.config.session.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mirror.config.session",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "session-id",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "session-config",
                  "type": "vtss_appl_mirror_config_session_entry_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mirror.config.session.set",
      "group-name": "mirror.config.session",
      "params": [
        {
          "name": "session-id",
          "type": "int32_t"
        },
        {
          "name": "session-config",
          "type": "vtss_appl_mirror_config_session_entry_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mirror.capabilities.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_mirror_capabilities_t"
        }
      ]
    },
    {
      "method-name": "mac.config.fdb.static.get",
      "group-name": "mac.config.fdb.static",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_vid_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_mac_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_mac_stack_addr_entry_conf_t"
        }
      ]
    },
    {
      "method-name": "mac.config.fdb.static.get",
      "description": "This is an overload of mac.config.fdb.static.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mac.config.fdb.static",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_vid_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "vtss_mac_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_mac_stack_addr_entry_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mac.config.fdb.static.set",
      "group-name": "mac.config.fdb.static",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_vid_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_mac_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_mac_stack_addr_entry_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mac.config.fdb.static.add",
      "group-name": "mac.config.fdb.static",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_vid_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_mac_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_mac_stack_addr_entry_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mac.config.fdb.static.del",
      "group-name": "mac.config.fdb.static",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_vid_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_mac_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mac.config.interface.learn.get",
      "group-name": "mac.config.interface.learn",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mac_learn_mode_t"
        }
      ]
    },
    {
      "method-name": "mac.config.interface.learn.get",
      "description": "This is an overload of mac.config.interface.learn.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mac.config.interface.learn",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mac_learn_mode_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mac.config.interface.learn.set",
      "group-name": "mac.config.interface.learn",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mac_learn_mode_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mac.config.vlan.learn.get",
      "group-name": "mac.config.vlan.learn",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_vid_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mac_vid_learn_mode_t"
        }
      ]
    },
    {
      "method-name": "mac.config.vlan.learn.get",
      "description": "This is an overload of mac.config.vlan.learn.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mac.config.vlan.learn",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_vid_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mac_vid_learn_mode_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mac.config.vlan.learn.set",
      "group-name": "mac.config.vlan.learn",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_vid_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mac_vid_learn_mode_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mac.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_mac_age_conf_t"
        }
      ]
    },
    {
      "method-name": "mac.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_mac_age_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mac.status.fdb.full.get",
      "group-name": "mac.status.fdb.full",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_vid_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_mac_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_mac_stack_addr_entry_t"
        }
      ]
    },
    {
      "method-name": "mac.status.fdb.full.get",
      "description": "This is an overload of mac.status.fdb.full.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mac.status.fdb.full",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_vid_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "vtss_mac_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_mac_stack_addr_entry_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mac.status.fdb.static.get",
      "group-name": "mac.status.fdb.static",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_vid_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_mac_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_mac_stack_addr_entry_t"
        }
      ]
    },
    {
      "method-name": "mac.status.fdb.static.get",
      "description": "This is an overload of mac.status.fdb.static.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mac.status.fdb.static",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_vid_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "vtss_mac_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_mac_stack_addr_entry_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mac.statistics.interface.get",
      "group-name": "mac.statistics.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mac_port_stats_t"
        }
      ]
    },
    {
      "method-name": "mac.statistics.interface.get",
      "description": "This is an overload of mac.statistics.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mac.statistics.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mac_port_stats_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mac.statistics.fdb.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_mac_table_stats_t"
        }
      ]
    },
    {
      "method-name": "mac.capabilities.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_mac_capabilities_t"
        }
      ]
    },
    {
      "method-name": "mac.control.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_mac_flush_t"
        }
      ]
    },
    {
      "method-name": "mac.control.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_mac_flush_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.config.global.storm-policer.unicast.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_qos_global_storm_policer_t"
        }
      ]
    },
    {
      "method-name": "qos.config.global.storm-policer.unicast.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_qos_global_storm_policer_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.config.global.storm-policer.multicast.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_qos_global_storm_policer_t"
        }
      ]
    },
    {
      "method-name": "qos.config.global.storm-policer.multicast.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_qos_global_storm_policer_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.config.global.storm-policer.broadcast.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_qos_global_storm_policer_t"
        }
      ]
    },
    {
      "method-name": "qos.config.global.storm-policer.broadcast.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_qos_global_storm_policer_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.config.global.wred.get",
      "group-name": "qos.config.global.wred",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument4",
          "type": "vtss_appl_qos_wred_t"
        }
      ]
    },
    {
      "method-name": "qos.config.global.wred.get",
      "description": "This is an overload of qos.config.global.wred.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "qos.config.global.wred",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument3",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument4",
                  "type": "vtss_appl_qos_wred_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "qos.config.global.wred.set",
      "group-name": "qos.config.global.wred",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "int32_t"
        },
        {
          "name": "Argument4",
          "type": "vtss_appl_qos_wred_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.config.global.dscp.get",
      "group-name": "qos.config.global.dscp",
      "params": [
        {
          "name": "Argument1",
          "type": "uint8_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_qos_dscp_entry_t"
        }
      ]
    },
    {
      "method-name": "qos.config.global.dscp.get",
      "description": "This is an overload of qos.config.global.dscp.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "qos.config.global.dscp",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "uint8_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_qos_dscp_entry_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "qos.config.global.dscp.set",
      "group-name": "qos.config.global.dscp",
      "params": [
        {
          "name": "Argument1",
          "type": "uint8_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_qos_dscp_entry_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.config.global.cos-to-dscp.get",
      "group-name": "qos.config.global.cos-to-dscp",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_qos_cos_dscp_entry_t"
        }
      ]
    },
    {
      "method-name": "qos.config.global.cos-to-dscp.get",
      "description": "This is an overload of qos.config.global.cos-to-dscp.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "qos.config.global.cos-to-dscp",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_qos_cos_dscp_entry_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "qos.config.global.cos-to-dscp.set",
      "group-name": "qos.config.global.cos-to-dscp",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_qos_cos_dscp_entry_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.config.interface.storm-policer.unicast.get",
      "group-name": "qos.config.interface.storm-policer.unicast",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_qos_port_storm_policer_t"
        }
      ]
    },
    {
      "method-name": "qos.config.interface.storm-policer.unicast.get",
      "description": "This is an overload of qos.config.interface.storm-policer.unicast.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "qos.config.interface.storm-policer.unicast",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_qos_port_storm_policer_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "qos.config.interface.storm-policer.unicast.set",
      "group-name": "qos.config.interface.storm-policer.unicast",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_qos_port_storm_policer_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.config.interface.storm-policer.broadcast.get",
      "group-name": "qos.config.interface.storm-policer.broadcast",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_qos_port_storm_policer_t"
        }
      ]
    },
    {
      "method-name": "qos.config.interface.storm-policer.broadcast.get",
      "description": "This is an overload of qos.config.interface.storm-policer.broadcast.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "qos.config.interface.storm-policer.broadcast",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_qos_port_storm_policer_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "qos.config.interface.storm-policer.broadcast.set",
      "group-name": "qos.config.interface.storm-policer.broadcast",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_qos_port_storm_policer_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.config.interface.storm-policer.unknown.get",
      "group-name": "qos.config.interface.storm-policer.unknown",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_qos_port_storm_policer_t"
        }
      ]
    },
    {
      "method-name": "qos.config.interface.storm-policer.unknown.get",
      "description": "This is an overload of qos.config.interface.storm-policer.unknown.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "qos.config.interface.storm-policer.unknown",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_qos_port_storm_policer_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "qos.config.interface.storm-policer.unknown.set",
      "group-name": "qos.config.interface.storm-policer.unknown",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_qos_port_storm_policer_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.config.interface.get",
      "group-name": "qos.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_qos_if_conf_t"
        }
      ]
    },
    {
      "method-name": "qos.config.interface.get",
      "description": "This is an overload of qos.config.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "qos.config.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_qos_if_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "qos.config.interface.set",
      "group-name": "qos.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_qos_if_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.config.interface.tag-to-cos.get",
      "group-name": "qos.config.interface.tag-to-cos",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument4",
          "type": "vtss_appl_qos_tag_cos_entry_t"
        }
      ]
    },
    {
      "method-name": "qos.config.interface.tag-to-cos.get",
      "description": "This is an overload of qos.config.interface.tag-to-cos.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "qos.config.interface.tag-to-cos",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument3",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument4",
                  "type": "vtss_appl_qos_tag_cos_entry_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "qos.config.interface.tag-to-cos.set",
      "group-name": "qos.config.interface.tag-to-cos",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "int32_t"
        },
        {
          "name": "Argument4",
          "type": "vtss_appl_qos_tag_cos_entry_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.config.interface.cos-to-tag.get",
      "group-name": "qos.config.interface.cos-to-tag",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument4",
          "type": "vtss_appl_qos_cos_tag_entry_t"
        }
      ]
    },
    {
      "method-name": "qos.config.interface.cos-to-tag.get",
      "description": "This is an overload of qos.config.interface.cos-to-tag.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "qos.config.interface.cos-to-tag",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument3",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument4",
                  "type": "vtss_appl_qos_cos_tag_entry_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "qos.config.interface.cos-to-tag.set",
      "group-name": "qos.config.interface.cos-to-tag",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "int32_t"
        },
        {
          "name": "Argument4",
          "type": "vtss_appl_qos_cos_tag_entry_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.config.interface.policer.get",
      "group-name": "qos.config.interface.policer",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_qos_port_policer_t"
        }
      ]
    },
    {
      "method-name": "qos.config.interface.policer.get",
      "description": "This is an overload of qos.config.interface.policer.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "qos.config.interface.policer",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_qos_port_policer_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "qos.config.interface.policer.set",
      "group-name": "qos.config.interface.policer",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_qos_port_policer_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.config.interface.queue-policer.get",
      "group-name": "qos.config.interface.queue-policer",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_qos_queue_policer_t"
        }
      ]
    },
    {
      "method-name": "qos.config.interface.queue-policer.get",
      "description": "This is an overload of qos.config.interface.queue-policer.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "qos.config.interface.queue-policer",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_qos_queue_policer_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "qos.config.interface.queue-policer.set",
      "group-name": "qos.config.interface.queue-policer",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_qos_queue_policer_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.config.interface.shaper.get",
      "group-name": "qos.config.interface.shaper",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_qos_port_shaper_t"
        }
      ]
    },
    {
      "method-name": "qos.config.interface.shaper.get",
      "description": "This is an overload of qos.config.interface.shaper.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "qos.config.interface.shaper",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_qos_port_shaper_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "qos.config.interface.shaper.set",
      "group-name": "qos.config.interface.shaper",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_qos_port_shaper_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.config.interface.queue-shaper.get",
      "group-name": "qos.config.interface.queue-shaper",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_qos_queue_shaper_t"
        }
      ]
    },
    {
      "method-name": "qos.config.interface.queue-shaper.get",
      "description": "This is an overload of qos.config.interface.queue-shaper.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "qos.config.interface.queue-shaper",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_qos_queue_shaper_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "qos.config.interface.queue-shaper.set",
      "group-name": "qos.config.interface.queue-shaper",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_qos_queue_shaper_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.config.interface.scheduler.get",
      "group-name": "qos.config.interface.scheduler",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_qos_scheduler_t"
        }
      ]
    },
    {
      "method-name": "qos.config.interface.scheduler.get",
      "description": "This is an overload of qos.config.interface.scheduler.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "qos.config.interface.scheduler",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_qos_scheduler_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "qos.config.interface.scheduler.set",
      "group-name": "qos.config.interface.scheduler",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_qos_scheduler_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.config.qce.get",
      "group-name": "qos.config.qce",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_qos_qce_conf_t"
        }
      ]
    },
    {
      "method-name": "qos.config.qce.get",
      "description": "This is an overload of qos.config.qce.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "qos.config.qce",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_qos_qce_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "qos.config.qce.set",
      "group-name": "qos.config.qce",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_qos_qce_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.config.qce.add",
      "group-name": "qos.config.qce",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_qos_qce_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.config.qce.del",
      "group-name": "qos.config.qce",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.config.qce.precedence.get",
      "group-name": "qos.config.qce.precedence",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "uint32_t"
        }
      ]
    },
    {
      "method-name": "qos.config.qce.precedence.get",
      "description": "This is an overload of qos.config.qce.precedence.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "qos.config.qce.precedence",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "uint32_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "qos.status.interface.get",
      "group-name": "qos.status.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_qos_if_status_t"
        }
      ]
    },
    {
      "method-name": "qos.status.interface.get",
      "description": "This is an overload of qos.status.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "qos.status.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_qos_if_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "qos.status.interface.scheduler.get",
      "group-name": "qos.status.interface.scheduler",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_qos_scheduler_t"
        }
      ]
    },
    {
      "method-name": "qos.status.interface.scheduler.get",
      "description": "This is an overload of qos.status.interface.scheduler.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "qos.status.interface.scheduler",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_qos_scheduler_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "qos.status.qce.get",
      "group-name": "qos.status.qce",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_qos_qce_status_t"
        }
      ]
    },
    {
      "method-name": "qos.status.qce.get",
      "description": "This is an overload of qos.status.qce.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "qos.status.qce",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "uint32_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_qos_qce_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "qos.control.qce.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_bool_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "qos.capabilities.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_qos_capabilities_t"
        }
      ]
    },
    {
      "method-name": "aggregation.config.mode.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_aggr_mode_t"
        }
      ]
    },
    {
      "method-name": "aggregation.config.mode.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_aggr_mode_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "aggregation.config.group.get",
      "group-name": "aggregation.config.group",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_aggr_group_member_t"
        }
      ]
    },
    {
      "method-name": "aggregation.config.group.get",
      "description": "This is an overload of aggregation.config.group.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "aggregation.config.group",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_aggr_group_member_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "aggregation.config.group.set",
      "group-name": "aggregation.config.group",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_aggr_group_member_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "aggregation.config.group.add",
      "group-name": "aggregation.config.group",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_aggr_group_member_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "aggregation.config.group.del",
      "group-name": "aggregation.config.group",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "aggregation.status.group.get",
      "group-name": "aggregation.status.group",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_aggr_group_status_t"
        }
      ]
    },
    {
      "method-name": "aggregation.status.group.get",
      "description": "This is an overload of aggregation.status.group.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "aggregation.status.group",
      "notification": "aggregation.status.group.update",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_aggr_group_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "private-vlan.capabilities.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_pvlan_capabilities_t"
        }
      ]
    },
    {
      "method-name": "private-vlan.config.membership.get",
      "group-name": "private-vlan.config.membership",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_pvlan_membership_conf_t"
        }
      ]
    },
    {
      "method-name": "private-vlan.config.membership.get",
      "description": "This is an overload of private-vlan.config.membership.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "private-vlan.config.membership",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_pvlan_membership_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "private-vlan.config.membership.set",
      "group-name": "private-vlan.config.membership",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_pvlan_membership_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "private-vlan.config.membership.add",
      "group-name": "private-vlan.config.membership",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_pvlan_membership_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "private-vlan.config.membership.del",
      "group-name": "private-vlan.config.membership",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "private-vlan.config.isolation.get",
      "group-name": "private-vlan.config.isolation",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_pvlan_isolation_conf_t"
        }
      ]
    },
    {
      "method-name": "private-vlan.config.isolation.get",
      "description": "This is an overload of private-vlan.config.isolation.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "private-vlan.config.isolation",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_pvlan_isolation_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "private-vlan.config.isolation.set",
      "group-name": "private-vlan.config.isolation",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_pvlan_isolation_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "firmware.status.image.get",
      "group-name": "firmware.status.image",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_firmware_status_image_t"
        }
      ]
    },
    {
      "method-name": "firmware.status.image.get",
      "description": "This is an overload of firmware.status.image.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "firmware.status.image",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_firmware_status_image_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "firmware.status.image-upload.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_firmware_status_image_upload_t"
        }
      ]
    },
    {
      "method-name": "firmware.status.switch.get",
      "group-name": "firmware.status.switch",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_firmware_status_switch_t"
        }
      ]
    },
    {
      "method-name": "firmware.status.switch.get",
      "description": "This is an overload of firmware.status.switch.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "firmware.status.switch",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_firmware_status_switch_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "firmware.control.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_firmware_control_globals_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "firmware.control.image-upload.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_firmware_control_image_upload_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "eps.config.instance.get",
      "group-name": "eps.config.instance",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_eps_create_param_t"
        }
      ]
    },
    {
      "method-name": "eps.config.instance.get",
      "description": "This is an overload of eps.config.instance.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "eps.config.instance",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_eps_create_param_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "eps.config.instance.set",
      "group-name": "eps.config.instance",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_eps_create_param_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "eps.config.instance.add",
      "group-name": "eps.config.instance",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_eps_create_param_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "eps.config.instance.del",
      "group-name": "eps.config.instance",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "eps.config.instance.base.get",
      "group-name": "eps.config.instance.base",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_eps_conf_t"
        }
      ]
    },
    {
      "method-name": "eps.config.instance.base.get",
      "description": "This is an overload of eps.config.instance.base.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "eps.config.instance.base",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_eps_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "eps.config.instance.base.set",
      "group-name": "eps.config.instance.base",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_eps_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "eps.config.instance.mep.get",
      "group-name": "eps.config.instance.mep",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_eps_mep_t"
        }
      ]
    },
    {
      "method-name": "eps.config.instance.mep.get",
      "description": "This is an overload of eps.config.instance.mep.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "eps.config.instance.mep",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_eps_mep_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "eps.config.instance.mep.set",
      "group-name": "eps.config.instance.mep",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_eps_mep_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "eps.config.instance.command.get",
      "group-name": "eps.config.instance.command",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_eps_command_conf_t"
        }
      ]
    },
    {
      "method-name": "eps.config.instance.command.get",
      "description": "This is an overload of eps.config.instance.command.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "eps.config.instance.command",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_eps_command_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "eps.config.instance.command.set",
      "group-name": "eps.config.instance.command",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_eps_command_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "eps.status.instance.get",
      "group-name": "eps.status.instance",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_eps_state_t"
        }
      ]
    },
    {
      "method-name": "eps.status.instance.get",
      "description": "This is an overload of eps.status.instance.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "eps.status.instance",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_eps_state_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "eps.capabilities.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_eps_capabilities_t"
        }
      ]
    },
    {
      "method-name": "mep.config.instance.get",
      "group-name": "mep.config.instance",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.instance.get",
      "description": "This is an overload of mep.config.instance.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.config.instance",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.config.instance.set",
      "group-name": "mep.config.instance",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.instance.add",
      "group-name": "mep.config.instance",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.instance.del",
      "group-name": "mep.config.instance",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.instance-peer.get",
      "group-name": "mep.config.instance-peer",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_mep_peer_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.instance-peer.get",
      "description": "This is an overload of mep.config.instance-peer.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.config.instance-peer",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_mep_peer_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.config.instance-peer.set",
      "group-name": "mep.config.instance-peer",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_mep_peer_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.instance-peer.add",
      "group-name": "mep.config.instance-peer",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_mep_peer_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.instance-peer.del",
      "group-name": "mep.config.instance-peer",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.pm.get",
      "group-name": "mep.config.pm",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_pm_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.pm.get",
      "description": "This is an overload of mep.config.pm.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.config.pm",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_pm_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.config.pm.set",
      "group-name": "mep.config.pm",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_pm_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.lst.get",
      "group-name": "mep.config.lst",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lst_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.lst.get",
      "description": "This is an overload of mep.config.lst.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.config.lst",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_lst_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.config.lst.set",
      "group-name": "mep.config.lst",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lst_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.cc.get",
      "group-name": "mep.config.cc",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_cc_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.cc.get",
      "description": "This is an overload of mep.config.cc.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.config.cc",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_cc_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.config.cc.set",
      "group-name": "mep.config.cc",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_cc_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.cc.add",
      "group-name": "mep.config.cc",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_cc_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.cc.del",
      "group-name": "mep.config.cc",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.lm.get",
      "group-name": "mep.config.lm",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lm_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.lm.get",
      "description": "This is an overload of mep.config.lm.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.config.lm",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_lm_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.config.lm.set",
      "group-name": "mep.config.lm",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lm_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.lm_avail.get",
      "group-name": "mep.config.lm_avail",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lm_avail_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.lm_avail.get",
      "description": "This is an overload of mep.config.lm_avail.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.config.lm_avail",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_lm_avail_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.config.lm_avail.set",
      "group-name": "mep.config.lm_avail",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lm_avail_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.lm_hli.get",
      "group-name": "mep.config.lm_hli",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lm_hli_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.lm_hli.get",
      "description": "This is an overload of mep.config.lm_hli.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.config.lm_hli",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_lm_hli_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.config.lm_hli.set",
      "group-name": "mep.config.lm_hli",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lm_hli_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.lm_sdeg.get",
      "group-name": "mep.config.lm_sdeg",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lm_sdeg_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.lm_sdeg.get",
      "description": "This is an overload of mep.config.lm_sdeg.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.config.lm_sdeg",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_lm_sdeg_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.config.lm_sdeg.set",
      "group-name": "mep.config.lm_sdeg",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lm_sdeg_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.dm.get",
      "group-name": "mep.config.dm",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_dm_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.dm.get",
      "description": "This is an overload of mep.config.dm.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.config.dm",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_dm_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.config.dm.set",
      "group-name": "mep.config.dm",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_dm_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.lb.get",
      "group-name": "mep.config.lb",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lb_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.lb.get",
      "description": "This is an overload of mep.config.lb.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.config.lb",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_lb_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.config.lb.set",
      "group-name": "mep.config.lb",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lb_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.lb.add",
      "group-name": "mep.config.lb",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lb_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.lb.del",
      "group-name": "mep.config.lb",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.tst.get",
      "group-name": "mep.config.tst",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_tst_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.tst.get",
      "description": "This is an overload of mep.config.tst.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.config.tst",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_tst_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.config.tst.set",
      "group-name": "mep.config.tst",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_tst_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.tst.add",
      "group-name": "mep.config.tst",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_tst_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.tst.del",
      "group-name": "mep.config.tst",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.lt.get",
      "group-name": "mep.config.lt",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lt_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.lt.get",
      "description": "This is an overload of mep.config.lt.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.config.lt",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_lt_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.config.lt.set",
      "group-name": "mep.config.lt",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lt_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.lt.add",
      "group-name": "mep.config.lt",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lt_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.lt.del",
      "group-name": "mep.config.lt",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.aps.get",
      "group-name": "mep.config.aps",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_aps_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.aps.get",
      "description": "This is an overload of mep.config.aps.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.config.aps",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_aps_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.config.aps.set",
      "group-name": "mep.config.aps",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_aps_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.aps.add",
      "group-name": "mep.config.aps",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_aps_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.aps.del",
      "group-name": "mep.config.aps",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.ais.get",
      "group-name": "mep.config.ais",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_ais_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.ais.get",
      "description": "This is an overload of mep.config.ais.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.config.ais",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_ais_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.config.ais.set",
      "group-name": "mep.config.ais",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_ais_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.ais.add",
      "group-name": "mep.config.ais",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_ais_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.ais.del",
      "group-name": "mep.config.ais",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.lck.get",
      "group-name": "mep.config.lck",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lck_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.lck.get",
      "description": "This is an overload of mep.config.lck.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.config.lck",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_lck_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.config.lck.set",
      "group-name": "mep.config.lck",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lck_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.lck.add",
      "group-name": "mep.config.lck",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lck_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.lck.del",
      "group-name": "mep.config.lck",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.client-flow.get",
      "group-name": "mep.config.client-flow",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_mep_client_flow_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.client-flow.get",
      "description": "This is an overload of mep.config.client-flow.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.config.client-flow",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "vtss_ifindex_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_mep_client_flow_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.config.client-flow.set",
      "group-name": "mep.config.client-flow",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_mep_client_flow_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.client-flow.add",
      "group-name": "mep.config.client-flow",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_mep_client_flow_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.client-flow.del",
      "group-name": "mep.config.client-flow",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.syslog.get",
      "group-name": "mep.config.syslog",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_syslog_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.syslog.get",
      "description": "This is an overload of mep.config.syslog.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.config.syslog",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_syslog_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.config.syslog.set",
      "group-name": "mep.config.syslog",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_syslog_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.tlv-leaf.get",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_mep_tlv_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.tlv-leaf.set",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_mep_tlv_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.bfd.get",
      "group-name": "mep.config.bfd",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_g8113_2_bfd_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.bfd.get",
      "description": "This is an overload of mep.config.bfd.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.config.bfd",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_g8113_2_bfd_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.config.bfd.set",
      "group-name": "mep.config.bfd",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_g8113_2_bfd_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.bfd.add",
      "group-name": "mep.config.bfd",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_g8113_2_bfd_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.bfd.del",
      "group-name": "mep.config.bfd",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.bfd-auth.get",
      "group-name": "mep.config.bfd-auth",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_g8113_2_bfd_auth_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.bfd-auth.get",
      "description": "This is an overload of mep.config.bfd-auth.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.config.bfd-auth",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_g8113_2_bfd_auth_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.config.bfd-auth.set",
      "group-name": "mep.config.bfd-auth",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_g8113_2_bfd_auth_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.bfd-auth.add",
      "group-name": "mep.config.bfd-auth",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_g8113_2_bfd_auth_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.bfd-auth.del",
      "group-name": "mep.config.bfd-auth",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.rt.get",
      "group-name": "mep.config.rt",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_rt_conf_t"
        }
      ]
    },
    {
      "method-name": "mep.config.rt.get",
      "description": "This is an overload of mep.config.rt.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.config.rt",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_rt_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.config.rt.set",
      "group-name": "mep.config.rt",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_rt_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.rt.add",
      "group-name": "mep.config.rt",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_rt_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.config.rt.del",
      "group-name": "mep.config.rt",
      "web-privilege": {
        "id": "MEP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.status.instance.get",
      "group-name": "mep.status.instance",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_state_t"
        }
      ]
    },
    {
      "method-name": "mep.status.instance.get",
      "description": "This is an overload of mep.status.instance.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.status.instance",
      "notification": "mep.status.instance.update",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_state_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.status.instance-peer.get",
      "group-name": "mep.status.instance-peer",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_mep_peer_state_t"
        }
      ]
    },
    {
      "method-name": "mep.status.instance-peer.get",
      "description": "This is an overload of mep.status.instance-peer.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.status.instance-peer",
      "notification": "mep.status.instance-peer.update",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_mep_peer_state_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.status.lm-notif.get",
      "group-name": "mep.status.lm-notif",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lm_notif_state_t"
        }
      ]
    },
    {
      "method-name": "mep.status.lm-notif.get",
      "description": "This is an overload of mep.status.lm-notif.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.status.lm-notif",
      "notification": "mep.status.lm-notif.update",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_lm_notif_state_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.status.lm.get",
      "group-name": "mep.status.lm",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lm_state_t"
        }
      ]
    },
    {
      "method-name": "mep.status.lm.get",
      "description": "This is an overload of mep.status.lm.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.status.lm",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_lm_state_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.status.lm-avail.get",
      "group-name": "mep.status.lm-avail",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lm_avail_state_t"
        }
      ]
    },
    {
      "method-name": "mep.status.lm-avail.get",
      "description": "This is an overload of mep.status.lm-avail.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.status.lm-avail",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_lm_avail_state_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.status.lm-hli.get",
      "group-name": "mep.status.lm-hli",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lm_hli_state_t"
        }
      ]
    },
    {
      "method-name": "mep.status.lm-hli.get",
      "description": "This is an overload of mep.status.lm-hli.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.status.lm-hli",
      "notification": "mep.status.lm-hli.update",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_lm_hli_state_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.status.dm-two-way.get",
      "group-name": "mep.status.dm-two-way",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_dm_state_t"
        }
      ]
    },
    {
      "method-name": "mep.status.dm-two-way.get",
      "description": "This is an overload of mep.status.dm-two-way.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.status.dm-two-way",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_dm_state_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.status.dm-one-way-far-near.get",
      "group-name": "mep.status.dm-one-way-far-near",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_dm_state_t"
        }
      ]
    },
    {
      "method-name": "mep.status.dm-one-way-far-near.get",
      "description": "This is an overload of mep.status.dm-one-way-far-near.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.status.dm-one-way-far-near",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_dm_state_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.status.dm-one-way-near-far.get",
      "group-name": "mep.status.dm-one-way-near-far",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_dm_state_t"
        }
      ]
    },
    {
      "method-name": "mep.status.dm-one-way-near-far.get",
      "description": "This is an overload of mep.status.dm-one-way-near-far.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.status.dm-one-way-near-far",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_dm_state_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.status.lb.get",
      "group-name": "mep.status.lb",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lb_state_t"
        }
      ]
    },
    {
      "method-name": "mep.status.lb.get",
      "description": "This is an overload of mep.status.lb.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.status.lb",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_lb_state_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.status.lb-reply.get",
      "group-name": "mep.status.lb-reply",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_mep_lb_reply_t"
        }
      ]
    },
    {
      "method-name": "mep.status.lb-reply.get",
      "description": "This is an overload of mep.status.lb-reply.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.status.lb-reply",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_mep_lb_reply_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.status.tst.get",
      "group-name": "mep.status.tst",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_tst_state_t"
        }
      ]
    },
    {
      "method-name": "mep.status.tst.get",
      "description": "This is an overload of mep.status.tst.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.status.tst",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_tst_state_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.status.lt.get",
      "group-name": "mep.status.lt",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lt_transaction_t"
        }
      ]
    },
    {
      "method-name": "mep.status.lt.get",
      "description": "This is an overload of mep.status.lt.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.status.lt",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_lt_transaction_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.status.lt-reply.get",
      "group-name": "mep.status.lt-reply",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_mep_lt_reply_t"
        }
      ]
    },
    {
      "method-name": "mep.status.lt-reply.get",
      "description": "This is an overload of mep.status.lt-reply.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.status.lt-reply",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_mep_lt_reply_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.status.cc-peer.get",
      "group-name": "mep.status.cc-peer",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_mep_peer_cc_state_t"
        }
      ]
    },
    {
      "method-name": "mep.status.cc-peer.get",
      "description": "This is an overload of mep.status.cc-peer.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.status.cc-peer",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_mep_peer_cc_state_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.status.bfd.get",
      "group-name": "mep.status.bfd",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_g8113_2_bfd_state_t"
        }
      ]
    },
    {
      "method-name": "mep.status.bfd.get",
      "description": "This is an overload of mep.status.bfd.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.status.bfd",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_g8113_2_bfd_state_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.status.rt.get",
      "group-name": "mep.status.rt",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_rt_status_t"
        }
      ]
    },
    {
      "method-name": "mep.status.rt.get",
      "description": "This is an overload of mep.status.rt.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.status.rt",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_rt_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.status.rt-reply.get",
      "group-name": "mep.status.rt-reply",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_mep_rt_reply_t"
        }
      ]
    },
    {
      "method-name": "mep.status.rt-reply.get",
      "description": "This is an overload of mep.status.rt-reply.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.status.rt-reply",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "uint32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_mep_rt_reply_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.control.lm.get",
      "group-name": "mep.control.lm",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lm_control_t"
        }
      ]
    },
    {
      "method-name": "mep.control.lm.get",
      "description": "This is an overload of mep.control.lm.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.control.lm",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_lm_control_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.control.lm.set",
      "group-name": "mep.control.lm",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_lm_control_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.control.dm.get",
      "group-name": "mep.control.dm",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_dm_control_t"
        }
      ]
    },
    {
      "method-name": "mep.control.dm.get",
      "description": "This is an overload of mep.control.dm.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.control.dm",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_dm_control_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.control.dm.set",
      "group-name": "mep.control.dm",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_dm_control_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.control.tst.get",
      "group-name": "mep.control.tst",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_tst_control_t"
        }
      ]
    },
    {
      "method-name": "mep.control.tst.get",
      "description": "This is an overload of mep.control.tst.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.control.tst",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_tst_control_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.control.tst.set",
      "group-name": "mep.control.tst",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_tst_control_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.control.bfd.get",
      "group-name": "mep.control.bfd",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_bfd_control_t"
        }
      ]
    },
    {
      "method-name": "mep.control.bfd.get",
      "description": "This is an overload of mep.control.bfd.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mep.control.bfd",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mep_bfd_control_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mep.control.bfd.set",
      "group-name": "mep.control.bfd",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RW"
      },
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mep_bfd_control_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mep.capabilities.get",
      "web-privilege": {
        "id": "MEP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_mep_capabilities_t"
        }
      ]
    },
    {
      "method-name": "mstp.config.msti.parameters.get",
      "group-name": "mstp.config.msti.parameters",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mstp_msti_param_t"
        }
      ]
    },
    {
      "method-name": "mstp.config.msti.parameters.get",
      "description": "This is an overload of mstp.config.msti.parameters.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mstp.config.msti.parameters",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mstp_msti_param_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mstp.config.msti.parameters.set",
      "group-name": "mstp.config.msti.parameters",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mstp_msti_param_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mstp.config.msti.config.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_mstp_msti_config_name_and_rev_t"
        }
      ]
    },
    {
      "method-name": "mstp.config.msti.config.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_mstp_msti_config_name_and_rev_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mstp.config.msti.map.get",
      "group-name": "mstp.config.msti.map",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mstp_vlan_msti_config"
        }
      ]
    },
    {
      "method-name": "mstp.config.msti.map.get",
      "description": "This is an overload of mstp.config.msti.map.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mstp.config.msti.map",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mstp_vlan_msti_config"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mstp.config.msti.map.set",
      "group-name": "mstp.config.msti.map",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mstp_vlan_msti_config"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mstp.config.msti.interface.get",
      "group-name": "mstp.config.msti.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_mstp_msti_port_param_t"
        }
      ]
    },
    {
      "method-name": "mstp.config.msti.interface.get",
      "description": "This is an overload of mstp.config.msti.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mstp.config.msti.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_mstp_msti_port_param_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mstp.config.msti.interface.set",
      "group-name": "mstp.config.msti.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_mstp_msti_port_param_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mstp.config.msti.aggr.get",
      "group-name": "mstp.config.msti.aggr",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mstp_msti_port_param_t"
        }
      ]
    },
    {
      "method-name": "mstp.config.msti.aggr.get",
      "description": "This is an overload of mstp.config.msti.aggr.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mstp.config.msti.aggr",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mstp_msti_port_param_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mstp.config.msti.aggr.set",
      "group-name": "mstp.config.msti.aggr",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mstp_msti_port_param_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mstp.config.cist.interface.get",
      "group-name": "mstp.config.cist.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mstp_port_config_t"
        }
      ]
    },
    {
      "method-name": "mstp.config.cist.interface.get",
      "description": "This is an overload of mstp.config.cist.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mstp.config.cist.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mstp_port_config_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mstp.config.cist.interface.set",
      "group-name": "mstp.config.cist.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mstp_port_config_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mstp.config.cist.aggr.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_mstp_port_config_t"
        }
      ]
    },
    {
      "method-name": "mstp.config.cist.aggr.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_mstp_port_config_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mstp.config.bridge.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_mstp_bridge_param_t"
        }
      ]
    },
    {
      "method-name": "mstp.config.bridge.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_mstp_bridge_param_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mstp.status.bridge.get",
      "group-name": "mstp.status.bridge",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mstp_bridge_status_t"
        }
      ]
    },
    {
      "method-name": "mstp.status.bridge.get",
      "description": "This is an overload of mstp.status.bridge.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mstp.status.bridge",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mstp_bridge_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mstp.status.interface.get",
      "group-name": "mstp.status.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_mstp_port_mgmt_status_t"
        }
      ]
    },
    {
      "method-name": "mstp.status.interface.get",
      "description": "This is an overload of mstp.status.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mstp.status.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_mstp_port_mgmt_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mstp.statistics.interface.get",
      "group-name": "mstp.statistics.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mstp_port_statistics_t"
        }
      ]
    },
    {
      "method-name": "mstp.statistics.interface.get",
      "description": "This is an overload of mstp.statistics.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mstp.statistics.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mstp_port_statistics_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ptp.config.global.external-clock-mode.get",
      "params": [

      ],
      "result": [
        {
          "name": "ext_clock_mode",
          "type": "vtss_appl_ptp_ext_clock_mode_t"
        }
      ]
    },
    {
      "method-name": "ptp.config.global.external-clock-mode.set",
      "params": [
        {
          "name": "ext_clock_mode",
          "type": "vtss_appl_ptp_ext_clock_mode_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ptp.config.global.system-time-sync-mode.get",
      "params": [

      ],
      "result": [
        {
          "name": "time_sync_conf",
          "type": "vtss_appl_ptp_system_time_sync_conf_t"
        }
      ]
    },
    {
      "method-name": "ptp.config.global.system-time-sync-mode.set",
      "params": [
        {
          "name": "time_sync_conf",
          "type": "vtss_appl_ptp_system_time_sync_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ptp.config.clocks.default-ds.get",
      "group-name": "ptp.config.clocks.default-ds",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "default_ds",
          "type": "vtss_appl_ptp_clock_config_default_ds_t"
        }
      ]
    },
    {
      "method-name": "ptp.config.clocks.default-ds.get",
      "description": "This is an overload of ptp.config.clocks.default-ds.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ptp.config.clocks.default-ds",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "clock_id",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "default_ds",
                  "type": "vtss_appl_ptp_clock_config_default_ds_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ptp.config.clocks.default-ds.set",
      "group-name": "ptp.config.clocks.default-ds",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        },
        {
          "name": "default_ds",
          "type": "vtss_appl_ptp_clock_config_default_ds_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ptp.config.clocks.default-ds.add",
      "group-name": "ptp.config.clocks.default-ds",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        },
        {
          "name": "default_ds",
          "type": "vtss_appl_ptp_clock_config_default_ds_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ptp.config.clocks.default-ds.del",
      "group-name": "ptp.config.clocks.default-ds",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ptp.config.clocks.time-properties-ds.get",
      "group-name": "ptp.config.clocks.time-properties-ds",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "timeproperties",
          "type": "vtss_appl_ptp_clock_timeproperties_ds_t"
        }
      ]
    },
    {
      "method-name": "ptp.config.clocks.time-properties-ds.get",
      "description": "This is an overload of ptp.config.clocks.time-properties-ds.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ptp.config.clocks.time-properties-ds",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "clock_id",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "timeproperties",
                  "type": "vtss_appl_ptp_clock_timeproperties_ds_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ptp.config.clocks.time-properties-ds.set",
      "group-name": "ptp.config.clocks.time-properties-ds",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        },
        {
          "name": "timeproperties",
          "type": "vtss_appl_ptp_clock_timeproperties_ds_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ptp.config.clocks.filter-parameters.get",
      "group-name": "ptp.config.clocks.filter-parameters",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "filter_config",
          "type": "vtss_appl_ptp_clock_filter_config_t"
        }
      ]
    },
    {
      "method-name": "ptp.config.clocks.filter-parameters.get",
      "description": "This is an overload of ptp.config.clocks.filter-parameters.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ptp.config.clocks.filter-parameters",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "clock_id",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "filter_config",
                  "type": "vtss_appl_ptp_clock_filter_config_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ptp.config.clocks.filter-parameters.set",
      "group-name": "ptp.config.clocks.filter-parameters",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        },
        {
          "name": "filter_config",
          "type": "vtss_appl_ptp_clock_filter_config_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ptp.config.clocks.servo-parameters.get",
      "group-name": "ptp.config.clocks.servo-parameters",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "servo_config",
          "type": "vtss_appl_ptp_clock_servo_config_t"
        }
      ]
    },
    {
      "method-name": "ptp.config.clocks.servo-parameters.get",
      "description": "This is an overload of ptp.config.clocks.servo-parameters.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ptp.config.clocks.servo-parameters",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "clock_id",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "servo_config",
                  "type": "vtss_appl_ptp_clock_servo_config_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ptp.config.clocks.servo-parameters.set",
      "group-name": "ptp.config.clocks.servo-parameters",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        },
        {
          "name": "servo_config",
          "type": "vtss_appl_ptp_clock_servo_config_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ptp.config.clocks.slave-config.get",
      "group-name": "ptp.config.clocks.slave-config",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "slave_config",
          "type": "vtss_appl_ptp_clock_slave_config_t"
        }
      ]
    },
    {
      "method-name": "ptp.config.clocks.slave-config.get",
      "description": "This is an overload of ptp.config.clocks.slave-config.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ptp.config.clocks.slave-config",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "clock_id",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "slave_config",
                  "type": "vtss_appl_ptp_clock_slave_config_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ptp.config.clocks.slave-config.set",
      "group-name": "ptp.config.clocks.slave-config",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        },
        {
          "name": "slave_config",
          "type": "vtss_appl_ptp_clock_slave_config_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ptp.config.clocks.unicast-slave-config.get",
      "group-name": "ptp.config.clocks.unicast-slave-config",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        },
        {
          "name": "master_id",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "unicast_slave_config",
          "type": "vtss_appl_ptp_unicast_slave_config_t"
        }
      ]
    },
    {
      "method-name": "ptp.config.clocks.unicast-slave-config.get",
      "description": "This is an overload of ptp.config.clocks.unicast-slave-config.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ptp.config.clocks.unicast-slave-config",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "clock_id",
                        "type": "int32_t"
                      },
                      {
                        "name": "master_id",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "unicast_slave_config",
                  "type": "vtss_appl_ptp_unicast_slave_config_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ptp.config.clocks.unicast-slave-config.set",
      "group-name": "ptp.config.clocks.unicast-slave-config",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        },
        {
          "name": "master_id",
          "type": "int32_t"
        },
        {
          "name": "unicast_slave_config",
          "type": "vtss_appl_ptp_unicast_slave_config_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ptp.config.clocks.port-ds.get",
      "group-name": "ptp.config.clocks.port-ds",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        },
        {
          "name": "port_id",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "port_ds",
          "type": "vtss_appl_ptp_config_port_ds_t"
        }
      ]
    },
    {
      "method-name": "ptp.config.clocks.port-ds.get",
      "description": "This is an overload of ptp.config.clocks.port-ds.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ptp.config.clocks.port-ds",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "clock_id",
                        "type": "int32_t"
                      },
                      {
                        "name": "port_id",
                        "type": "vtss_ifindex_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "port_ds",
                  "type": "vtss_appl_ptp_config_port_ds_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ptp.config.clocks.port-ds.set",
      "group-name": "ptp.config.clocks.port-ds",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        },
        {
          "name": "port_id",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "port_ds",
          "type": "vtss_appl_ptp_config_port_ds_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ptp.status.clocks.unicast.master.get",
      "group-name": "ptp.status.clocks.unicast.master",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        },
        {
          "name": "slave_ip",
          "type": "vtss_ipv4_t"
        }
      ],
      "result": [
        {
          "name": "unicast_master_table",
          "type": "vtss_appl_ptp_unicast_master_table_t"
        }
      ]
    },
    {
      "method-name": "ptp.status.clocks.unicast.master.get",
      "description": "This is an overload of ptp.status.clocks.unicast.master.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ptp.status.clocks.unicast.master",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "clock_id",
                        "type": "int32_t"
                      },
                      {
                        "name": "slave_ip",
                        "type": "vtss_ipv4_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "unicast_master_table",
                  "type": "vtss_appl_ptp_unicast_master_table_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ptp.status.clocks.unicast.slave.get",
      "group-name": "ptp.status.clocks.unicast.slave",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        },
        {
          "name": "master_id",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "unicast_slave_table",
          "type": "vtss_appl_ptp_unicast_slave_table_t"
        }
      ]
    },
    {
      "method-name": "ptp.status.clocks.unicast.slave.get",
      "description": "This is an overload of ptp.status.clocks.unicast.slave.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ptp.status.clocks.unicast.slave",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "clock_id",
                        "type": "int32_t"
                      },
                      {
                        "name": "master_id",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "unicast_slave_table",
                  "type": "vtss_appl_ptp_unicast_slave_table_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ptp.status.clocks.default-ds.get",
      "group-name": "ptp.status.clocks.default-ds",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "default_ds",
          "type": "vtss_appl_ptp_clock_status_default_ds_t"
        }
      ]
    },
    {
      "method-name": "ptp.status.clocks.default-ds.get",
      "description": "This is an overload of ptp.status.clocks.default-ds.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ptp.status.clocks.default-ds",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "clock_id",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "default_ds",
                  "type": "vtss_appl_ptp_clock_status_default_ds_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ptp.status.clocks.current-ds.get",
      "group-name": "ptp.status.clocks.current-ds",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "current_ds",
          "type": "vtss_appl_ptp_clock_current_ds_t"
        }
      ]
    },
    {
      "method-name": "ptp.status.clocks.current-ds.get",
      "description": "This is an overload of ptp.status.clocks.current-ds.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ptp.status.clocks.current-ds",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "clock_id",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "current_ds",
                  "type": "vtss_appl_ptp_clock_current_ds_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ptp.status.clocks.parent-ds.get",
      "group-name": "ptp.status.clocks.parent-ds",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "parent_ds",
          "type": "vtss_appl_ptp_clock_parent_ds_t"
        }
      ]
    },
    {
      "method-name": "ptp.status.clocks.parent-ds.get",
      "description": "This is an overload of ptp.status.clocks.parent-ds.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ptp.status.clocks.parent-ds",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "clock_id",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "parent_ds",
                  "type": "vtss_appl_ptp_clock_parent_ds_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ptp.status.clocks.time-properties-ds.get",
      "group-name": "ptp.status.clocks.time-properties-ds",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "timeproperties",
          "type": "vtss_appl_ptp_clock_timeproperties_ds_t"
        }
      ]
    },
    {
      "method-name": "ptp.status.clocks.time-properties-ds.get",
      "description": "This is an overload of ptp.status.clocks.time-properties-ds.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ptp.status.clocks.time-properties-ds",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "clock_id",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "timeproperties",
                  "type": "vtss_appl_ptp_clock_timeproperties_ds_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ptp.status.clocks.clocks-slave-ds.get",
      "group-name": "ptp.status.clocks.clocks-slave-ds",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "slave_ds",
          "type": "vtss_appl_ptp_clock_slave_ds_t"
        }
      ]
    },
    {
      "method-name": "ptp.status.clocks.clocks-slave-ds.get",
      "description": "This is an overload of ptp.status.clocks.clocks-slave-ds.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ptp.status.clocks.clocks-slave-ds",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "clock_id",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "slave_ds",
                  "type": "vtss_appl_ptp_clock_slave_ds_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ptp.status.clocks.port-ds.get",
      "group-name": "ptp.status.clocks.port-ds",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        },
        {
          "name": "port_id",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "port_ds",
          "type": "vtss_appl_ptp_status_port_ds_t"
        }
      ]
    },
    {
      "method-name": "ptp.status.clocks.port-ds.get",
      "description": "This is an overload of ptp.status.clocks.port-ds.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ptp.status.clocks.port-ds",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "clock_id",
                        "type": "int32_t"
                      },
                      {
                        "name": "port_id",
                        "type": "vtss_ifindex_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "port_ds",
                  "type": "vtss_appl_ptp_status_port_ds_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ptp.control.clocks.set",
      "group-name": "ptp.control.clocks",
      "params": [
        {
          "name": "clock_id",
          "type": "int32_t"
        },
        {
          "name": "clock_control",
          "type": "vtss_appl_ptp_clock_control_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ptp.capabilities.get",
      "params": [

      ],
      "result": [
        {
          "name": "capabilities",
          "type": "vtss_appl_ptp_capabilities_t"
        }
      ]
    },
    {
      "method-name": "lacp.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_lacp_globals_t"
        }
      ]
    },
    {
      "method-name": "lacp.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_lacp_globals_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "lacp.config.interface.get",
      "group-name": "lacp.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_lacp_port_conf_t"
        }
      ]
    },
    {
      "method-name": "lacp.config.interface.get",
      "description": "This is an overload of lacp.config.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "lacp.config.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_lacp_port_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "lacp.config.interface.set",
      "group-name": "lacp.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_lacp_port_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "lacp.status.system.get",
      "group-name": "lacp.status.system",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_lacp_aggregator_status_t"
        }
      ]
    },
    {
      "method-name": "lacp.status.system.get",
      "description": "This is an overload of lacp.status.system.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "lacp.status.system",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_lacp_aggregator_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "lacp.status.interface.get",
      "group-name": "lacp.status.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_lacp_port_status_t"
        }
      ]
    },
    {
      "method-name": "lacp.status.interface.get",
      "description": "This is an overload of lacp.status.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "lacp.status.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_lacp_port_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "lacp.control.interface.set",
      "group-name": "lacp.control.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_bool_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "lacp.statistics.interface.get",
      "group-name": "lacp.statistics.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_lacp_port_stats_t"
        }
      ]
    },
    {
      "method-name": "lacp.statistics.interface.get",
      "description": "This is an overload of lacp.statistics.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "lacp.statistics.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_lacp_port_stats_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "nas.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_glbl_cfg_t"
        }
      ]
    },
    {
      "method-name": "nas.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_glbl_cfg_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "nas.config.interface.get",
      "group-name": "nas.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "NAS_ifindex_index"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_nas_port_cfg_t"
        }
      ]
    },
    {
      "method-name": "nas.config.interface.get",
      "description": "This is an overload of nas.config.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "nas.config.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "NAS_ifindex_index"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_nas_port_cfg_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "nas.config.interface.set",
      "group-name": "nas.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "NAS_ifindex_index"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_nas_port_cfg_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "nas.status.last-supplicant.get",
      "group-name": "nas.status.last-supplicant",
      "params": [
        {
          "name": "Argument1",
          "type": "NAS_ifindex_index"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_nas_client_info_t"
        }
      ]
    },
    {
      "method-name": "nas.status.last-supplicant.get",
      "description": "This is an overload of nas.status.last-supplicant.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "nas.status.last-supplicant",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "NAS_ifindex_index"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_nas_client_info_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "nas.status.interface.get",
      "group-name": "nas.status.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "NAS_ifindex_index"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_nas_interface_status_t"
        }
      ]
    },
    {
      "method-name": "nas.status.interface.get",
      "description": "This is an overload of nas.status.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "nas.status.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "NAS_ifindex_index"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_nas_interface_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "nas.statistics.eapol.get",
      "group-name": "nas.statistics.eapol",
      "params": [
        {
          "name": "Argument1",
          "type": "NAS_ifindex_index"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_nas_eapol_counters_t"
        }
      ]
    },
    {
      "method-name": "nas.statistics.eapol.get",
      "description": "This is an overload of nas.statistics.eapol.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "nas.statistics.eapol",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "NAS_ifindex_index"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_nas_eapol_counters_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "nas.statistics.radius.get",
      "group-name": "nas.statistics.radius",
      "params": [
        {
          "name": "Argument1",
          "type": "NAS_ifindex_index"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_nas_backend_counters_t"
        }
      ]
    },
    {
      "method-name": "nas.statistics.radius.get",
      "description": "This is an overload of nas.statistics.radius.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "nas.statistics.radius",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "NAS_ifindex_index"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_nas_backend_counters_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "nas.control.statistics.clear.set",
      "group-name": "nas.control.statistics.clear",
      "params": [
        {
          "name": "Argument1",
          "type": "NAS_ifindex_index"
        },
        {
          "name": "Argument2",
          "type": "vtss_bool_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "nas.control.reinit-or-reauthen.set",
      "group-name": "nas.control.reinit-or-reauthen",
      "params": [
        {
          "name": "Argument1",
          "type": "NAS_ifindex_index"
        },
        {
          "name": "Argument2",
          "type": "vtss_bool_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "lldp.config.med.interface.get",
      "group-name": "lldp.config.med.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "lldpmed_port_conf_t"
        }
      ]
    },
    {
      "method-name": "lldp.config.med.interface.get",
      "description": "This is an overload of lldp.config.med.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "lldp.config.med.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "lldpmed_port_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "lldp.config.med.interface.set",
      "group-name": "lldp.config.med.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "lldpmed_port_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "lldp.config.med.policy.get",
      "group-name": "lldp.config.med.policy",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_lldp_med_conf_network_policy_t"
        }
      ]
    },
    {
      "method-name": "lldp.config.med.policy.get",
      "description": "This is an overload of lldp.config.med.policy.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "lldp.config.med.policy",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_lldp_med_conf_network_policy_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "lldp.config.med.policy.set",
      "group-name": "lldp.config.med.policy",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_lldp_med_conf_network_policy_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "lldp.config.med.policy.add",
      "group-name": "lldp.config.med.policy",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_lldp_med_conf_network_policy_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "lldp.config.med.policy.del",
      "group-name": "lldp.config.med.policy",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "lldp.config.med.policy-list.get",
      "group-name": "lldp.config.med.policy-list",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_bool_t"
        }
      ]
    },
    {
      "method-name": "lldp.config.med.policy-list.get",
      "description": "This is an overload of lldp.config.med.policy-list.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "lldp.config.med.policy-list",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_bool_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "lldp.config.med.policy-list.set",
      "group-name": "lldp.config.med.policy-list",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_bool_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "lldp.config.med.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "lldpmed_global_conf_t"
        }
      ]
    },
    {
      "method-name": "lldp.config.med.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "lldpmed_global_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "lldp.config.med.location.get",
      "group-name": "lldp.config.med.location",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_lldp_med_catype_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_lldpmed_ca_type_t"
        }
      ]
    },
    {
      "method-name": "lldp.config.med.location.get",
      "description": "This is an overload of lldp.config.med.location.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "lldp.config.med.location",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_appl_lldp_med_catype_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_lldpmed_ca_type_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "lldp.config.med.location.set",
      "group-name": "lldp.config.med.location",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_lldp_med_catype_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_lldpmed_ca_type_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "lldp.config.interface.get",
      "group-name": "lldp.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "lldp_port_mib_conf_t"
        }
      ]
    },
    {
      "method-name": "lldp.config.interface.get",
      "description": "This is an overload of lldp.config.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "lldp.config.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "lldp_port_mib_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "lldp.config.interface.set",
      "group-name": "lldp.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "lldp_port_mib_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "lldp.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_lldp_global_conf_t"
        }
      ]
    },
    {
      "method-name": "lldp.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_lldp_global_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "lldp.status.med.remote-device-network-policy.get",
      "group-name": "lldp.status.med.remote-device-network-policy",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument4",
          "type": "vtss_appl_lldp_med_network_policy_t"
        }
      ]
    },
    {
      "method-name": "lldp.status.med.remote-device-network-policy.get",
      "description": "This is an overload of lldp.status.med.remote-device-network-policy.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "lldp.status.med.remote-device-network-policy",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument3",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument4",
                  "type": "vtss_appl_lldp_med_network_policy_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "lldp.status.med.remote-device.get",
      "group-name": "lldp.status.med.remote-device",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "lldpmed_remote_info_t"
        }
      ]
    },
    {
      "method-name": "lldp.status.med.remote-device.get",
      "description": "This is an overload of lldp.status.med.remote-device.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "lldp.status.med.remote-device",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "lldpmed_remote_info_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "lldp.status.med.remote-device-loc.get",
      "group-name": "lldp.status.med.remote-device-loc",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_lldpmed_civic_t"
        }
      ]
    },
    {
      "method-name": "lldp.status.med.remote-device-loc.get",
      "description": "This is an overload of lldp.status.med.remote-device-loc.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "lldp.status.med.remote-device-loc",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_lldpmed_civic_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "lldp.status.neighbors.get",
      "group-name": "lldp.status.neighbors",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "lldp_neighbors_information_t"
        }
      ]
    },
    {
      "method-name": "lldp.status.neighbors.get",
      "description": "This is an overload of lldp.status.neighbors.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "lldp.status.neighbors",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "lldp_neighbors_information_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "lldp.status.neighbors-mgmt.get",
      "group-name": "lldp.status.neighbors-mgmt",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument4",
          "type": "vtss_appl_lldp_mgmt_addr_tlv_t"
        }
      ]
    },
    {
      "method-name": "lldp.status.neighbors-mgmt.get",
      "description": "This is an overload of lldp.status.neighbors-mgmt.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "lldp.status.neighbors-mgmt",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument3",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument4",
                  "type": "vtss_appl_lldp_mgmt_addr_tlv_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "lldp.control.statistics.interface.clear.set",
      "group-name": "lldp.control.statistics.interface.clear",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_bool_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "lldp.control.statistics.global.clear.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_lldp_global_cnt_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "lldp.statistics.interfaces.get",
      "group-name": "lldp.statistics.interfaces",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_lldp_port_counters_t"
        }
      ]
    },
    {
      "method-name": "lldp.statistics.interfaces.get",
      "description": "This is an overload of lldp.statistics.interfaces.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "lldp.statistics.interfaces",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_lldp_port_counters_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "lldp.statistics.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_lldp_global_counters_t"
        }
      ]
    },
    {
      "method-name": "eee.capabilities.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_bool_t"
        }
      ]
    },
    {
      "method-name": "eee.capabilities.interface.get",
      "group-name": "eee.capabilities.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_eee_port_capabilities_t"
        }
      ]
    },
    {
      "method-name": "eee.capabilities.interface.get",
      "description": "This is an overload of eee.capabilities.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "eee.capabilities.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_eee_port_capabilities_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "eee.config.interface.get",
      "group-name": "eee.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_eee_port_conf_t"
        }
      ]
    },
    {
      "method-name": "eee.config.interface.get",
      "description": "This is an overload of eee.config.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "eee.config.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_eee_port_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "eee.config.interface.set",
      "group-name": "eee.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_eee_port_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "eee.config.interface.queue-type.get",
      "group-name": "eee.config.interface.queue-type",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_eee_port_queue_t"
        }
      ]
    },
    {
      "method-name": "eee.config.interface.queue-type.get",
      "description": "This is an overload of eee.config.interface.queue-type.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "eee.config.interface.queue-type",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_eee_port_queue_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "eee.config.interface.queue-type.set",
      "group-name": "eee.config.interface.queue-type",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_eee_port_queue_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "eee.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_eee_optimization_preference_t"
        }
      ]
    },
    {
      "method-name": "eee.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_eee_optimization_preference_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "eee.status.interface.get",
      "group-name": "eee.status.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_eee_port_status_t"
        }
      ]
    },
    {
      "method-name": "eee.status.interface.get",
      "description": "This is an overload of eee.status.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "eee.status.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_eee_port_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "thermal-protect.config.global.get",
      "group-name": "thermal-protect.config.global",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_thermal_protect_group_temperature_t"
        }
      ]
    },
    {
      "method-name": "thermal-protect.config.global.get",
      "description": "This is an overload of thermal-protect.config.global.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "thermal-protect.config.global",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_thermal_protect_group_temperature_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "thermal-protect.config.global.set",
      "group-name": "thermal-protect.config.global",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_thermal_protect_group_temperature_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "thermal-protect.config.interface.get",
      "group-name": "thermal-protect.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_thermal_protect_group_t"
        }
      ]
    },
    {
      "method-name": "thermal-protect.config.interface.get",
      "description": "This is an overload of thermal-protect.config.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "thermal-protect.config.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_thermal_protect_group_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "thermal-protect.config.interface.set",
      "group-name": "thermal-protect.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_thermal_protect_group_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "thermal-protect.status.interface.get",
      "group-name": "thermal-protect.status.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_thermal_protect_port_status_t"
        }
      ]
    },
    {
      "method-name": "thermal-protect.status.interface.get",
      "description": "This is an overload of thermal-protect.status.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "thermal-protect.status.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_thermal_protect_port_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "thermal-protect.capabilities.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_thermal_protect_capabilities_t"
        }
      ]
    },
    {
      "method-name": "led-power-reduction.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_led_power_reduction_led_full_brightness_conf_t"
        }
      ]
    },
    {
      "method-name": "led-power-reduction.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_led_power_reduction_led_full_brightness_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "led-power-reduction.config.time-intensity.get",
      "group-name": "led-power-reduction.config.time-intensity",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_led_power_reduction_intensity_t"
        }
      ]
    },
    {
      "method-name": "led-power-reduction.config.time-intensity.get",
      "description": "This is an overload of led-power-reduction.config.time-intensity.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "led-power-reduction.config.time-intensity",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_led_power_reduction_intensity_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "led-power-reduction.config.time-intensity.set",
      "group-name": "led-power-reduction.config.time-intensity",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_led_power_reduction_intensity_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "snmp.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "global_config",
          "type": "vtss_appl_snmp_conf_t"
        }
      ]
    },
    {
      "method-name": "snmp.config.global.set",
      "params": [
        {
          "name": "global_config",
          "type": "vtss_appl_snmp_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "snmp.config.communities.get",
      "group-name": "snmp.config.communities",
      "params": [
        {
          "name": "community_key",
          "type": "vtss_appl_snmp_community_name_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "snmp.config.communities.get",
      "description": "This is an overload of snmp.config.communities.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "snmp.config.communities",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "community_key",
                  "type": "vtss_appl_snmp_community_name_t"
                },
                {
                  "name": "val",
                  "type": null
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "snmp.config.communities.set",
      "group-name": "snmp.config.communities",
      "params": [
        {
          "name": "community_key",
          "type": "vtss_appl_snmp_community_name_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "snmp.config.communities.add",
      "group-name": "snmp.config.communities",
      "params": [
        {
          "name": "community_key",
          "type": "vtss_appl_snmp_community_name_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "snmp.config.communities.del",
      "group-name": "snmp.config.communities",
      "params": [
        {
          "name": "community_key",
          "type": "vtss_appl_snmp_community_name_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "snmp.config.users.get",
      "group-name": "snmp.config.users",
      "params": [
        {
          "name": "user_key",
          "type": "vtss_appl_snmp_user_index_t"
        }
      ],
      "result": [
        {
          "name": "user_name",
          "type": "vtss_appl_snmp_user_conf_t"
        }
      ]
    },
    {
      "method-name": "snmp.config.users.get",
      "description": "This is an overload of snmp.config.users.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "snmp.config.users",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "user_key",
                  "type": "vtss_appl_snmp_user_index_t"
                },
                {
                  "name": "val",
                  "semantic-name": "user_name",
                  "type": "vtss_appl_snmp_user_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "snmp.config.users.set",
      "group-name": "snmp.config.users",
      "params": [
        {
          "name": "user_key",
          "type": "vtss_appl_snmp_user_index_t"
        },
        {
          "name": "user_name",
          "type": "vtss_appl_snmp_user_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "snmp.config.users.add",
      "group-name": "snmp.config.users",
      "params": [
        {
          "name": "user_key",
          "type": "vtss_appl_snmp_user_index_t"
        },
        {
          "name": "user_name",
          "type": "vtss_appl_snmp_user_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "snmp.config.users.del",
      "group-name": "snmp.config.users",
      "params": [
        {
          "name": "user_key",
          "type": "vtss_appl_snmp_user_index_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "snmp.config.groups.get",
      "group-name": "snmp.config.groups",
      "params": [
        {
          "name": "group_key",
          "type": "vtss_appl_snmp_user_to_access_group_index_t"
        }
      ],
      "result": [
        {
          "name": "group_name",
          "type": "vtss_appl_snmp_user_to_access_group_conf_t"
        }
      ]
    },
    {
      "method-name": "snmp.config.groups.get",
      "description": "This is an overload of snmp.config.groups.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "snmp.config.groups",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "group_key",
                  "type": "vtss_appl_snmp_user_to_access_group_index_t"
                },
                {
                  "name": "val",
                  "semantic-name": "group_name",
                  "type": "vtss_appl_snmp_user_to_access_group_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "snmp.config.groups.set",
      "group-name": "snmp.config.groups",
      "params": [
        {
          "name": "group_key",
          "type": "vtss_appl_snmp_user_to_access_group_index_t"
        },
        {
          "name": "group_name",
          "type": "vtss_appl_snmp_user_to_access_group_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "snmp.config.groups.add",
      "group-name": "snmp.config.groups",
      "params": [
        {
          "name": "group_key",
          "type": "vtss_appl_snmp_user_to_access_group_index_t"
        },
        {
          "name": "group_name",
          "type": "vtss_appl_snmp_user_to_access_group_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "snmp.config.groups.del",
      "group-name": "snmp.config.groups",
      "params": [
        {
          "name": "group_key",
          "type": "vtss_appl_snmp_user_to_access_group_index_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "snmp.config.accesses.get",
      "group-name": "snmp.config.accesses",
      "params": [
        {
          "name": "access_key",
          "type": "vtss_appl_snmp_access_group_index_t"
        }
      ],
      "result": [
        {
          "name": "access_name",
          "type": "vtss_appl_snmp_access_group_conf_t"
        }
      ]
    },
    {
      "method-name": "snmp.config.accesses.get",
      "description": "This is an overload of snmp.config.accesses.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "snmp.config.accesses",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "access_key",
                  "type": "vtss_appl_snmp_access_group_index_t"
                },
                {
                  "name": "val",
                  "semantic-name": "access_name",
                  "type": "vtss_appl_snmp_access_group_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "snmp.config.accesses.set",
      "group-name": "snmp.config.accesses",
      "params": [
        {
          "name": "access_key",
          "type": "vtss_appl_snmp_access_group_index_t"
        },
        {
          "name": "access_name",
          "type": "vtss_appl_snmp_access_group_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "snmp.config.accesses.add",
      "group-name": "snmp.config.accesses",
      "params": [
        {
          "name": "access_key",
          "type": "vtss_appl_snmp_access_group_index_t"
        },
        {
          "name": "access_name",
          "type": "vtss_appl_snmp_access_group_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "snmp.config.accesses.del",
      "group-name": "snmp.config.accesses",
      "params": [
        {
          "name": "access_key",
          "type": "vtss_appl_snmp_access_group_index_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "snmp.config.views.get",
      "group-name": "snmp.config.views",
      "params": [
        {
          "name": "view_key",
          "type": "vtss_appl_snmp_view_index_t"
        }
      ],
      "result": [
        {
          "name": "view_name",
          "type": "vtss_appl_snmp_view_conf_t"
        }
      ]
    },
    {
      "method-name": "snmp.config.views.get",
      "description": "This is an overload of snmp.config.views.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "snmp.config.views",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "view_key",
                  "type": "vtss_appl_snmp_view_index_t"
                },
                {
                  "name": "val",
                  "semantic-name": "view_name",
                  "type": "vtss_appl_snmp_view_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "snmp.config.views.set",
      "group-name": "snmp.config.views",
      "params": [
        {
          "name": "view_key",
          "type": "vtss_appl_snmp_view_index_t"
        },
        {
          "name": "view_name",
          "type": "vtss_appl_snmp_view_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "snmp.config.views.add",
      "group-name": "snmp.config.views",
      "params": [
        {
          "name": "view_key",
          "type": "vtss_appl_snmp_view_index_t"
        },
        {
          "name": "view_name",
          "type": "vtss_appl_snmp_view_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "snmp.config.views.del",
      "group-name": "snmp.config.views",
      "params": [
        {
          "name": "view_key",
          "type": "vtss_appl_snmp_view_index_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "rmon.config.ether-stats.get",
      "group-name": "rmon.config.ether-stats",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_bool_t"
        }
      ]
    },
    {
      "method-name": "rmon.config.ether-stats.get",
      "description": "This is an overload of rmon.config.ether-stats.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "rmon.config.ether-stats",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_bool_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "rmon.config.ether-stats.set",
      "group-name": "rmon.config.ether-stats",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_bool_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "rmon.config.ether-stats.add",
      "group-name": "rmon.config.ether-stats",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_bool_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "rmon.config.ether-stats.del",
      "group-name": "rmon.config.ether-stats",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "rmon.config.history.get",
      "group-name": "rmon.config.history",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_history_entry_t"
        }
      ]
    },
    {
      "method-name": "rmon.config.history.get",
      "description": "This is an overload of rmon.config.history.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "rmon.config.history",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_history_entry_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "rmon.config.history.set",
      "group-name": "rmon.config.history",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_history_entry_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "rmon.config.history.add",
      "group-name": "rmon.config.history",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_history_entry_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "rmon.config.history.del",
      "group-name": "rmon.config.history",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "rmon.config.alarm.get",
      "group-name": "rmon.config.alarm",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_alarm_ctrl_entry_t"
        }
      ]
    },
    {
      "method-name": "rmon.config.alarm.get",
      "description": "This is an overload of rmon.config.alarm.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "rmon.config.alarm",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_alarm_ctrl_entry_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "rmon.config.alarm.set",
      "group-name": "rmon.config.alarm",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_alarm_ctrl_entry_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "rmon.config.alarm.add",
      "group-name": "rmon.config.alarm",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_alarm_ctrl_entry_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "rmon.config.alarm.del",
      "group-name": "rmon.config.alarm",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "rmon.config.event.get",
      "group-name": "rmon.config.event",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_event_entry_t"
        }
      ]
    },
    {
      "method-name": "rmon.config.event.get",
      "description": "This is an overload of rmon.config.event.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "rmon.config.event",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_event_entry_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "rmon.config.event.set",
      "group-name": "rmon.config.event",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_event_entry_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "rmon.config.event.add",
      "group-name": "rmon.config.event",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_event_entry_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "rmon.config.event.del",
      "group-name": "rmon.config.event",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "rmon.status.history.get",
      "group-name": "rmon.status.history",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_history_status_t"
        }
      ]
    },
    {
      "method-name": "rmon.status.history.get",
      "description": "This is an overload of rmon.status.history.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "rmon.status.history",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_history_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "rmon.status.event.get",
      "group-name": "rmon.status.event",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        },
        {
          "name": "Argument2",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_event_data_t"
        }
      ]
    },
    {
      "method-name": "rmon.status.event.get",
      "description": "This is an overload of rmon.status.event.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "rmon.status.event",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "uint32_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "uint32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_event_data_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "rmon.status.event-last-sent.get",
      "group-name": "rmon.status.event-last-sent",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "uint32_t"
        }
      ]
    },
    {
      "method-name": "rmon.status.event-last-sent.get",
      "description": "This is an overload of rmon.status.event-last-sent.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "rmon.status.event-last-sent",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "uint32_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "rmon.status.alarm.get",
      "group-name": "rmon.status.alarm",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_alarm_value_t"
        }
      ]
    },
    {
      "method-name": "rmon.status.alarm.get",
      "description": "This is an overload of rmon.status.alarm.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "rmon.status.alarm",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_alarm_value_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "rmon.statistics.ether-stats.get",
      "group-name": "rmon.statistics.ether-stats",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_stat_ctrl_entry_t"
        }
      ]
    },
    {
      "method-name": "rmon.statistics.ether-stats.get",
      "description": "This is an overload of rmon.statistics.ether-stats.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "rmon.statistics.ether-stats",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_stat_ctrl_entry_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "rmon.statistics.history.get",
      "group-name": "rmon.statistics.history",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        },
        {
          "name": "Argument2",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_history_statistics_t"
        }
      ]
    },
    {
      "method-name": "rmon.statistics.history.get",
      "description": "This is an overload of rmon.statistics.history.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "rmon.statistics.history",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "uint32_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "uint32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_history_statistics_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "dns.config.global.proxy.get",
      "params": [

      ],
      "result": [
        {
          "name": "proxy_config",
          "type": "vtss_appl_dns_proxy_conf_t"
        }
      ]
    },
    {
      "method-name": "dns.config.global.proxy.set",
      "params": [
        {
          "name": "proxy_config",
          "type": "vtss_appl_dns_proxy_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dns.config.global.domain-name.get",
      "params": [

      ],
      "result": [
        {
          "name": "domainname_config",
          "type": "vtss_appl_dns_name_conf_t"
        }
      ]
    },
    {
      "method-name": "dns.config.global.domain-name.set",
      "params": [
        {
          "name": "domainname_config",
          "type": "vtss_appl_dns_name_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dns.config.server.get",
      "group-name": "dns.config.server",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "server_config",
          "type": "vtss_appl_dns_server_conf_t"
        }
      ]
    },
    {
      "method-name": "dns.config.server.get",
      "description": "This is an overload of dns.config.server.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "dns.config.server",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "server_config",
                  "type": "vtss_appl_dns_server_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "dns.config.server.set",
      "group-name": "dns.config.server",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        },
        {
          "name": "server_config",
          "type": "vtss_appl_dns_server_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dns.status.global.default-domain-name.get",
      "params": [

      ],
      "result": [
        {
          "name": "default_domain_name",
          "type": "vtss_appl_dns_domainname_status_t"
        }
      ]
    },
    {
      "method-name": "dns.status.server.get",
      "group-name": "dns.status.server",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "server_status",
          "type": "vtss_appl_dns_server_status_t"
        }
      ]
    },
    {
      "method-name": "dns.status.server.get",
      "description": "This is an overload of dns.status.server.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "dns.status.server",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "server_status",
                  "type": "vtss_appl_dns_server_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "https.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_https_param_t"
        }
      ]
    },
    {
      "method-name": "https.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_https_param_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ssh.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ssh_conf_t"
        }
      ]
    },
    {
      "method-name": "ssh.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ssh_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "authentication.config.agent.console.authen.get",
      "group-name": "authentication.config.agent.console.authen",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_auth_authen_method_t"
        }
      ]
    },
    {
      "method-name": "authentication.config.agent.console.authen.get",
      "description": "This is an overload of authentication.config.agent.console.authen.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "authentication.config.agent.console.authen",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_auth_authen_method_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "authentication.config.agent.console.authen.set",
      "group-name": "authentication.config.agent.console.authen",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_auth_authen_method_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "authentication.config.agent.console.author.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_auth_author_agent_conf_t"
        }
      ]
    },
    {
      "method-name": "authentication.config.agent.console.author.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_auth_author_agent_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "authentication.config.agent.console.acct.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_auth_acct_agent_conf_t"
        }
      ]
    },
    {
      "method-name": "authentication.config.agent.console.acct.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_auth_acct_agent_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "authentication.config.agent.telnet.authen.get",
      "group-name": "authentication.config.agent.telnet.authen",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_auth_authen_method_t"
        }
      ]
    },
    {
      "method-name": "authentication.config.agent.telnet.authen.get",
      "description": "This is an overload of authentication.config.agent.telnet.authen.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "authentication.config.agent.telnet.authen",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_auth_authen_method_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "authentication.config.agent.telnet.authen.set",
      "group-name": "authentication.config.agent.telnet.authen",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_auth_authen_method_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "authentication.config.agent.telnet.author.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_auth_author_agent_conf_t"
        }
      ]
    },
    {
      "method-name": "authentication.config.agent.telnet.author.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_auth_author_agent_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "authentication.config.agent.telnet.acct.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_auth_acct_agent_conf_t"
        }
      ]
    },
    {
      "method-name": "authentication.config.agent.telnet.acct.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_auth_acct_agent_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "authentication.config.agent.ssh.authen.get",
      "group-name": "authentication.config.agent.ssh.authen",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_auth_authen_method_t"
        }
      ]
    },
    {
      "method-name": "authentication.config.agent.ssh.authen.get",
      "description": "This is an overload of authentication.config.agent.ssh.authen.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "authentication.config.agent.ssh.authen",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_auth_authen_method_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "authentication.config.agent.ssh.authen.set",
      "group-name": "authentication.config.agent.ssh.authen",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_auth_authen_method_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "authentication.config.agent.ssh.author.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_auth_author_agent_conf_t"
        }
      ]
    },
    {
      "method-name": "authentication.config.agent.ssh.author.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_auth_author_agent_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "authentication.config.agent.ssh.acct.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_auth_acct_agent_conf_t"
        }
      ]
    },
    {
      "method-name": "authentication.config.agent.ssh.acct.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_auth_acct_agent_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "authentication.config.agent.http.authen.get",
      "group-name": "authentication.config.agent.http.authen",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_auth_authen_method_t"
        }
      ]
    },
    {
      "method-name": "authentication.config.agent.http.authen.get",
      "description": "This is an overload of authentication.config.agent.http.authen.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "authentication.config.agent.http.authen",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_auth_authen_method_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "authentication.config.agent.http.authen.set",
      "group-name": "authentication.config.agent.http.authen",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_auth_authen_method_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "authentication.config.radius.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_auth_radius_global_conf_t"
        }
      ]
    },
    {
      "method-name": "authentication.config.radius.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_auth_radius_global_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "authentication.config.radius.host.get",
      "group-name": "authentication.config.radius.host",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_auth_radius_server_conf_t"
        }
      ]
    },
    {
      "method-name": "authentication.config.radius.host.get",
      "description": "This is an overload of authentication.config.radius.host.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "authentication.config.radius.host",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_auth_radius_server_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "authentication.config.radius.host.set",
      "group-name": "authentication.config.radius.host",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_auth_radius_server_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "authentication.config.tacacs.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_auth_tacacs_global_conf_t"
        }
      ]
    },
    {
      "method-name": "authentication.config.tacacs.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_auth_tacacs_global_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "authentication.config.tacacs.host.get",
      "group-name": "authentication.config.tacacs.host",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_auth_tacacs_server_conf_t"
        }
      ]
    },
    {
      "method-name": "authentication.config.tacacs.host.get",
      "description": "This is an overload of authentication.config.tacacs.host.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "authentication.config.tacacs.host",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_auth_tacacs_server_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "authentication.config.tacacs.host.set",
      "group-name": "authentication.config.tacacs.host",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_auth_tacacs_server_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "upnp.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "global_config",
          "type": "vtss_appl_upnp_param_t"
        }
      ]
    },
    {
      "method-name": "upnp.config.global.set",
      "params": [
        {
          "name": "global_config",
          "type": "vtss_appl_upnp_param_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dhcp-snooping.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_dhcp_snooping_param_t"
        }
      ]
    },
    {
      "method-name": "dhcp-snooping.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_dhcp_snooping_param_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dhcp-snooping.config.interface.get",
      "group-name": "dhcp-snooping.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_dhcp_snooping_port_config_t"
        }
      ]
    },
    {
      "method-name": "dhcp-snooping.config.interface.get",
      "description": "This is an overload of dhcp-snooping.config.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "dhcp-snooping.config.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_dhcp_snooping_port_config_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "dhcp-snooping.config.interface.set",
      "group-name": "dhcp-snooping.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_dhcp_snooping_port_config_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dhcp-snooping.status.assigned-ip.get",
      "group-name": "dhcp-snooping.status.assigned-ip",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_mac_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_dhcp_snooping_assigned_ip_t"
        }
      ]
    },
    {
      "method-name": "dhcp-snooping.status.assigned-ip.get",
      "description": "This is an overload of dhcp-snooping.status.assigned-ip.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "dhcp-snooping.status.assigned-ip",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_mac_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_dhcp_snooping_assigned_ip_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "dhcp-snooping.control.statistics.interface.clear.set",
      "group-name": "dhcp-snooping.control.statistics.interface.clear",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_dhcp_snooping_clear_port_statistics_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dhcp-snooping.statistics.interface.get",
      "group-name": "dhcp-snooping.statistics.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_dhcp_snooping_port_statistics_t"
        }
      ]
    },
    {
      "method-name": "dhcp-snooping.statistics.interface.get",
      "description": "This is an overload of dhcp-snooping.statistics.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "dhcp-snooping.statistics.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_dhcp_snooping_port_statistics_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "dhcp-relay.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_dhcp_relay_param_t"
        }
      ]
    },
    {
      "method-name": "dhcp-relay.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_dhcp_relay_param_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dhcp-relay.control.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_dhcp_relay_control_t"
        }
      ]
    },
    {
      "method-name": "dhcp-relay.statistics.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_dhcp_relay_statistics_t"
        }
      ]
    },
    {
      "method-name": "ntp.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_bool_t"
        }
      ]
    },
    {
      "method-name": "ntp.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_bool_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ntp.config.servers.get",
      "group-name": "ntp.config.servers",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_inet_address_t"
        }
      ]
    },
    {
      "method-name": "ntp.config.servers.get",
      "description": "This is an overload of ntp.config.servers.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ntp.config.servers",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_inet_address_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ntp.config.servers.set",
      "group-name": "ntp.config.servers",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_inet_address_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "users.config.global.get",
      "group-name": "users.config.global",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_users_config_t"
        }
      ]
    },
    {
      "method-name": "users.config.global.get",
      "description": "This is an overload of users.config.global.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "users.config.global",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "char *"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_users_config_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "users.config.global.set",
      "group-name": "users.config.global",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_users_config_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "users.config.global.add",
      "group-name": "users.config.global",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_users_config_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "users.config.global.del",
      "group-name": "users.config.global",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "privilege.config.web.get",
      "group-name": "privilege.config.web",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_privilege_config_web_t"
        }
      ]
    },
    {
      "method-name": "privilege.config.web.get",
      "description": "This is an overload of privilege.config.web.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "privilege.config.web",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "char *"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_privilege_config_web_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "privilege.config.web.set",
      "group-name": "privilege.config.web",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_privilege_config_web_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "arp-inspection.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_arp_inspection_conf_t"
        }
      ]
    },
    {
      "method-name": "arp-inspection.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_arp_inspection_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "arp-inspection.config.interface.get",
      "group-name": "arp-inspection.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_arp_inspection_port_config_t"
        }
      ]
    },
    {
      "method-name": "arp-inspection.config.interface.get",
      "description": "This is an overload of arp-inspection.config.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "arp-inspection.config.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_arp_inspection_port_config_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "arp-inspection.config.interface.set",
      "group-name": "arp-inspection.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_arp_inspection_port_config_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "arp-inspection.config.vlan.get",
      "group-name": "arp-inspection.config.vlan",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_arp_inspection_vlan_config_t"
        }
      ]
    },
    {
      "method-name": "arp-inspection.config.vlan.get",
      "description": "This is an overload of arp-inspection.config.vlan.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "arp-inspection.config.vlan",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_arp_inspection_vlan_config_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "arp-inspection.config.vlan.set",
      "group-name": "arp-inspection.config.vlan",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_arp_inspection_vlan_config_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "arp-inspection.config.vlan.add",
      "group-name": "arp-inspection.config.vlan",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_arp_inspection_vlan_config_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "arp-inspection.config.vlan.del",
      "group-name": "arp-inspection.config.vlan",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "arp-inspection.config.static.get",
      "group-name": "arp-inspection.config.static",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_mac_t"
        },
        {
          "name": "Argument4",
          "type": "vtss_ipv4_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "arp-inspection.config.static.get",
      "description": "This is an overload of arp-inspection.config.static.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "arp-inspection.config.static",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument3",
                        "type": "vtss_mac_t"
                      },
                      {
                        "name": "Argument4",
                        "type": "vtss_ipv4_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "type": null
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "arp-inspection.config.static.set",
      "group-name": "arp-inspection.config.static",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_mac_t"
        },
        {
          "name": "Argument4",
          "type": "vtss_ipv4_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "arp-inspection.config.static.add",
      "group-name": "arp-inspection.config.static",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_mac_t"
        },
        {
          "name": "Argument4",
          "type": "vtss_ipv4_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "arp-inspection.config.static.del",
      "group-name": "arp-inspection.config.static",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_mac_t"
        },
        {
          "name": "Argument4",
          "type": "vtss_ipv4_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "arp-inspection.status.dynamic.get",
      "group-name": "arp-inspection.status.dynamic",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_mac_t"
        },
        {
          "name": "Argument4",
          "type": "vtss_ipv4_t"
        }
      ],
      "result": [
        {
          "name": "Argument5",
          "type": "vtss_appl_arp_inspection_entry_t"
        }
      ]
    },
    {
      "method-name": "arp-inspection.status.dynamic.get",
      "description": "This is an overload of arp-inspection.status.dynamic.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "arp-inspection.status.dynamic",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      },
                      {
                        "name": "Argument3",
                        "type": "vtss_mac_t"
                      },
                      {
                        "name": "Argument4",
                        "type": "vtss_ipv4_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument5",
                  "type": "vtss_appl_arp_inspection_entry_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "arp-inspection.status.crossed-threshold.get",
      "notification": "arp-inspection.status.crossed-threshold.update",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_arp_inspection_status_event_t"
        }
      ]
    },
    {
      "method-name": "arp-inspection.control.translate.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_bool_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip-source-guard.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ip_source_guard_global_config_t"
        }
      ]
    },
    {
      "method-name": "ip-source-guard.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ip_source_guard_global_config_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip-source-guard.config.interface.get",
      "group-name": "ip-source-guard.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_ip_source_guard_port_config_t"
        }
      ]
    },
    {
      "method-name": "ip-source-guard.config.interface.get",
      "description": "This is an overload of ip-source-guard.config.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ip-source-guard.config.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_ip_source_guard_port_config_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ip-source-guard.config.interface.set",
      "group-name": "ip-source-guard.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_ip_source_guard_port_config_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip-source-guard.config.static.get",
      "group-name": "ip-source-guard.config.static",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ip_source_guard_static_index_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_ip_source_guard_static_config_t"
        }
      ]
    },
    {
      "method-name": "ip-source-guard.config.static.get",
      "description": "This is an overload of ip-source-guard.config.static.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ip-source-guard.config.static",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_appl_ip_source_guard_static_index_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_ip_source_guard_static_config_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ip-source-guard.config.static.set",
      "group-name": "ip-source-guard.config.static",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ip_source_guard_static_index_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_ip_source_guard_static_config_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip-source-guard.config.static.add",
      "group-name": "ip-source-guard.config.static",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ip_source_guard_static_index_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_ip_source_guard_static_config_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip-source-guard.config.static.del",
      "group-name": "ip-source-guard.config.static",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ip_source_guard_static_index_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip-source-guard.status.dynamic.get",
      "group-name": "ip-source-guard.status.dynamic",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ip_source_guard_dynamic_index_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_ip_source_guard_dynamic_status_t"
        }
      ]
    },
    {
      "method-name": "ip-source-guard.status.dynamic.get",
      "description": "This is an overload of ip-source-guard.status.dynamic.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ip-source-guard.status.dynamic",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_appl_ip_source_guard_dynamic_index_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_ip_source_guard_dynamic_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ip-source-guard.control.translate.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ip_source_guard_control_translate_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ip-source-guard.capabilities.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ip_source_guard_capabilities_t"
        }
      ]
    },
    {
      "method-name": "ipmc-profile.config.address-range.ipv4.get",
      "group-name": "ipmc-profile.config.address-range.ipv4",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_profile_ipv4_range_t"
        }
      ]
    },
    {
      "method-name": "ipmc-profile.config.address-range.ipv4.get",
      "description": "This is an overload of ipmc-profile.config.address-range.ipv4.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ipmc-profile.config.address-range.ipv4",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "char *"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_ipmc_profile_ipv4_range_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ipmc-profile.config.address-range.ipv4.set",
      "group-name": "ipmc-profile.config.address-range.ipv4",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_profile_ipv4_range_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-profile.config.address-range.ipv4.add",
      "group-name": "ipmc-profile.config.address-range.ipv4",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_profile_ipv4_range_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-profile.config.address-range.ipv4.del",
      "group-name": "ipmc-profile.config.address-range.ipv4",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-profile.config.address-range.ipv6.get",
      "group-name": "ipmc-profile.config.address-range.ipv6",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_profile_ipv6_range_t"
        }
      ]
    },
    {
      "method-name": "ipmc-profile.config.address-range.ipv6.get",
      "description": "This is an overload of ipmc-profile.config.address-range.ipv6.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ipmc-profile.config.address-range.ipv6",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "char *"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_ipmc_profile_ipv6_range_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ipmc-profile.config.address-range.ipv6.set",
      "group-name": "ipmc-profile.config.address-range.ipv6",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_profile_ipv6_range_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-profile.config.address-range.ipv6.add",
      "group-name": "ipmc-profile.config.address-range.ipv6",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_profile_ipv6_range_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-profile.config.address-range.ipv6.del",
      "group-name": "ipmc-profile.config.address-range.ipv6",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-profile.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ipmc_profile_global_t"
        }
      ]
    },
    {
      "method-name": "ipmc-profile.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ipmc_profile_global_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-profile.config.management.get",
      "group-name": "ipmc-profile.config.management",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_profile_mgmt_t"
        }
      ]
    },
    {
      "method-name": "ipmc-profile.config.management.get",
      "description": "This is an overload of ipmc-profile.config.management.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ipmc-profile.config.management",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "char *"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_ipmc_profile_mgmt_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ipmc-profile.config.management.set",
      "group-name": "ipmc-profile.config.management",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_profile_mgmt_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-profile.config.management.add",
      "group-name": "ipmc-profile.config.management",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_profile_mgmt_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-profile.config.management.del",
      "group-name": "ipmc-profile.config.management",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-profile.config.rule.get",
      "group-name": "ipmc-profile.config.rule",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "char *"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_ipmc_profile_rule_t"
        }
      ]
    },
    {
      "method-name": "ipmc-profile.config.rule.get",
      "description": "This is an overload of ipmc-profile.config.rule.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ipmc-profile.config.rule",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "char *"
                      },
                      {
                        "name": "Argument2",
                        "type": "char *"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_ipmc_profile_rule_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ipmc-profile.config.rule.set",
      "group-name": "ipmc-profile.config.rule",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "char *"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_ipmc_profile_rule_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-profile.config.rule.add",
      "group-name": "ipmc-profile.config.rule",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "char *"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_ipmc_profile_rule_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-profile.config.rule.del",
      "group-name": "ipmc-profile.config.rule",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "char *"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-profile.config.precedence.get",
      "group-name": "ipmc-profile.config.precedence",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_ipmc_profile_precedence_t"
        }
      ]
    },
    {
      "method-name": "ipmc-profile.config.precedence.get",
      "description": "This is an overload of ipmc-profile.config.precedence.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ipmc-profile.config.precedence",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "char *"
                      },
                      {
                        "name": "Argument2",
                        "type": "int32_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_ipmc_profile_precedence_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mvr.config.interface.port.get",
      "group-name": "mvr.config.interface.port",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_mvr_port_conf_t"
        }
      ]
    },
    {
      "method-name": "mvr.config.interface.port.get",
      "description": "This is an overload of mvr.config.interface.port.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mvr.config.interface.port",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_ipmc_mvr_port_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mvr.config.interface.port.set",
      "group-name": "mvr.config.interface.port",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_mvr_port_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mvr.config.interface.vlan.get",
      "group-name": "mvr.config.interface.vlan",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_mvr_interface_t"
        }
      ]
    },
    {
      "method-name": "mvr.config.interface.vlan.get",
      "description": "This is an overload of mvr.config.interface.vlan.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mvr.config.interface.vlan",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_ipmc_mvr_interface_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mvr.config.interface.vlan.set",
      "group-name": "mvr.config.interface.vlan",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_mvr_interface_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mvr.config.interface.vlan.add",
      "group-name": "mvr.config.interface.vlan",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_mvr_interface_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mvr.config.interface.vlan.del",
      "group-name": "mvr.config.interface.vlan",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mvr.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ipmc_mvr_global_t"
        }
      ]
    },
    {
      "method-name": "mvr.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ipmc_mvr_global_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mvr.config.vlan-port.get",
      "group-name": "mvr.config.vlan-port",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_ipmc_mvr_intf_port_t"
        }
      ]
    },
    {
      "method-name": "mvr.config.vlan-port.get",
      "description": "This is an overload of mvr.config.vlan-port.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mvr.config.vlan-port",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "vtss_ifindex_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_ipmc_mvr_intf_port_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mvr.config.vlan-port.set",
      "group-name": "mvr.config.vlan-port",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_ipmc_mvr_intf_port_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mvr.status.igmp.group.address.get",
      "group-name": "mvr.status.igmp.group.address",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ipv4_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_ipmc_mvr_grp_address_t"
        }
      ]
    },
    {
      "method-name": "mvr.status.igmp.group.address.get",
      "description": "This is an overload of mvr.status.igmp.group.address.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mvr.status.igmp.group.address",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "vtss_ipv4_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_ipmc_mvr_grp_address_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mvr.status.igmp.group.src-list.get",
      "group-name": "mvr.status.igmp.group.src-list",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ipv4_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument4",
          "type": "vtss_ipv4_t"
        }
      ],
      "result": [
        {
          "name": "Argument5",
          "type": "vtss_appl_ipmc_mvr_grp_srclist_t"
        }
      ]
    },
    {
      "method-name": "mvr.status.igmp.group.src-list.get",
      "description": "This is an overload of mvr.status.igmp.group.src-list.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mvr.status.igmp.group.src-list",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "vtss_ipv4_t"
                      },
                      {
                        "name": "Argument3",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument4",
                        "type": "vtss_ipv4_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument5",
                  "type": "vtss_appl_ipmc_mvr_grp_srclist_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mvr.status.igmp.vlan.get",
      "group-name": "mvr.status.igmp.vlan",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_mvr_intf_ipv4_status_t"
        }
      ]
    },
    {
      "method-name": "mvr.status.igmp.vlan.get",
      "description": "This is an overload of mvr.status.igmp.vlan.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mvr.status.igmp.vlan",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_ipmc_mvr_intf_ipv4_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mvr.status.mld.group.address.get",
      "group-name": "mvr.status.mld.group.address",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ipv6_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_ipmc_mvr_grp_address_t"
        }
      ]
    },
    {
      "method-name": "mvr.status.mld.group.address.get",
      "description": "This is an overload of mvr.status.mld.group.address.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mvr.status.mld.group.address",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "vtss_ipv6_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_ipmc_mvr_grp_address_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mvr.status.mld.group.src-list.get",
      "group-name": "mvr.status.mld.group.src-list",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ipv6_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument4",
          "type": "vtss_ipv6_t"
        }
      ],
      "result": [
        {
          "name": "Argument5",
          "type": "vtss_appl_ipmc_mvr_grp_srclist_t"
        }
      ]
    },
    {
      "method-name": "mvr.status.mld.group.src-list.get",
      "description": "This is an overload of mvr.status.mld.group.src-list.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mvr.status.mld.group.src-list",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "vtss_ipv6_t"
                      },
                      {
                        "name": "Argument3",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument4",
                        "type": "vtss_ipv6_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument5",
                  "type": "vtss_appl_ipmc_mvr_grp_srclist_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mvr.status.mld.vlan.get",
      "group-name": "mvr.status.mld.vlan",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_mvr_intf_ipv6_status_t"
        }
      ]
    },
    {
      "method-name": "mvr.status.mld.vlan.get",
      "description": "This is an overload of mvr.status.mld.vlan.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mvr.status.mld.vlan",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_ipmc_mvr_intf_ipv6_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mvr.status.group-address-count.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ipmc_mvr_grp_adrs_cnt_t"
        }
      ]
    },
    {
      "method-name": "mvr.control.statistics.clear.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-snooping.config.igmp.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ipmc_snp_ipv4_global_t"
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.config.igmp.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ipmc_snp_ipv4_global_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-snooping.config.mld.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ipmc_snp_ipv6_global_t"
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.config.mld.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ipmc_snp_ipv6_global_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-snooping.config.interface.port.get",
      "group-name": "ipmc-snooping.config.interface.port",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_snp4_port_conf_t"
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.config.interface.port.get",
      "description": "This is an overload of ipmc-snooping.config.interface.port.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ipmc-snooping.config.interface.port",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_ipmc_snp4_port_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.config.interface.port.set",
      "group-name": "ipmc-snooping.config.interface.port",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_snp4_port_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-snooping.config.interface.vlan.get",
      "group-name": "ipmc-snooping.config.interface.vlan",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_snp_ipv4_interface_t"
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.config.interface.vlan.get",
      "description": "This is an overload of ipmc-snooping.config.interface.vlan.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ipmc-snooping.config.interface.vlan",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_ipmc_snp_ipv4_interface_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.config.interface.vlan.set",
      "group-name": "ipmc-snooping.config.interface.vlan",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_snp_ipv4_interface_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-snooping.config.interface.vlan.add",
      "group-name": "ipmc-snooping.config.interface.vlan",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_snp_ipv4_interface_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-snooping.config.interface.vlan.del",
      "group-name": "ipmc-snooping.config.interface.vlan",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-snooping.config.interface.port.get",
      "group-name": "ipmc-snooping.config.interface.port",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_snp6_port_conf_t"
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.config.interface.port.get",
      "description": "This is an overload of ipmc-snooping.config.interface.port.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ipmc-snooping.config.interface.port",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_ipmc_snp6_port_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.config.interface.port.set",
      "group-name": "ipmc-snooping.config.interface.port",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_snp6_port_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-snooping.status.igmp.router-port.get",
      "group-name": "ipmc-snooping.status.igmp.router-port",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_snp4_mrouter_t"
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.status.igmp.router-port.get",
      "description": "This is an overload of ipmc-snooping.status.igmp.router-port.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ipmc-snooping.status.igmp.router-port",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_ipmc_snp4_mrouter_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.status.igmp.vlan.get",
      "group-name": "ipmc-snooping.status.igmp.vlan",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_snp_ipv4_intf_status_t"
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.status.igmp.vlan.get",
      "description": "This is an overload of ipmc-snooping.status.igmp.vlan.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ipmc-snooping.status.igmp.vlan",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_ipmc_snp_ipv4_intf_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.status.igmp.group-address.get",
      "group-name": "ipmc-snooping.status.igmp.group-address",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ipv4_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_ipmc_snp_grp4_address_t"
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.status.igmp.group-address.get",
      "description": "This is an overload of ipmc-snooping.status.igmp.group-address.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ipmc-snooping.status.igmp.group-address",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "vtss_ipv4_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_ipmc_snp_grp4_address_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.status.igmp.group-src-list.get",
      "group-name": "ipmc-snooping.status.igmp.group-src-list",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ipv4_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument4",
          "type": "vtss_ipv4_t"
        }
      ],
      "result": [
        {
          "name": "Argument5",
          "type": "vtss_appl_ipmc_snp_grp4_srclist_t"
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.status.igmp.group-src-list.get",
      "description": "This is an overload of ipmc-snooping.status.igmp.group-src-list.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ipmc-snooping.status.igmp.group-src-list",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "vtss_ipv4_t"
                      },
                      {
                        "name": "Argument3",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument4",
                        "type": "vtss_ipv4_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument5",
                  "type": "vtss_appl_ipmc_snp_grp4_srclist_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.status.mld.router-port.get",
      "group-name": "ipmc-snooping.status.mld.router-port",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_snp6_mrouter_t"
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.status.mld.router-port.get",
      "description": "This is an overload of ipmc-snooping.status.mld.router-port.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ipmc-snooping.status.mld.router-port",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_ipmc_snp6_mrouter_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.status.mld.vlan.get",
      "group-name": "ipmc-snooping.status.mld.vlan",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_ipmc_snp_ipv6_intf_status_t"
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.status.mld.vlan.get",
      "description": "This is an overload of ipmc-snooping.status.mld.vlan.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ipmc-snooping.status.mld.vlan",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_ipmc_snp_ipv6_intf_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.status.mld.group-address.get",
      "group-name": "ipmc-snooping.status.mld.group-address",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ipv6_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_ipmc_snp_grp6_address_t"
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.status.mld.group-address.get",
      "description": "This is an overload of ipmc-snooping.status.mld.group-address.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ipmc-snooping.status.mld.group-address",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "vtss_ipv6_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_ipmc_snp_grp6_address_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.status.mld.group-src-list.get",
      "group-name": "ipmc-snooping.status.mld.group-src-list",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ipv6_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument4",
          "type": "vtss_ipv6_t"
        }
      ],
      "result": [
        {
          "name": "Argument5",
          "type": "vtss_appl_ipmc_snp_grp6_srclist_t"
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.status.mld.group-src-list.get",
      "description": "This is an overload of ipmc-snooping.status.mld.group-src-list.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ipmc-snooping.status.mld.group-src-list",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "vtss_ipv6_t"
                      },
                      {
                        "name": "Argument3",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument4",
                        "type": "vtss_ipv6_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument5",
                  "type": "vtss_appl_ipmc_snp_grp6_srclist_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.status.group-address-count.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ipmc_snp_grp_adrs_cnt_t"
        }
      ]
    },
    {
      "method-name": "ipmc-snooping.control.statistics.igmp.interface.clear.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ipmc-snooping.control.statistics.mld.interface.clear.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "voice-vlan.capabilities.get",
      "params": [

      ],
      "result": [
        {
          "name": "capability",
          "type": "vtss_appl_voice_vlan_capabilities_t"
        }
      ]
    },
    {
      "method-name": "voice-vlan.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "global_conf",
          "type": "vtss_appl_voice_vlan_global_conf_t"
        }
      ]
    },
    {
      "method-name": "voice-vlan.config.global.set",
      "params": [
        {
          "name": "global_conf",
          "type": "vtss_appl_voice_vlan_global_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "voice-vlan.config.interface.get",
      "group-name": "voice-vlan.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "port_conf",
          "type": "vtss_appl_voice_vlan_port_conf_t"
        }
      ]
    },
    {
      "method-name": "voice-vlan.config.interface.get",
      "description": "This is an overload of voice-vlan.config.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "voice-vlan.config.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "port_conf",
                  "type": "vtss_appl_voice_vlan_port_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "voice-vlan.config.interface.set",
      "group-name": "voice-vlan.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "port_conf",
          "type": "vtss_appl_voice_vlan_port_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "voice-vlan.config.oui.get",
      "group-name": "voice-vlan.config.oui",
      "params": [
        {
          "name": "oui_index",
          "type": "vtss_appl_voice_vlan_oui_index_t"
        }
      ],
      "result": [
        {
          "name": "oui_conf",
          "type": "vtss_appl_voice_vlan_telephony_oui_conf_t"
        }
      ]
    },
    {
      "method-name": "voice-vlan.config.oui.get",
      "description": "This is an overload of voice-vlan.config.oui.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "voice-vlan.config.oui",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "oui_index",
                  "type": "vtss_appl_voice_vlan_oui_index_t"
                },
                {
                  "name": "val",
                  "semantic-name": "oui_conf",
                  "type": "vtss_appl_voice_vlan_telephony_oui_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "voice-vlan.config.oui.set",
      "group-name": "voice-vlan.config.oui",
      "params": [
        {
          "name": "oui_index",
          "type": "vtss_appl_voice_vlan_oui_index_t"
        },
        {
          "name": "oui_conf",
          "type": "vtss_appl_voice_vlan_telephony_oui_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "voice-vlan.config.oui.add",
      "group-name": "voice-vlan.config.oui",
      "params": [
        {
          "name": "oui_index",
          "type": "vtss_appl_voice_vlan_oui_index_t"
        },
        {
          "name": "oui_conf",
          "type": "vtss_appl_voice_vlan_telephony_oui_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "voice-vlan.config.oui.del",
      "group-name": "voice-vlan.config.oui",
      "params": [
        {
          "name": "oui_index",
          "type": "vtss_appl_voice_vlan_oui_index_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "erps.capabilities.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_erps_capabilities_t"
        }
      ]
    },
    {
      "method-name": "erps.config.get",
      "group-name": "erps.config",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_erps_conf_t"
        }
      ]
    },
    {
      "method-name": "erps.config.get",
      "description": "This is an overload of erps.config.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "erps.config",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_erps_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "erps.config.set",
      "group-name": "erps.config",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_erps_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "erps.config.add",
      "group-name": "erps.config",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_erps_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "erps.config.del",
      "group-name": "erps.config",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "erps.status.get",
      "group-name": "erps.status",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_erps_status_t"
        }
      ]
    },
    {
      "method-name": "erps.status.get",
      "description": "This is an overload of erps.status.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "erps.status",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_erps_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "erps.statistics.get",
      "group-name": "erps.statistics",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_erps_statistics_t"
        }
      ]
    },
    {
      "method-name": "erps.statistics.get",
      "description": "This is an overload of erps.statistics.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "erps.statistics",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_erps_statistics_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "erps.control.get",
      "group-name": "erps.control",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_erps_control_t"
        }
      ]
    },
    {
      "method-name": "erps.control.get",
      "description": "This is an overload of erps.control.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "erps.control",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_erps_control_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "erps.control.set",
      "group-name": "erps.control",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_erps_control_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ethernet-link-oam.capabilities.interface.get",
      "group-name": "ethernet-link-oam.capabilities.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_eth_link_oam_port_capabilities_t"
        }
      ]
    },
    {
      "method-name": "ethernet-link-oam.capabilities.interface.get",
      "description": "This is an overload of ethernet-link-oam.capabilities.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ethernet-link-oam.capabilities.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_eth_link_oam_port_capabilities_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ethernet-link-oam.config.interface.get",
      "group-name": "ethernet-link-oam.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_eth_link_oam_port_conf_t"
        }
      ]
    },
    {
      "method-name": "ethernet-link-oam.config.interface.get",
      "description": "This is an overload of ethernet-link-oam.config.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ethernet-link-oam.config.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_eth_link_oam_port_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ethernet-link-oam.config.interface.set",
      "group-name": "ethernet-link-oam.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_eth_link_oam_port_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ethernet-link-oam.config.interface.event.get",
      "group-name": "ethernet-link-oam.config.interface.event",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_eth_link_oam_port_event_conf_t"
        }
      ]
    },
    {
      "method-name": "ethernet-link-oam.config.interface.event.get",
      "description": "This is an overload of ethernet-link-oam.config.interface.event.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ethernet-link-oam.config.interface.event",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_eth_link_oam_port_event_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ethernet-link-oam.config.interface.event.set",
      "group-name": "ethernet-link-oam.config.interface.event",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_eth_link_oam_port_event_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ethernet-link-oam.config.interface.loopback-test.get",
      "group-name": "ethernet-link-oam.config.interface.loopback-test",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_eth_link_oam_remote_loopback_test_t"
        }
      ]
    },
    {
      "method-name": "ethernet-link-oam.config.interface.loopback-test.get",
      "description": "This is an overload of ethernet-link-oam.config.interface.loopback-test.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ethernet-link-oam.config.interface.loopback-test",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_eth_link_oam_remote_loopback_test_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ethernet-link-oam.config.interface.loopback-test.set",
      "group-name": "ethernet-link-oam.config.interface.loopback-test",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_eth_link_oam_remote_loopback_test_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ethernet-link-oam.status.interface.get",
      "group-name": "ethernet-link-oam.status.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_eth_link_oam_port_status_t"
        }
      ]
    },
    {
      "method-name": "ethernet-link-oam.status.interface.get",
      "description": "This is an overload of ethernet-link-oam.status.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ethernet-link-oam.status.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_eth_link_oam_port_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ethernet-link-oam.status.interface.peer.get",
      "group-name": "ethernet-link-oam.status.interface.peer",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_eth_link_oam_port_peer_status_t"
        }
      ]
    },
    {
      "method-name": "ethernet-link-oam.status.interface.peer.get",
      "description": "This is an overload of ethernet-link-oam.status.interface.peer.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ethernet-link-oam.status.interface.peer",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_eth_link_oam_port_peer_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ethernet-link-oam.status.interface.link-event.get",
      "group-name": "ethernet-link-oam.status.interface.link-event",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_eth_link_oam_port_link_event_status_t"
        }
      ]
    },
    {
      "method-name": "ethernet-link-oam.status.interface.link-event.get",
      "description": "This is an overload of ethernet-link-oam.status.interface.link-event.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ethernet-link-oam.status.interface.link-event",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_eth_link_oam_port_link_event_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ethernet-link-oam.status.interface.peer-link-event.get",
      "group-name": "ethernet-link-oam.status.interface.peer-link-event",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_eth_link_oam_port_link_event_status_t"
        }
      ]
    },
    {
      "method-name": "ethernet-link-oam.status.interface.peer-link-event.get",
      "description": "This is an overload of ethernet-link-oam.status.interface.peer-link-event.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ethernet-link-oam.status.interface.peer-link-event",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_eth_link_oam_port_link_event_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ethernet-link-oam.statistics.interface.get",
      "group-name": "ethernet-link-oam.statistics.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_eth_link_oam_statistics_t"
        }
      ]
    },
    {
      "method-name": "ethernet-link-oam.statistics.interface.get",
      "description": "This is an overload of ethernet-link-oam.statistics.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ethernet-link-oam.statistics.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_eth_link_oam_statistics_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ethernet-link-oam.statistics.interface.critical-link-event.get",
      "group-name": "ethernet-link-oam.statistics.interface.critical-link-event",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_eth_link_oam_crit_link_event_statistics_t"
        }
      ]
    },
    {
      "method-name": "ethernet-link-oam.statistics.interface.critical-link-event.get",
      "description": "This is an overload of ethernet-link-oam.statistics.interface.critical-link-event.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ethernet-link-oam.statistics.interface.critical-link-event",
      "notification": "ethernet-link-oam.statistics.interface.critical-link-event.update",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_eth_link_oam_crit_link_event_statistics_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ethernet-link-oam.control.statistics.interface.clear.set",
      "group-name": "ethernet-link-oam.control.statistics.interface.clear",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_bool_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mpls.config.global.main.get",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "conf",
          "type": "vtss_appl_mplstp_global_t"
        }
      ]
    },
    {
      "method-name": "mpls.config.global.main.set",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "conf",
          "type": "vtss_appl_mplstp_global_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mpls.config.link.get",
      "group-name": "mpls.config.link",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "tp_link_num",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "conf",
          "type": "vtss_appl_mplstp_link_t"
        }
      ]
    },
    {
      "method-name": "mpls.config.link.get",
      "description": "This is an overload of mpls.config.link.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mpls.config.link",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "tp_link_num",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "conf",
                  "type": "vtss_appl_mplstp_link_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mpls.config.link.set",
      "group-name": "mpls.config.link",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "tp_link_num",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_mplstp_link_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mpls.config.link.add",
      "group-name": "mpls.config.link",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "tp_link_num",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_mplstp_link_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mpls.config.link.del",
      "group-name": "mpls.config.link",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "tp_link_num",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mpls.config.tunnel.get",
      "group-name": "mpls.config.tunnel",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "tunnel_tp_num",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "conf",
          "type": "vtss_appl_mplstp_tunnel_t"
        }
      ]
    },
    {
      "method-name": "mpls.config.tunnel.get",
      "description": "This is an overload of mpls.config.tunnel.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mpls.config.tunnel",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "tunnel_tp_num",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "conf",
                  "type": "vtss_appl_mplstp_tunnel_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mpls.config.tunnel.set",
      "group-name": "mpls.config.tunnel",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "tunnel_tp_num",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_mplstp_tunnel_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mpls.config.tunnel.add",
      "group-name": "mpls.config.tunnel",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "tunnel_tp_num",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_mplstp_tunnel_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mpls.config.tunnel.del",
      "group-name": "mpls.config.tunnel",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "tunnel_tp_num",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mpls.config.lsp.get",
      "group-name": "mpls.config.lsp",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "lsp_num",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "conf",
          "type": "vtss_appl_mplstp_lsp_t"
        }
      ]
    },
    {
      "method-name": "mpls.config.lsp.get",
      "description": "This is an overload of mpls.config.lsp.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mpls.config.lsp",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "lsp_num",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "conf",
                  "type": "vtss_appl_mplstp_lsp_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mpls.config.lsp.set",
      "group-name": "mpls.config.lsp",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "lsp_num",
          "type": "int32_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_mplstp_lsp_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mpls.config.lsp.add",
      "group-name": "mpls.config.lsp",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "lsp_num",
          "type": "int32_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_mplstp_lsp_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mpls.config.lsp.del",
      "group-name": "mpls.config.lsp",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "lsp_num",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mpls.config.pw.get",
      "group-name": "mpls.config.pw",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "pw_num",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "conf",
          "type": "vtss_appl_mplstp_pw_t"
        }
      ]
    },
    {
      "method-name": "mpls.config.pw.get",
      "description": "This is an overload of mpls.config.pw.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mpls.config.pw",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "pw_num",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "conf",
                  "type": "vtss_appl_mplstp_pw_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mpls.config.pw.set",
      "group-name": "mpls.config.pw",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "pw_num",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_mplstp_pw_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mpls.config.pw.add",
      "group-name": "mpls.config.pw",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "pw_num",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_mplstp_pw_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mpls.config.pw.del",
      "group-name": "mpls.config.pw",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "pw_num",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mpls.config.cosmap.get",
      "group-name": "mpls.config.cosmap",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RO"
      },
      "params": [
        {
          "name": "cos_map_id",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "conf",
          "type": "vtss_appl_mplstp_cosmap_t"
        }
      ]
    },
    {
      "method-name": "mpls.config.cosmap.get",
      "description": "This is an overload of mpls.config.cosmap.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mpls.config.cosmap",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "cos_map_id",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "conf",
                  "type": "vtss_appl_mplstp_cosmap_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mpls.config.cosmap.set",
      "group-name": "mpls.config.cosmap",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "cos_map_id",
          "type": "int32_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_mplstp_cosmap_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mpls.config.cosmap.add",
      "group-name": "mpls.config.cosmap",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "cos_map_id",
          "type": "int32_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_mplstp_cosmap_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mpls.config.cosmap.del",
      "group-name": "mpls.config.cosmap",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "CONFIG_RW"
      },
      "params": [
        {
          "name": "cos_map_id",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mpls.status.link.get",
      "group-name": "mpls.status.link",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "tp_link_num",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "status",
          "type": "vtss_appl_mplstp_link_status_t"
        }
      ]
    },
    {
      "method-name": "mpls.status.link.get",
      "description": "This is an overload of mpls.status.link.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mpls.status.link",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "tp_link_num",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "status",
                  "type": "vtss_appl_mplstp_link_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mpls.status.tunnel.get",
      "group-name": "mpls.status.tunnel",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "tunnel_tp_num",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "status",
          "type": "vtss_appl_mplstp_tunnel_status_t"
        }
      ]
    },
    {
      "method-name": "mpls.status.tunnel.get",
      "description": "This is an overload of mpls.status.tunnel.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mpls.status.tunnel",
      "notification": "mpls.status.tunnel.update",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "tunnel_tp_num",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "status",
                  "type": "vtss_appl_mplstp_tunnel_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mpls.status.lsp.get",
      "group-name": "mpls.status.lsp",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "lsp_num",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "status",
          "type": "vtss_appl_mplstp_lsp_status_t"
        }
      ]
    },
    {
      "method-name": "mpls.status.lsp.get",
      "description": "This is an overload of mpls.status.lsp.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mpls.status.lsp",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "lsp_num",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "status",
                  "type": "vtss_appl_mplstp_lsp_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mpls.status.pw.get",
      "group-name": "mpls.status.pw",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "pw_num",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "status",
          "type": "vtss_appl_mplstp_pw_status_t"
        }
      ]
    },
    {
      "method-name": "mpls.status.pw.get",
      "description": "This is an overload of mpls.status.pw.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mpls.status.pw",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "pw_num",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "status",
                  "type": "vtss_appl_mplstp_pw_status_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mpls.statistics.tunnel.get",
      "group-name": "mpls.statistics.tunnel",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "tunnel_num",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "counters",
          "type": "vtss_appl_mplstp_counters_t"
        }
      ]
    },
    {
      "method-name": "mpls.statistics.tunnel.get",
      "description": "This is an overload of mpls.statistics.tunnel.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mpls.statistics.tunnel",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "tunnel_num",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "counters",
                  "type": "vtss_appl_mplstp_counters_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mpls.statistics.lsp.get",
      "group-name": "mpls.statistics.lsp",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "lsp_num",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "fwdCounters",
          "type": "vtss_appl_mplstp_fwd_counters_t"
        },
        {
          "name": "rewCounters",
          "type": "vtss_appl_mplstp_rev_counters_t"
        }
      ]
    },
    {
      "method-name": "mpls.statistics.lsp.get",
      "description": "This is an overload of mpls.statistics.lsp.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mpls.statistics.lsp",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "lsp_num",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "fwdCounters",
                        "type": "vtss_appl_mplstp_fwd_counters_t"
                      },
                      {
                        "name": "rewCounters",
                        "type": "vtss_appl_mplstp_rev_counters_t"
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mpls.statistics.pw.get",
      "group-name": "mpls.statistics.pw",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "pw_num",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "counters",
          "type": "vtss_appl_mplstp_counters_t"
        }
      ]
    },
    {
      "method-name": "mpls.statistics.pw.get",
      "description": "This is an overload of mpls.statistics.pw.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mpls.statistics.pw",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "pw_num",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "counters",
                  "type": "vtss_appl_mplstp_counters_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mpls.control.interface.get",
      "group-name": "mpls.control.interface",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "ifindex",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mplstp_control_t"
        }
      ]
    },
    {
      "method-name": "mpls.control.interface.get",
      "description": "This is an overload of mpls.control.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mpls.control.interface",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ifindex",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mplstp_control_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mpls.control.interface.set",
      "group-name": "mpls.control.interface",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "STATUS_RW"
      },
      "params": [
        {
          "name": "ifindex",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mplstp_control_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mpls.control.lsp.get",
      "group-name": "mpls.control.lsp",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "lsp_num",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_mplstp_control_t"
        }
      ]
    },
    {
      "method-name": "mpls.control.lsp.get",
      "description": "This is an overload of mpls.control.lsp.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mpls.control.lsp",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "lsp_num",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_mplstp_control_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mpls.control.lsp.set",
      "group-name": "mpls.control.lsp",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "STATUS_RW"
      },
      "params": [
        {
          "name": "lsp_num",
          "type": "int32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_mplstp_control_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mpls.capabilities.get",
      "web-privilege": {
        "id": "MPLS_TP",
        "type": "STATUS_RO"
      },
      "params": [

      ],
      "result": [
        {
          "name": "cap",
          "type": "vtss_appl_mplstp_capabilities_t"
        }
      ]
    },
    {
      "method-name": "sflow.config.agent.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_sflow_agent_t"
        }
      ]
    },
    {
      "method-name": "sflow.config.agent.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_sflow_agent_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "sflow.config.rcvr.get",
      "group-name": "sflow.config.rcvr",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_sflow_rcvr_t"
        }
      ]
    },
    {
      "method-name": "sflow.config.rcvr.get",
      "description": "This is an overload of sflow.config.rcvr.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "sflow.config.rcvr",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_sflow_rcvr_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "sflow.config.rcvr.set",
      "group-name": "sflow.config.rcvr",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_sflow_rcvr_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "sflow.config.rcvr.add",
      "group-name": "sflow.config.rcvr",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_sflow_rcvr_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "sflow.config.rcvr.del",
      "group-name": "sflow.config.rcvr",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "sflow.config.fs.get",
      "group-name": "sflow.config.fs",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "uint16_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_sflow_fs_t"
        }
      ]
    },
    {
      "method-name": "sflow.config.fs.get",
      "description": "This is an overload of sflow.config.fs.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "sflow.config.fs",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "uint16_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_sflow_fs_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "sflow.config.fs.set",
      "group-name": "sflow.config.fs",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "uint16_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_sflow_fs_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "sflow.config.fs.add",
      "group-name": "sflow.config.fs",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "uint16_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_sflow_fs_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "sflow.config.fs.del",
      "group-name": "sflow.config.fs",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "uint16_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "sflow.config.cp.get",
      "group-name": "sflow.config.cp",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "uint16_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_sflow_cp_t"
        }
      ]
    },
    {
      "method-name": "sflow.config.cp.get",
      "description": "This is an overload of sflow.config.cp.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "sflow.config.cp",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "uint16_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_sflow_cp_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "sflow.config.cp.set",
      "group-name": "sflow.config.cp",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "uint16_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_sflow_cp_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "sflow.config.cp.add",
      "group-name": "sflow.config.cp",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "uint16_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_appl_sflow_cp_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "sflow.config.cp.del",
      "group-name": "sflow.config.cp",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "uint16_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "sflow.status.rcvr.get",
      "group-name": "sflow.status.rcvr",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_sflow_rcvr_info_t"
        }
      ]
    },
    {
      "method-name": "sflow.status.rcvr.get",
      "description": "This is an overload of sflow.status.rcvr.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "sflow.status.rcvr",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_sflow_rcvr_info_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "sflow.statistics.rcvr.get",
      "group-name": "sflow.statistics.rcvr",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_sflow_rcvr_statistics_t"
        }
      ]
    },
    {
      "method-name": "sflow.statistics.rcvr.get",
      "description": "This is an overload of sflow.statistics.rcvr.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "sflow.statistics.rcvr",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_sflow_rcvr_statistics_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "sflow.statistics.instance.get",
      "group-name": "sflow.statistics.instance",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "uint16_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_sflow_instance_statistics_t"
        }
      ]
    },
    {
      "method-name": "sflow.statistics.instance.get",
      "description": "This is an overload of sflow.statistics.instance.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "sflow.statistics.instance",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "uint16_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_sflow_instance_statistics_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "sflow.control.rcvr.get",
      "group-name": "sflow.control.rcvr",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_bool_t"
        }
      ]
    },
    {
      "method-name": "sflow.control.rcvr.get",
      "description": "This is an overload of sflow.control.rcvr.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "sflow.control.rcvr",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_bool_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "sflow.control.rcvr.set",
      "group-name": "sflow.control.rcvr",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_bool_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "sflow.control.instance.get",
      "group-name": "sflow.control.instance",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "uint16_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_bool_t"
        }
      ]
    },
    {
      "method-name": "sflow.control.instance.get",
      "description": "This is an overload of sflow.control.instance.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "sflow.control.instance",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "uint16_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_bool_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "sflow.control.instance.set",
      "group-name": "sflow.control.instance",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "uint16_t"
        },
        {
          "name": "Argument3",
          "type": "vtss_bool_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vcl.config.protocol.proto.get",
      "group-name": "vcl.config.protocol.proto",
      "params": [
        {
          "name": "protocol",
          "type": "vtss_appl_vcl_proto_t"
        }
      ],
      "result": [
        {
          "name": "name",
          "type": "vtss_appl_vcl_proto_group_conf_proto_t"
        }
      ]
    },
    {
      "method-name": "vcl.config.protocol.proto.get",
      "description": "This is an overload of vcl.config.protocol.proto.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "vcl.config.protocol.proto",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "protocol",
                  "type": "vtss_appl_vcl_proto_t"
                },
                {
                  "name": "val",
                  "semantic-name": "name",
                  "type": "vtss_appl_vcl_proto_group_conf_proto_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "vcl.config.protocol.proto.set",
      "group-name": "vcl.config.protocol.proto",
      "params": [
        {
          "name": "protocol",
          "type": "vtss_appl_vcl_proto_t"
        },
        {
          "name": "name",
          "type": "vtss_appl_vcl_proto_group_conf_proto_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vcl.config.protocol.proto.add",
      "group-name": "vcl.config.protocol.proto",
      "params": [
        {
          "name": "protocol",
          "type": "vtss_appl_vcl_proto_t"
        },
        {
          "name": "name",
          "type": "vtss_appl_vcl_proto_group_conf_proto_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vcl.config.protocol.proto.del",
      "group-name": "vcl.config.protocol.proto",
      "params": [
        {
          "name": "protocol",
          "type": "vtss_appl_vcl_proto_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vcl.config.protocol.group.get",
      "group-name": "vcl.config.protocol.group",
      "params": [
        {
          "name": "groupname",
          "type": "vtss_appl_vcl_proto_group_conf_proto_t"
        }
      ],
      "result": [
        {
          "name": "conf",
          "type": "vtss_appl_vcl_generic_conf_global_t"
        }
      ]
    },
    {
      "method-name": "vcl.config.protocol.group.get",
      "description": "This is an overload of vcl.config.protocol.group.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "vcl.config.protocol.group",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "groupname",
                  "type": "vtss_appl_vcl_proto_group_conf_proto_t"
                },
                {
                  "name": "val",
                  "semantic-name": "conf",
                  "type": "vtss_appl_vcl_generic_conf_global_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "vcl.config.protocol.group.set",
      "group-name": "vcl.config.protocol.group",
      "params": [
        {
          "name": "groupname",
          "type": "vtss_appl_vcl_proto_group_conf_proto_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_vcl_generic_conf_global_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vcl.config.protocol.group.add",
      "group-name": "vcl.config.protocol.group",
      "params": [
        {
          "name": "groupname",
          "type": "vtss_appl_vcl_proto_group_conf_proto_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_vcl_generic_conf_global_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vcl.config.protocol.group.del",
      "group-name": "vcl.config.protocol.group",
      "params": [
        {
          "name": "groupname",
          "type": "vtss_appl_vcl_proto_group_conf_proto_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vcl.config.mac.get",
      "group-name": "vcl.config.mac",
      "params": [
        {
          "name": "mac",
          "type": "vtss_mac_t"
        }
      ],
      "result": [
        {
          "name": "conf",
          "type": "vtss_appl_vcl_generic_conf_global_t"
        }
      ]
    },
    {
      "method-name": "vcl.config.mac.get",
      "description": "This is an overload of vcl.config.mac.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "vcl.config.mac",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "mac",
                  "type": "vtss_mac_t"
                },
                {
                  "name": "val",
                  "semantic-name": "conf",
                  "type": "vtss_appl_vcl_generic_conf_global_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "vcl.config.mac.set",
      "group-name": "vcl.config.mac",
      "params": [
        {
          "name": "mac",
          "type": "vtss_mac_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_vcl_generic_conf_global_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vcl.config.mac.add",
      "group-name": "vcl.config.mac",
      "params": [
        {
          "name": "mac",
          "type": "vtss_mac_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_vcl_generic_conf_global_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vcl.config.mac.del",
      "group-name": "vcl.config.mac",
      "params": [
        {
          "name": "mac",
          "type": "vtss_mac_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vcl.config.ip.get",
      "group-name": "vcl.config.ip",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ipv4_network_t"
        }
      ],
      "result": [
        {
          "name": "conf",
          "type": "vtss_appl_vcl_generic_conf_global_t"
        }
      ]
    },
    {
      "method-name": "vcl.config.ip.get",
      "description": "This is an overload of vcl.config.ip.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "vcl.config.ip",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ipv4_network_t"
                },
                {
                  "name": "val",
                  "semantic-name": "conf",
                  "type": "vtss_appl_vcl_generic_conf_global_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "vcl.config.ip.set",
      "group-name": "vcl.config.ip",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ipv4_network_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_vcl_generic_conf_global_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vcl.config.ip.add",
      "group-name": "vcl.config.ip",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ipv4_network_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_vcl_generic_conf_global_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vcl.config.ip.del",
      "group-name": "vcl.config.ip",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ipv4_network_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vlan-translation.config.translation.get",
      "group-name": "vlan-translation.config.translation",
      "params": [
        {
          "name": "mappingkey",
          "type": "vtss_appl_vlan_translation_group_mapping_key_t"
        }
      ],
      "result": [
        {
          "name": "tvid",
          "type": "int32_t"
        }
      ]
    },
    {
      "method-name": "vlan-translation.config.translation.get",
      "description": "This is an overload of vlan-translation.config.translation.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "vlan-translation.config.translation",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "mappingkey",
                  "type": "vtss_appl_vlan_translation_group_mapping_key_t"
                },
                {
                  "name": "val",
                  "semantic-name": "tvid",
                  "type": "int32_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "vlan-translation.config.translation.set",
      "group-name": "vlan-translation.config.translation",
      "params": [
        {
          "name": "mappingkey",
          "type": "vtss_appl_vlan_translation_group_mapping_key_t"
        },
        {
          "name": "tvid",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vlan-translation.config.translation.add",
      "group-name": "vlan-translation.config.translation",
      "params": [
        {
          "name": "mappingkey",
          "type": "vtss_appl_vlan_translation_group_mapping_key_t"
        },
        {
          "name": "tvid",
          "type": "int32_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vlan-translation.config.translation.del",
      "group-name": "vlan-translation.config.translation",
      "params": [
        {
          "name": "mappingkey",
          "type": "vtss_appl_vlan_translation_group_mapping_key_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vlan-translation.config.interfaces.get",
      "group-name": "vlan-translation.config.interfaces",
      "params": [
        {
          "name": "ifidx",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "conf",
          "type": "vtss_appl_vlan_translation_if_conf_value_t"
        }
      ]
    },
    {
      "method-name": "vlan-translation.config.interfaces.get",
      "description": "This is an overload of vlan-translation.config.interfaces.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "vlan-translation.config.interfaces",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ifidx",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "conf",
                  "type": "vtss_appl_vlan_translation_if_conf_value_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "vlan-translation.config.interfaces.set",
      "group-name": "vlan-translation.config.interfaces",
      "params": [
        {
          "name": "ifidx",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_vlan_translation_if_conf_value_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "vlan-translation.capabilities.get",
      "params": [

      ],
      "result": [
        {
          "name": "capabilities",
          "type": "vtss_appl_vlan_translation_capabilities_t"
        }
      ]
    },
    {
      "method-name": "gvrp.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_gvrp_config_globals_t"
        }
      ]
    },
    {
      "method-name": "gvrp.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_gvrp_config_globals_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "gvrp.config.interface.get",
      "group-name": "gvrp.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_gvrp_config_interface_t"
        }
      ]
    },
    {
      "method-name": "gvrp.config.interface.get",
      "description": "This is an overload of gvrp.config.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "gvrp.config.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_gvrp_config_interface_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "gvrp.config.interface.set",
      "group-name": "gvrp.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_gvrp_config_interface_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mvrp.config.globals.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_mvrp_config_global_t"
        }
      ]
    },
    {
      "method-name": "mvrp.config.globals.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_mvrp_config_global_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "mvrp.config.interfaces.get",
      "group-name": "mvrp.config.interfaces",
      "params": [
        {
          "name": "ifidx",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "conf",
          "type": "vtss_appl_mvrp_config_interface_t"
        }
      ]
    },
    {
      "method-name": "mvrp.config.interfaces.get",
      "description": "This is an overload of mvrp.config.interfaces.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "mvrp.config.interfaces",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "ifidx",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "conf",
                  "type": "vtss_appl_mvrp_config_interface_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "mvrp.config.interfaces.set",
      "group-name": "mvrp.config.interfaces",
      "params": [
        {
          "name": "ifidx",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "conf",
          "type": "vtss_appl_mvrp_config_interface_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "loop-protect.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_loop_protect_conf_t"
        }
      ]
    },
    {
      "method-name": "loop-protect.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_loop_protect_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "loop-protect.config.interface.get",
      "group-name": "loop-protect.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_loop_protect_port_conf_t"
        }
      ]
    },
    {
      "method-name": "loop-protect.config.interface.get",
      "description": "This is an overload of loop-protect.config.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "loop-protect.config.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_loop_protect_port_conf_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "loop-protect.config.interface.set",
      "group-name": "loop-protect.config.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_loop_protect_port_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "loop-protect.status.interface.get",
      "group-name": "loop-protect.status.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_loop_protect_port_info_t"
        }
      ]
    },
    {
      "method-name": "loop-protect.status.interface.get",
      "description": "This is an overload of loop-protect.status.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "loop-protect.status.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_loop_protect_port_info_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "daylight-saving.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_clock_conf_t"
        }
      ]
    },
    {
      "method-name": "daylight-saving.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_clock_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dhcp-server.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_dhcp_server_config_globals_t"
        }
      ]
    },
    {
      "method-name": "dhcp-server.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_dhcp_server_config_globals_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dhcp-server.config.vlan.get",
      "group-name": "dhcp-server.config.vlan",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_dhcp_server_config_vlan_entry_t"
        }
      ]
    },
    {
      "method-name": "dhcp-server.config.vlan.get",
      "description": "This is an overload of dhcp-server.config.vlan.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "dhcp-server.config.vlan",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_dhcp_server_config_vlan_entry_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "dhcp-server.config.vlan.set",
      "group-name": "dhcp-server.config.vlan",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_dhcp_server_config_vlan_entry_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dhcp-server.config.excluded.get",
      "group-name": "dhcp-server.config.excluded",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ipv4_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ipv4_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dhcp-server.config.excluded.get",
      "description": "This is an overload of dhcp-server.config.excluded.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "dhcp-server.config.excluded",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ipv4_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "vtss_ipv4_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "type": null
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "dhcp-server.config.excluded.set",
      "group-name": "dhcp-server.config.excluded",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ipv4_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ipv4_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dhcp-server.config.excluded.add",
      "group-name": "dhcp-server.config.excluded",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ipv4_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ipv4_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dhcp-server.config.excluded.del",
      "group-name": "dhcp-server.config.excluded",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ipv4_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_ipv4_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dhcp-server.config.pool.get",
      "group-name": "dhcp-server.config.pool",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_dhcp_server_config_pool_entry_t"
        }
      ]
    },
    {
      "method-name": "dhcp-server.config.pool.get",
      "description": "This is an overload of dhcp-server.config.pool.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "dhcp-server.config.pool",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "char *"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_dhcp_server_config_pool_entry_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "dhcp-server.config.pool.set",
      "group-name": "dhcp-server.config.pool",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_dhcp_server_config_pool_entry_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dhcp-server.config.pool.add",
      "group-name": "dhcp-server.config.pool",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_dhcp_server_config_pool_entry_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dhcp-server.config.pool.del",
      "group-name": "dhcp-server.config.pool",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dhcp-server.status.declined.get",
      "group-name": "dhcp-server.status.declined",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_dhcp_server_status_declined_ip_entry_t"
        }
      ]
    },
    {
      "method-name": "dhcp-server.status.declined.get",
      "description": "This is an overload of dhcp-server.status.declined.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "dhcp-server.status.declined",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_dhcp_server_status_declined_ip_entry_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "dhcp-server.status.binding.get",
      "group-name": "dhcp-server.status.binding",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ipv4_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_dhcp_server_status_binding_entry_t"
        }
      ]
    },
    {
      "method-name": "dhcp-server.status.binding.get",
      "description": "This is an overload of dhcp-server.status.binding.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "dhcp-server.status.binding",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ipv4_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_dhcp_server_status_binding_entry_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "dhcp-server.control.statistics.clear.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_dhcp_server_control_statistics_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dhcp-server.control.binding.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_dhcp_server_control_binding_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "dhcp-server.statistics.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_dhcp_server_status_statistics_t"
        }
      ]
    },
    {
      "method-name": "json-rpc-notification.config.destination.get",
      "group-name": "json-rpc-notification.config.destination",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_json_rpc_notification_dest_conf_t "
        }
      ]
    },
    {
      "method-name": "json-rpc-notification.config.destination.get",
      "description": "This is an overload of json-rpc-notification.config.destination.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "json-rpc-notification.config.destination",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "char *"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_json_rpc_notification_dest_conf_t "
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "json-rpc-notification.config.destination.set",
      "group-name": "json-rpc-notification.config.destination",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_json_rpc_notification_dest_conf_t "
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "json-rpc-notification.config.destination.add",
      "group-name": "json-rpc-notification.config.destination",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_json_rpc_notification_dest_conf_t "
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "json-rpc-notification.config.destination.del",
      "group-name": "json-rpc-notification.config.destination",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "json-rpc-notification.config.notification.get",
      "group-name": "json-rpc-notification.config.notification",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "char *"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "json-rpc-notification.config.notification.get",
      "description": "This is an overload of json-rpc-notification.config.notification.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "json-rpc-notification.config.notification",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "char *"
                      },
                      {
                        "name": "Argument2",
                        "type": "char *"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "type": null
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "json-rpc-notification.config.notification.set",
      "group-name": "json-rpc-notification.config.notification",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "char *"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "json-rpc-notification.config.notification.add",
      "group-name": "json-rpc-notification.config.notification",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "char *"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "json-rpc-notification.config.notification.del",
      "group-name": "json-rpc-notification.config.notification",
      "params": [
        {
          "name": "Argument1",
          "type": "char *"
        },
        {
          "name": "Argument2",
          "type": "char *"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "performance-monitor.config.global.transfer-schedule.hour.get",
      "group-name": "performance-monitor.config.global.transfer-schedule.hour",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "schedule_hour",
          "type": "vtss_appl_pm_transfer_schedule_t"
        }
      ]
    },
    {
      "method-name": "performance-monitor.config.global.transfer-schedule.hour.get",
      "description": "This is an overload of performance-monitor.config.global.transfer-schedule.hour.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "performance-monitor.config.global.transfer-schedule.hour",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "schedule_hour",
                  "type": "vtss_appl_pm_transfer_schedule_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "performance-monitor.config.global.transfer-schedule.hour.set",
      "group-name": "performance-monitor.config.global.transfer-schedule.hour",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        },
        {
          "name": "schedule_hour",
          "type": "vtss_appl_pm_transfer_schedule_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "performance-monitor.config.global.transfer-schedule.quarter.get",
      "group-name": "performance-monitor.config.global.transfer-schedule.quarter",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "schedule_quarter",
          "type": "vtss_appl_pm_transfer_schedule_t"
        }
      ]
    },
    {
      "method-name": "performance-monitor.config.global.transfer-schedule.quarter.get",
      "description": "This is an overload of performance-monitor.config.global.transfer-schedule.quarter.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "performance-monitor.config.global.transfer-schedule.quarter",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "schedule_quarter",
                  "type": "vtss_appl_pm_transfer_schedule_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "performance-monitor.config.global.transfer-schedule.quarter.set",
      "group-name": "performance-monitor.config.global.transfer-schedule.quarter",
      "params": [
        {
          "name": "Argument1",
          "type": "uint32_t"
        },
        {
          "name": "schedule_quarter",
          "type": "vtss_appl_pm_transfer_schedule_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "performance-monitor.config.global.transfer-schedule.offset.get",
      "params": [

      ],
      "result": [
        {
          "name": "schedule_offset",
          "type": "vtss_appl_pm_transfer_offset_t"
        }
      ]
    },
    {
      "method-name": "performance-monitor.config.global.transfer-schedule.offset.set",
      "params": [
        {
          "name": "schedule_offset",
          "type": "vtss_appl_pm_transfer_offset_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "performance-monitor.config.global.management.get",
      "params": [

      ],
      "result": [
        {
          "name": "global_conf",
          "type": "vtss_appl_pm_global_conf_t"
        }
      ]
    },
    {
      "method-name": "performance-monitor.config.global.management.set",
      "params": [
        {
          "name": "global_conf",
          "type": "vtss_appl_pm_global_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "performance-monitor.config.global.transfer.get",
      "params": [

      ],
      "result": [
        {
          "name": "transfer_conf",
          "type": "vtss_appl_pm_transfer_conf_t"
        }
      ]
    },
    {
      "method-name": "performance-monitor.config.global.transfer.set",
      "params": [
        {
          "name": "transfer_conf",
          "type": "vtss_appl_pm_transfer_conf_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "performance-monitor.status.interval.get",
      "group-name": "performance-monitor.status.interval",
      "params": [
        {
          "name": "intvl_info_index",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "intvl_info_data",
          "type": "vtss_appl_pm_interval_info_t"
        }
      ]
    },
    {
      "method-name": "performance-monitor.status.interval.get",
      "description": "This is an overload of performance-monitor.status.interval.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "performance-monitor.status.interval",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "intvl_info_index",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "intvl_info_data",
                  "type": "vtss_appl_pm_interval_info_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "performance-monitor.statistics.lm.get",
      "group-name": "performance-monitor.statistics.lm",
      "params": [
        {
          "name": "lm_index",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "lm_data",
          "type": "vtss_appl_pm_lm_stats_data_t"
        }
      ]
    },
    {
      "method-name": "performance-monitor.statistics.lm.get",
      "description": "This is an overload of performance-monitor.statistics.lm.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "performance-monitor.statistics.lm",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "lm_index",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "lm_data",
                  "type": "vtss_appl_pm_lm_stats_data_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "performance-monitor.statistics.dm.get",
      "group-name": "performance-monitor.statistics.dm",
      "params": [
        {
          "name": "dm_index",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "dm_data",
          "type": "vtss_appl_pm_dm_stats_data_t"
        }
      ]
    },
    {
      "method-name": "performance-monitor.statistics.dm.get",
      "description": "This is an overload of performance-monitor.statistics.dm.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "performance-monitor.statistics.dm",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "dm_index",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "dm_data",
                  "type": "vtss_appl_pm_dm_stats_data_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "performance-monitor.statistics.dm-bin.get",
      "group-name": "performance-monitor.statistics.dm-bin",
      "params": [
        {
          "name": "dm_bin_index",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "dm_bin_data",
          "type": "vtss_appl_pm_dm_bin_stats_data_t"
        }
      ]
    },
    {
      "method-name": "performance-monitor.statistics.dm-bin.get",
      "description": "This is an overload of performance-monitor.statistics.dm-bin.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "performance-monitor.statistics.dm-bin",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "dm_bin_index",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "dm_bin_data",
                  "type": "vtss_appl_pm_dm_bin_stats_data_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "performance-monitor.statistics.evc.get",
      "group-name": "performance-monitor.statistics.evc",
      "params": [
        {
          "name": "evc_index",
          "type": "uint32_t"
        }
      ],
      "result": [
        {
          "name": "evc_data",
          "type": "vtss_appl_pm_evc_stats_data_t"
        }
      ]
    },
    {
      "method-name": "performance-monitor.statistics.evc.get",
      "description": "This is an overload of performance-monitor.statistics.evc.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "performance-monitor.statistics.evc",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "evc_index",
                  "type": "uint32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "evc_data",
                  "type": "vtss_appl_pm_evc_stats_data_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "performance-monitor.control.global.set",
      "params": [
        {
          "name": "pm_control_globals",
          "type": "vtss_appl_pm_control_globals_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ddmi.config.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ddmi_config_globals_t"
        }
      ]
    },
    {
      "method-name": "ddmi.config.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_ddmi_config_globals_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "ddmi.status.interface.get",
      "group-name": "ddmi.status.interface",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_ddmi_status_interface_entry_t"
        }
      ]
    },
    {
      "method-name": "ddmi.status.interface.get",
      "description": "This is an overload of ddmi.status.interface.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ddmi.status.interface",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_ddmi_status_interface_entry_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "ddmi.status.interface.crossed-threshold.get",
      "group-name": "ddmi.status.interface.crossed-threshold",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_ddmi_event_type_t"
        }
      ],
      "result": [
        {
          "name": "Argument3",
          "type": "vtss_appl_ddmi_event_entry_t"
        }
      ]
    },
    {
      "method-name": "ddmi.status.interface.crossed-threshold.get",
      "description": "This is an overload of ddmi.status.interface.crossed-threshold.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "ddmi.status.interface.crossed-threshold",
      "notification": "ddmi.status.interface.crossed-threshold.update",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "type": {
                    "class": "Tuple",
                    "encoding-type": "Array",
                    "elements": [
                      {
                        "name": "Argument1",
                        "type": "vtss_ifindex_t"
                      },
                      {
                        "name": "Argument2",
                        "type": "vtss_appl_ddmi_event_type_t"
                      }
                    ]
                  }
                },
                {
                  "name": "val",
                  "semantic-name": "Argument3",
                  "type": "vtss_appl_ddmi_event_entry_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "udld.config.interface.parameters.get",
      "group-name": "udld.config.interface.parameters",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_udld_port_conf_struct_t"
        }
      ]
    },
    {
      "method-name": "udld.config.interface.parameters.get",
      "description": "This is an overload of udld.config.interface.parameters.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "udld.config.interface.parameters",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_udld_port_conf_struct_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "udld.config.interface.parameters.set",
      "group-name": "udld.config.interface.parameters",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        },
        {
          "name": "Argument2",
          "type": "vtss_appl_udld_port_conf_struct_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "udld.status.interface.local-device.get",
      "group-name": "udld.status.interface.local-device",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_udld_port_info_t"
        }
      ]
    },
    {
      "method-name": "udld.status.interface.local-device.get",
      "description": "This is an overload of udld.status.interface.local-device.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "udld.status.interface.local-device",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_udld_port_info_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "udld.status.interface.neighbour.get",
      "group-name": "udld.status.interface.neighbour",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_ifindex_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_udld_neighbor_info_t"
        }
      ]
    },
    {
      "method-name": "udld.status.interface.neighbour.get",
      "description": "This is an overload of udld.status.interface.neighbour.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "udld.status.interface.neighbour",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "vtss_ifindex_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_udld_neighbor_info_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "icfg.status.file.get",
      "group-name": "icfg.status.file",
      "params": [
        {
          "name": "Argument1",
          "type": "int32_t"
        }
      ],
      "result": [
        {
          "name": "Argument2",
          "type": "vtss_appl_icfg_file_entry_t"
        }
      ]
    },
    {
      "method-name": "icfg.status.file.get",
      "description": "This is an overload of icfg.status.file.get without any input parameters. It is used to implement a get-all functionallity.",
      "group-name": "icfg.status.file",
      "params": [

      ],
      "result": [
        {
          "name": "res",
          "type": {
            "class": "Array",
            "encoding-type": "Array",
            "type": {
              "class": "Struct",
              "encoding-type": "Object",
              "elements": [
                {
                  "name": "key",
                  "semantic-name": "Argument1",
                  "type": "int32_t"
                },
                {
                  "name": "val",
                  "semantic-name": "Argument2",
                  "type": "vtss_appl_icfg_file_entry_t"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "method-name": "icfg.status.copy.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_icfg_status_copy_config_t"
        }
      ]
    },
    {
      "method-name": "icfg.control.global.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_icfg_control_t"
        }
      ]
    },
    {
      "method-name": "icfg.control.global.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_icfg_control_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "icfg.control.copy.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_icfg_copy_config_t"
        }
      ]
    },
    {
      "method-name": "icfg.control.copy.set",
      "params": [
        {
          "name": "Argument1",
          "type": "vtss_appl_icfg_copy_config_t"
        }
      ],
      "result": [

      ]
    },
    {
      "method-name": "icfg.statistics.file.get",
      "params": [

      ],
      "result": [
        {
          "name": "Argument1",
          "type": "vtss_appl_icfg_file_statistics_t"
        }
      ]
    },
    {
      "method-name": "json-rpc.status.introspection.generic.inventory.get",
      "description": "Generate a complete or a partial generic-specific specification of the JSON-RPC interface. The query string can be used to either generate a complete specification or a specification of a subset of the command tree.",
      "web-privilege": {
        "id": "JSON_RPC",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "query",
          "description": "The query may be used to specify from what point in the JSON-RPC command tree the specification should be generated",
          "type": "char *"
        }
      ],
      "result": [
        {
          "name": "spec",
          "description": "The retuned structure is the inventory generated from the query.",
          "type": "vtss_appl_json_rpc_inventory_t"
        }
      ]
    },
    {
      "method-name": "json-rpc.status.introspection.generic.nodes.get",
      "description": "Get a list of sub-nodes (namespace or methods) found relative to the query.",
      "web-privilege": {
        "id": "JSON_RPC",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "query",
          "description": "The query may be used to specify from what point in the JSON-RPC command tree the specification should be generated",
          "type": "char *"
        }
      ],
      "result": [
        {
          "name": "node_list",
          "description": "List of nodes (namespaces or methods)",
          "type": "std::vector<std::string>"
        }
      ]
    },
    {
      "method-name": "json-rpc.status.introspection.specific.inventory.get",
      "description": "Generate a complete or a partial target-specific specification of the JSON-RPC interface. The query string can be used to either generate a complete specification or a specification of a subset of the command tree.",
      "web-privilege": {
        "id": "JSON_RPC",
        "type": "STATUS_RO"
      },
      "params": [
        {
          "name": "query",
          "description": "The query may be used to specify from what point in the JSON-RPC command tree the specification should be generated",
          "type": "char *"
        }
      ],
      "result": [
        {
          "name": "spec",
          "description": "The retuned structure is the inventory generated from the query.",
          "type": "vtss_appl_json_rpc_inventory_t"
        }
      ]
    }
  ]
}